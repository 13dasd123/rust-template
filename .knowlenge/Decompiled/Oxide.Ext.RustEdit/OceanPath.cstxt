using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Oxide.Core.Plugins;
using Oxide.Ext.RustEdit;
using Oxide.Ext.RustEdit.Ocean;
using UnityEngine;

internal class OceanPath : REPlugin
{
	private List<Vector3> \u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e = new List<Vector3>();

	[MethodImpl(MethodImplOptions.NoInlining)]
	public OceanPath()
	{
		while (true)
		{
			int num = 704915311;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x5275AEA0)) % 5)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
					base.Title = global::<Module>.\u202b\u206d\u206e\u206e\u206a\u206d\u200b\u206a\u206e\u206a\u202a\u202a\u202e\u206b\u202a\u200c\u202b\u206e\u202d\u202c\u206e\u200b\u200e\u200f\u202d\u202a\u200f\u202b\u206c\u206a\u206e\u200c\u202d\u200c\u200b\u202c\u206e\u200f\u206a\u206a\u202e<string>(-1362797396);
					num = 329105372;
					continue;
				case 4u:
					base.Version = RustEditExtension.AssemblyVersion;
					\u200b\u200e\u200e\u200d\u202b\u206c\u200b\u200c\u202d\u206e\u202e\u200d\u200e\u206b\u206b\u206a\u206a\u200c\u206d\u200b\u200c\u206f\u200b\u206f\u206c\u202a\u206a\u202c\u206e\u200b\u206e\u200e\u206e\u202b\u202a\u202e\u206a\u202d\u206d\u202d\u202e.AddChatCommand(global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(-2024566533), this, ccmdShowOceanPath);
					num = 384166132;
					continue;
				case 3u:
					base.Author = RustEditExtension.AssemblyAuthors;
					num = (int)(num2 * 1697635188) ^ -473120023;
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[HookMethod("OnBoatPathGenerate")]
	private object OnBoatPathGenerate()
	{
		byte[] array = \u206e\u206f\u202e\u206f\u206b\u206a\u200e\u206a\u200c\u206e\u200e\u206f\u202a\u202a\u200f\u202c\u206c\u200e\u202e\u202d\u206f\u206c\u202c\u200f\u206f\u202d\u206b\u202a\u206d\u200b\u206f\u200b\u200f\u206f\u200b\u206b\u202e\u200b\u202a\u206b\u202e.\u202a\u202b\u206f\u206f\u200b\u206c\u206d\u206a\u206c\u206b\u202e\u202a\u202a\u206a\u200d\u206e\u206e\u202e\u202a\u200d\u200c\u202c\u206a\u200b\u200c\u200b\u206d\u206e\u206c\u200c\u206d\u200f\u202b\u200c\u202e\u200d\u200d\u202b\u202d\u206b\u202e(global::<Module>.\u202b\u206d\u206e\u206e\u206a\u206d\u200b\u206a\u206e\u206a\u202a\u202a\u202e\u206b\u202a\u200c\u202b\u206e\u202d\u202c\u206e\u200b\u200e\u200f\u202d\u202a\u200f\u202b\u206c\u206a\u206e\u200c\u202d\u200c\u200b\u202c\u206e\u200f\u206a\u206a\u202e<string>(1486881880));
		if (array == null)
		{
			goto IL_001e;
		}
		goto IL_015b;
		IL_001e:
		int num = -411343677;
		goto IL_0023;
		IL_0023:
		Vector3 item = default(Vector3);
		int num5 = default(int);
		SerializedPathList serializedPathList = default(SerializedPathList);
		bool flag = default(bool);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -1754578073)) % 15)
			{
			case 13u:
				break;
			case 1u:
				LogWarning(global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(-1708511650));
				return null;
			case 3u:
				return null;
			case 14u:
				\u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e.Add(item);
				num5++;
				num = ((int)num2 * -1003721756) ^ -998540845;
				continue;
			case 10u:
				goto IL_00d0;
			case 4u:
			{
				int num6;
				int num7;
				if (\u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e.Count == 0)
				{
					num6 = -6377132;
					num7 = num6;
				}
				else
				{
					num6 = -1271790923;
					num7 = num6;
				}
				num = num6 ^ (int)(num2 * 1241471613);
				continue;
			}
			case 8u:
				item = serializedPathList.vectorData[num5];
				num = -1476592900;
				continue;
			case 2u:
			{
				int num8;
				int num9;
				if (flag)
				{
					num8 = 328655833;
					num9 = num8;
				}
				else
				{
					num8 = 925829072;
					num9 = num8;
				}
				num = num8 ^ (int)(num2 * 960925321);
				continue;
			}
			case 0u:
				goto IL_015b;
			case 7u:
				num5 = 0;
				num = -2146812520;
				continue;
			case 9u:
				return null;
			case 6u:
				num = ((int)num2 * -1339481241) ^ -481322170;
				continue;
			case 12u:
			{
				int num3;
				int num4;
				if (serializedPathList == null)
				{
					num3 = 804226017;
					num4 = num3;
				}
				else
				{
					num3 = 807944306;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -327032764);
				continue;
			}
			case 5u:
				LogWarning(global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(1754154386));
				num = -1840376337;
				continue;
			default:
			{
				string format = global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(-859107096) + \u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e.Count + global::<Module>.\u202b\u206d\u206e\u206e\u206a\u206d\u200b\u206a\u206e\u206a\u202a\u202a\u202e\u206b\u202a\u200c\u202b\u206e\u202d\u202c\u206e\u200b\u200e\u200f\u202d\u202a\u200f\u202b\u206c\u206a\u206e\u200c\u202d\u200c\u200b\u202c\u206e\u200f\u206a\u206a\u202e<string>(1445985116);
				LogInfo(format);
				return \u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e;
			}
			}
			break;
			IL_00d0:
			int num10;
			if (num5 < serializedPathList.vectorData.Count)
			{
				num = -503118746;
				num10 = num;
			}
			else
			{
				num = -129014818;
				num10 = num;
			}
		}
		goto IL_001e;
		IL_015b:
		flag = false;
		serializedPathList = \u206e\u206f\u202e\u206f\u206b\u206a\u200e\u206a\u200c\u206e\u200e\u206f\u202a\u202a\u200f\u202c\u206c\u200e\u202e\u202d\u206f\u206c\u202c\u200f\u206f\u202d\u206b\u202a\u206d\u200b\u206f\u200b\u200f\u206f\u200b\u206b\u202e\u200b\u202a\u206b\u202e.\u202a\u202b\u200e\u202a\u206a\u206e\u202c\u202d\u202d\u202d\u200b\u202e\u206f\u202b\u202c\u200b\u206b\u206f\u206c\u200f\u206e\u206d\u202d\u202b\u200c\u202b\u200e\u200f\u200c\u206c\u202e\u202e\u200d\u202e\u202d\u206a\u200b\u206c\u202a\u202d\u202e<SerializedPathList>(array, out flag);
		num = -1961260622;
		goto IL_0023;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	private void ccmdShowOceanPath(BasePlayer player, string command, string[] args)
	{
		if (!player.IsAdmin)
		{
			goto IL_000b;
		}
		goto IL_0158;
		IL_000b:
		int num = -1372179146;
		goto IL_0010;
		IL_0010:
		int result = default(int);
		int num3 = default(int);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -150291219)) % 12)
			{
			case 3u:
				break;
			case 2u:
				int.TryParse(args[0], out result);
				num = ((int)num2 * -336342270) ^ 0x5A823470;
				continue;
			case 11u:
				SendReply(player, global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(1683763958));
				return;
			case 6u:
			{
				Vector3 vector = \u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e[num3];
				player.SendConsoleCommand(global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(170513455), result, Color.magenta, vector, 1f);
				num = -238090079;
				continue;
			}
			case 8u:
				goto IL_00ea;
			case 7u:
				return;
			case 4u:
				goto IL_0118;
			case 5u:
				num3 = 0;
				num = -540123840;
				continue;
			case 1u:
				num = (int)(num2 * 513508339) ^ -1888228818;
				continue;
			case 9u:
				goto IL_0158;
			case 0u:
				num3++;
				num = (int)((num2 * 1462397539) ^ 0x30FB657D);
				continue;
			default:
				SendReply(player, global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(146756565) + \u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e.Count + global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(1300978577));
				return;
			}
			break;
			IL_0118:
			int num4;
			if (num3 < \u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e.Count)
			{
				num = -1951585097;
				num4 = num;
			}
			else
			{
				num = -1984327533;
				num4 = num;
			}
			continue;
			IL_00ea:
			result = 30;
			int num5;
			if (args.Length == 0)
			{
				num = -185475684;
				num5 = num;
			}
			else
			{
				num = -2127188197;
				num5 = num;
			}
		}
		goto IL_000b;
		IL_0158:
		int num6;
		if (\u202c\u206e\u202b\u200c\u202d\u206e\u202e\u206b\u202e\u202d\u200b\u202d\u200c\u206e\u202a\u202a\u200d\u200d\u206b\u206a\u200b\u206f\u200d\u206f\u206f\u200f\u206f\u202e\u202a\u206a\u200f\u206b\u200c\u206b\u206c\u202c\u206f\u200f\u202e\u202e\u202e.Count != 0)
		{
			num = -1872296975;
			num6 = num;
		}
		else
		{
			num = -30079190;
			num6 = num;
		}
		goto IL_0010;
	}
}
