using System.Runtime.CompilerServices;
using Oxide.Core;

public static class VersionNumberEx
{
	[MethodImpl(MethodImplOptions.NoInlining)]
	public static VersionNumber ToVersionNumber(this string str)
	{
		if (str.StartsWith(global::<Module>.\u202b\u206d\u206e\u206e\u206a\u206d\u200b\u206a\u206e\u206a\u202a\u202a\u202e\u206b\u202a\u200c\u202b\u206e\u202d\u202c\u206e\u200b\u200e\u200f\u202d\u202a\u200f\u202b\u206c\u206a\u206e\u200c\u202d\u200c\u200b\u202c\u206e\u200f\u206a\u206a\u202e<string>(291204666)))
		{
			goto IL_0014;
		}
		goto IL_0067;
		IL_0014:
		int num = 1459360351;
		goto IL_0019;
		IL_0019:
		int result2 = default(int);
		int result3 = default(int);
		int result = default(int);
		string[] array = default(string[]);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x2C2EF466)) % 8)
			{
			case 2u:
				break;
			case 5u:
				return new VersionNumber(result2, result3, result);
			case 3u:
				goto IL_0067;
			case 1u:
				str = str.Replace(global::<Module>.\u202b\u200e\u202e\u202a\u206f\u202e\u200c\u206a\u206a\u200b\u206a\u206c\u206f\u202b\u202e\u206f\u206b\u200c\u206a\u206e\u200e\u206c\u202c\u200e\u200d\u202d\u202c\u200e\u206b\u206a\u200b\u202d\u206d\u202c\u202e\u202e\u202c\u202b\u206a\u202a\u202e<string>(-64765485), "");
				num = 195081893;
				continue;
			case 0u:
			{
				int num5;
				int num6;
				if (int.TryParse(array[0], out result2))
				{
					num5 = 1946086096;
					num6 = num5;
				}
				else
				{
					num5 = 328383609;
					num6 = num5;
				}
				num = num5 ^ (int)(num2 * 1284893736);
				continue;
			}
			case 6u:
			{
				int num7;
				int num8;
				if (int.TryParse(array[1], out result3))
				{
					num7 = -654372030;
					num8 = num7;
				}
				else
				{
					num7 = -1567217391;
					num8 = num7;
				}
				num = num7 ^ ((int)num2 * -115460132);
				continue;
			}
			case 4u:
			{
				int num3;
				int num4;
				if (int.TryParse(array[2], out result))
				{
					num3 = -668494229;
					num4 = num3;
				}
				else
				{
					num3 = -566959591;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -1010154168);
				continue;
			}
			default:
				return new VersionNumber(1, 0, 0);
			}
			break;
		}
		goto IL_0014;
		IL_0067:
		array = str.Split(new char[1] { '.' });
		int num9;
		if (array.Length != 3)
		{
			num = 2026478457;
			num9 = num;
		}
		else
		{
			num = 1830486790;
			num9 = num;
		}
		goto IL_0019;
	}
}
