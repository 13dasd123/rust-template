using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Oxide.Core.Plugins;
using Oxide.Ext.RustEdit;
using UnityEngine;

public class PopulateShopKeepers : REPlugin
{
	private readonly List<NPCShopKeeper> \u202b\u200b\u206f\u200f\u200e\u206a\u206b\u206b\u200d\u202e\u206f\u200f\u202e\u200c\u202d\u202b\u206b\u202d\u206a\u200c\u206e\u200b\u206e\u202a\u200c\u202b\u200c\u206d\u202c\u202d\u200d\u202c\u200f\u206b\u200b\u206b\u200d\u206d\u206c\u200f\u202e = new List<NPCShopKeeper>();

	[MethodImpl(MethodImplOptions.NoInlining)]
	public PopulateShopKeepers()
	{
		while (true)
		{
			int num = 1949720666;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x5B9F2FA9)) % 5)
				{
				case 0u:
					break;
				default:
					return;
				case 3u:
					base.Title = global::<Module>.\u202b\u200e\u202e\u202a\u206f\u202e\u200c\u206a\u206a\u200b\u206a\u206c\u206f\u202b\u202e\u206f\u206b\u200c\u206a\u206e\u200e\u206c\u202c\u200e\u200d\u202d\u202c\u200e\u206b\u206a\u200b\u202d\u206d\u202c\u202e\u202e\u202c\u202b\u206a\u202a\u202e<string>(1232839570);
					base.Author = RustEditExtension.AssemblyAuthors;
					num = 1706671441;
					continue;
				case 4u:
					base.Version = RustEditExtension.AssemblyVersion;
					num = (int)((num2 * 918699842) ^ 0x21F01647);
					continue;
				case 2u:
					RustEditCore.\u206c\u206c\u202b\u202d\u200c\u206b\u202d\u200d\u206e\u206f\u206e\u202b\u206a\u206e\u206f\u200e\u202a\u206f\u200b\u202a\u200c\u200f\u200f\u202c\u202a\u200f\u202d\u206f\u206c\u202b\u206e\u200c\u206e\u200c\u200f\u206d\u200e\u202b\u202e\u202e\u202e += \u202a\u202d\u206d\u206c\u206c\u202e\u202b\u206e\u206d\u202d\u202a\u202b\u202a\u202b\u202b\u202c\u202e\u206f\u202a\u200b\u206c\u200b\u206e\u200b\u206c\u206c\u200c\u200b\u206c\u206a\u206b\u206e\u202a\u200e\u200d\u200c\u202e\u206e\u200d\u206d\u202e;
					num = (int)(num2 * 1884607639) ^ -52378996;
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[HookMethod("OnEntitySpawned")]
	private void \u202a\u202a\u206f\u200d\u206a\u202c\u202e\u206e\u200d\u200e\u202b\u206a\u206f\u200c\u200c\u202a\u202b\u200d\u206c\u206a\u202e\u206d\u200f\u202d\u200f\u200c\u206f\u206f\u206a\u206a\u206d\u200e\u202d\u202c\u206e\u206d\u200d\u206a\u206d\u206d\u202e(NPCShopKeeper P_0)
	{
		LogInfo(global::<Module>.\u200b\u206b\u200d\u206f\u200b\u206a\u202c\u200f\u206f\u206a\u202b\u200f\u206c\u206b\u202b\u206c\u200b\u206d\u200c\u200c\u206b\u200e\u206b\u206e\u202d\u200f\u206f\u206a\u200c\u200e\u206e\u200d\u202d\u200c\u206c\u200b\u206b\u200f\u202d\u206b\u202e<string>(-1491530926));
		\u202b\u200b\u206f\u200f\u200e\u206a\u206b\u206b\u200d\u202e\u206f\u200f\u202e\u200c\u202d\u202b\u206b\u202d\u206a\u200c\u206e\u200b\u206e\u202a\u200c\u202b\u200c\u206d\u202c\u202d\u200d\u202c\u200f\u206b\u200b\u206b\u200d\u206d\u206c\u200f\u202e.Add(P_0);
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	private void \u202a\u202d\u206d\u206c\u206c\u202e\u202b\u206e\u206d\u202d\u202a\u202b\u202a\u202b\u202b\u202c\u202e\u206f\u202a\u200b\u206c\u200b\u206e\u200b\u206c\u206c\u200c\u200b\u206c\u206a\u206b\u206e\u202a\u200e\u200d\u200c\u202e\u206e\u200d\u206d\u202e()
	{
		int num = 0;
		using (List<NPCShopKeeper>.Enumerator enumerator = \u202b\u200b\u206f\u200f\u200e\u206a\u206b\u206b\u200d\u202e\u206f\u200f\u202e\u200c\u202d\u202b\u206b\u202d\u206a\u200c\u206e\u200b\u206e\u202a\u200c\u202b\u200c\u206d\u202c\u202d\u200d\u202c\u200f\u206b\u200b\u206b\u200d\u206d\u206c\u200f\u202e.GetEnumerator())
		{
			Collider collider = default(Collider);
			int num10 = default(int);
			int num12 = default(int);
			NPCShopKeeper current = default(NPCShopKeeper);
			float num11 = default(float);
			float num5 = default(float);
			InvisibleVendingMachine vendingMachine = default(InvisibleVendingMachine);
			InvisibleVendingMachine invisibleVendingMachine = default(InvisibleVendingMachine);
			InvisibleVendingMachine component = default(InvisibleVendingMachine);
			Vector3 position = default(Vector3);
			while (true)
			{
				IL_0123:
				int num2;
				int num3;
				if (!enumerator.MoveNext())
				{
					num2 = 993444293;
					num3 = num2;
				}
				else
				{
					num2 = 1057482828;
					num3 = num2;
				}
				while (true)
				{
					uint num4;
					switch ((num4 = (uint)(num2 ^ 0x70135CCF)) % 28)
					{
					case 22u:
						num2 = 1057482828;
						continue;
					default:
						goto end_IL_0018;
					case 20u:
						collider = Vis.colBuffer[num10];
						num2 = 748763150;
						continue;
					case 13u:
					{
						int num16;
						if (num10 < num12)
						{
							num2 = 669921755;
							num16 = num2;
						}
						else
						{
							num2 = 1987688352;
							num16 = num2;
						}
						continue;
					}
					case 11u:
					{
						current = enumerator.Current;
						int num15;
						if ((bool)current)
						{
							num2 = 914752632;
							num15 = num2;
						}
						else
						{
							num2 = 939584265;
							num15 = num2;
						}
						continue;
					}
					case 12u:
					{
						int num23;
						int num24;
						if (num11 >= num5)
						{
							num23 = 301049842;
							num24 = num23;
						}
						else
						{
							num23 = 1230314651;
							num24 = num23;
						}
						num2 = num23 ^ ((int)num4 * -213293816);
						continue;
					}
					case 1u:
						num10++;
						num2 = 633261170;
						continue;
					case 18u:
						break;
					case 21u:
					{
						int num8;
						int num9;
						if ((bool)vendingMachine)
						{
							num8 = 198617976;
							num9 = num8;
						}
						else
						{
							num8 = 812212243;
							num9 = num8;
						}
						num2 = num8 ^ ((int)num4 * -1162496049);
						continue;
					}
					case 23u:
					{
						int num21;
						int num22;
						if (!invisibleVendingMachine)
						{
							num21 = 1800722015;
							num22 = num21;
						}
						else
						{
							num21 = 1665149602;
							num22 = num21;
						}
						num2 = num21 ^ (int)(num4 * 1121985802);
						continue;
					}
					case 4u:
					{
						component = collider.gameObject.GetComponent<InvisibleVendingMachine>();
						int num17;
						int num18;
						if (!component)
						{
							num17 = -524267054;
							num18 = num17;
						}
						else
						{
							num17 = -1193337524;
							num18 = num17;
						}
						num2 = num17 ^ ((int)num4 * -446113490);
						continue;
					}
					case 27u:
						num2 = (int)((num4 * 1965012667) ^ 0x1456DF9B);
						continue;
					case 14u:
					{
						int num25;
						int num26;
						if (!collider.gameObject)
						{
							num25 = 971765124;
							num26 = num25;
						}
						else
						{
							num25 = 588155977;
							num26 = num25;
						}
						num2 = num25 ^ ((int)num4 * -845995627);
						continue;
					}
					case 3u:
						current.machine = invisibleVendingMachine;
						current.invisibleVendingMachineRef.Set(invisibleVendingMachine);
						num2 = ((int)num4 * -319744678) ^ 0x9111F23;
						continue;
					case 2u:
						invisibleVendingMachine.SetAttachedNPC(current);
						num2 = (int)((num4 * 2090129068) ^ 0x1F3C34A5);
						continue;
					case 6u:
						num++;
						num2 = (int)((num4 * 1421978058) ^ 0x657F72FD);
						continue;
					case 0u:
						current.machine = vendingMachine;
						vendingMachine.SetAttachedNPC(current);
						num++;
						num2 = (int)((num4 * 302687104) ^ 0xE2E0B09);
						continue;
					case 5u:
					{
						int num19;
						int num20;
						if (!collider)
						{
							num19 = -686764303;
							num20 = num19;
						}
						else
						{
							num19 = -626041646;
							num20 = num19;
						}
						num2 = num19 ^ ((int)num4 * -215810109);
						continue;
					}
					case 17u:
					{
						int num13;
						int num14;
						if (num12 == 0)
						{
							num13 = 478888406;
							num14 = num13;
						}
						else
						{
							num13 = 1836517606;
							num14 = num13;
						}
						num2 = num13 ^ (int)(num4 * 1105229691);
						continue;
					}
					case 26u:
						invisibleVendingMachine = null;
						num2 = (int)((num4 * 1615231386) ^ 0x680141A2);
						continue;
					case 15u:
						position = current.transform.position;
						num12 = Physics.OverlapSphereNonAlloc(position, 1f, Vis.colBuffer);
						num2 = 2006029858;
						continue;
					case 19u:
						num11 = Vector3.Distance(component.transform.position, position);
						num2 = (int)((num4 * 1857652811) ^ 0x63FD1DEE);
						continue;
					case 16u:
						invisibleVendingMachine = component;
						num2 = (int)(num4 * 1883833759) ^ -443962985;
						continue;
					case 24u:
						num5 = num11;
						num2 = (int)((num4 * 1481353675) ^ 0x12C17B0E);
						continue;
					case 25u:
						vendingMachine = current.GetVendingMachine();
						num2 = ((int)num4 * -161609149) ^ -976730575;
						continue;
					case 8u:
						num10 = 0;
						num2 = (int)(num4 * 1067189514) ^ -2068466492;
						continue;
					case 7u:
					{
						int num6;
						int num7;
						if (current.IsDestroyed)
						{
							num6 = 504562621;
							num7 = num6;
						}
						else
						{
							num6 = 12374710;
							num7 = num6;
						}
						num2 = num6 ^ ((int)num4 * -1385504532);
						continue;
					}
					case 9u:
						num5 = float.MaxValue;
						num2 = ((int)num4 * -780471705) ^ -2041789176;
						continue;
					case 10u:
						goto end_IL_0018;
					}
					goto IL_0123;
					continue;
					end_IL_0018:
					break;
				}
				break;
			}
		}
		LogInfo(string.Format(global::<Module>.\u202b\u206d\u206e\u206e\u206a\u206d\u200b\u206a\u206e\u206a\u202a\u202a\u202e\u206b\u202a\u200c\u202b\u206e\u202d\u202c\u206e\u200b\u200e\u200f\u202d\u202a\u200f\u202b\u206c\u206a\u206e\u200c\u202d\u200c\u200b\u202c\u206e\u200f\u206a\u206a\u202e<string>(1145806488), num));
	}
}
