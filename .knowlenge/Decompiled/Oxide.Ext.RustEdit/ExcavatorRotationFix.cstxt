using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Oxide.Core.Plugins;
using Oxide.Ext.RustEdit;
using UnityEngine;

internal class ExcavatorRotationFix : REPlugin
{
	private const float \u202b\u202b\u200e\u206a\u202a\u202c\u200e\u206c\u200c\u202e\u200c\u200b\u202d\u206c\u202d\u200e\u202b\u200b\u200c\u200d\u200c\u200d\u200d\u200e\u200f\u200f\u202e\u200b\u206c\u206c\u206b\u202a\u202b\u202c\u202d\u202e\u206d\u202a\u206f\u206c\u202e = -4f;

	private const float \u200e\u200f\u206a\u206a\u200c\u200c\u202c\u200c\u206e\u200d\u206b\u200b\u200b\u206d\u200f\u200d\u202b\u206e\u202c\u202a\u202a\u200f\u202d\u206c\u206f\u202c\u202e\u206b\u206f\u200d\u206e\u200b\u200f\u202b\u200b\u200b\u200d\u200e\u206f\u200e\u202e = 132.3f;

	private Dictionary<Vector3, float> \u206c\u206d\u206c\u200b\u200c\u200f\u206a\u202e\u206e\u202d\u206a\u200d\u206f\u206d\u206d\u206c\u202c\u206b\u202a\u200e\u202a\u206b\u200d\u206f\u202a\u202e\u202c\u202b\u200f\u206e\u202e\u202b\u202a\u200d\u200b\u202c\u206a\u206c\u200b\u202a\u202e = new Dictionary<Vector3, float>();

	[MethodImpl(MethodImplOptions.NoInlining)]
	public ExcavatorRotationFix()
	{
		while (true)
		{
			int num = -1975321036;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -621107054)) % 5)
				{
				case 4u:
					break;
				default:
					return;
				case 1u:
					base.Title = global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(1455136740);
					num = -1167648820;
					continue;
				case 3u:
					base.Author = RustEditExtension.AssemblyAuthors;
					num = ((int)num2 * -1066127097) ^ -736421899;
					continue;
				case 0u:
					base.Version = RustEditExtension.AssemblyVersion;
					num = (int)((num2 * 908735152) ^ 0x554B2D6B);
					continue;
				case 2u:
					return;
				}
				break;
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[HookMethod("OnServerInitialized")]
	private void OnServerInitialized()
	{
		MonumentInfo[] array = UnityEngine.Object.FindObjectsOfType<MonumentInfo>();
		if (array != null)
		{
			goto IL_000c;
		}
		goto IL_00f3;
		IL_000c:
		int num = 1477694477;
		goto IL_0011;
		IL_0011:
		int num11 = default(int);
		int num3 = default(int);
		MonumentInfo monumentInfo = default(MonumentInfo);
		ExcavatorArm[] array2 = default(ExcavatorArm[]);
		KeyValuePair<Vector3, float> current = default(KeyValuePair<Vector3, float>);
		float num6 = default(float);
		while (true)
		{
			int num12;
			uint num2;
			switch ((num2 = (uint)(num ^ 0x225DA76A)) % 14)
			{
			case 10u:
				break;
			case 4u:
				goto IL_005f;
			case 8u:
				num11++;
				num = 1861630136;
				continue;
			case 13u:
				num11 = 0;
				num = ((int)num2 * -1351986187) ^ -1986626819;
				continue;
			case 12u:
				num3 = 0;
				num = (int)((num2 * 942370659) ^ 0x5EB81578);
				continue;
			case 11u:
				monumentInfo = array[num11];
				num = 283123741;
				continue;
			case 1u:
			{
				int num13;
				int num14;
				if (array.Length == 0)
				{
					num13 = 1586424882;
					num14 = num13;
				}
				else
				{
					num13 = 1531949070;
					num14 = num13;
				}
				num = num13 ^ ((int)num2 * -226862141);
				continue;
			}
			case 5u:
				goto IL_00f3;
			case 7u:
				if (array2.Length != 0)
				{
					num = ((int)num2 * -1748739798) ^ -577609926;
					continue;
				}
				return;
			case 3u:
				if (array2 != null)
				{
					num = ((int)num2 * -974835991) ^ -331126012;
					continue;
				}
				return;
			case 9u:
				goto IL_0136;
			case 0u:
				\u206c\u206d\u206c\u200b\u200c\u200f\u206a\u202e\u206e\u202d\u206a\u200d\u206f\u206d\u206d\u206c\u202c\u206b\u202a\u200e\u202a\u206b\u200d\u206f\u202a\u202e\u202c\u202b\u200f\u206e\u202e\u202b\u202a\u200d\u200b\u202c\u206a\u206c\u200b\u202a\u202e.Add(monumentInfo.transform.position, monumentInfo.transform.eulerAngles.y);
				num = (int)(num2 * 1042892567) ^ -226818174;
				continue;
			default:
			{
				ExcavatorArm excavatorArm = array2[num3];
				using (Dictionary<Vector3, float>.Enumerator enumerator = \u206c\u206d\u206c\u200b\u200c\u200f\u206a\u202e\u206e\u202d\u206a\u200d\u206f\u206d\u206d\u206c\u202c\u206b\u202a\u200e\u202a\u206b\u200d\u206f\u202a\u202e\u202c\u202b\u200f\u206e\u202e\u202b\u202a\u200d\u200b\u202c\u206a\u206c\u200b\u202a\u202e.GetEnumerator())
				{
					while (true)
					{
						IL_0214:
						int num4;
						int num5;
						if (!enumerator.MoveNext())
						{
							num4 = 1724205492;
							num5 = num4;
						}
						else
						{
							num4 = 380542304;
							num5 = num4;
						}
						while (true)
						{
							switch ((num2 = (uint)(num4 ^ 0x225DA76A)) % 8)
							{
							case 7u:
								num4 = 380542304;
								continue;
							default:
								goto end_IL_01bb;
							case 0u:
								excavatorArm.yaw1 = -4f + current.Value;
								num4 = (int)((num2 * 1995469026) ^ 0x76CAEAE7);
								continue;
							case 4u:
								break;
							case 2u:
								current = enumerator.Current;
								num4 = 1382486633;
								continue;
							case 1u:
							{
								int num9;
								int num10;
								if (num6 < 60f)
								{
									num9 = 989588653;
									num10 = num9;
								}
								else
								{
									num9 = 620909817;
									num10 = num9;
								}
								num4 = num9 ^ ((int)num2 * -1274627001);
								continue;
							}
							case 5u:
								excavatorArm.yaw2 = 132.3f + current.Value;
								goto end_IL_01bb;
							case 3u:
							{
								num6 = Vector3.Distance(excavatorArm.transform.position, current.Key);
								int num7;
								int num8;
								if (num6 > 50f)
								{
									num7 = 1739966264;
									num8 = num7;
								}
								else
								{
									num7 = 143592685;
									num8 = num7;
								}
								num4 = num7 ^ ((int)num2 * -1872424783);
								continue;
							}
							case 6u:
								goto end_IL_01bb;
							}
							goto IL_0214;
							continue;
							end_IL_01bb:
							break;
						}
						break;
					}
				}
				num3++;
				goto IL_02e6;
			}
			case 2u:
				goto IL_0309;
				IL_02e6:
				num12 = 1405460921;
				goto IL_02eb;
				IL_02eb:
				switch ((num2 = (uint)(num12 ^ 0x225DA76A)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
					goto IL_0309;
				case 1u:
					return;
				}
				goto IL_02e6;
				IL_0309:
				if (num3 < array2.Length)
				{
					goto default;
				}
				num12 = 162071122;
				goto IL_02eb;
			}
			break;
			IL_0136:
			int num15;
			if (monumentInfo.gameObject.name.Contains(global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(1740216709)))
			{
				num = 1051492790;
				num15 = num;
			}
			else
			{
				num = 248940102;
				num15 = num;
			}
			continue;
			IL_005f:
			int num16;
			if (num11 >= array.Length)
			{
				num = 928213063;
				num16 = num;
			}
			else
			{
				num = 1624132813;
				num16 = num;
			}
		}
		goto IL_000c;
		IL_00f3:
		array2 = UnityEngine.Object.FindObjectsOfType<ExcavatorArm>();
		num = 2107531593;
		goto IL_0011;
	}
}
