using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Oxide.Core;
using Oxide.Ext.RustEdit.NPC;
using Rust;
using UnityEngine;
using UnityEngine.AI;

public class NPCSpawner : MonoBehaviour
{
	private SerializedNPCSpawner \u202c\u206c\u202a\u206c\u202b\u202d\u200e\u206e\u200b\u206f\u202c\u206c\u202e\u206d\u202c\u200f\u202a\u202d\u200d\u206f\u206f\u206e\u202c\u202c\u202a\u206a\u200c\u206e\u202e\u206a\u200e\u202a\u202d\u202c\u206e\u200d\u206e\u202b\u200d\u206f\u202e;

	private NPCType \u206f\u206c\u206f\u202e\u202a\u200f\u206a\u206b\u200c\u200c\u200f\u206b\u202d\u200b\u206e\u202d\u206a\u200d\u200e\u200e\u206c\u200b\u202c\u200b\u200e\u202a\u202d\u202d\u200f\u200e\u202a\u206f\u206b\u200f\u200c\u202d\u200d\u200e\u202c\u206b\u202e;

	private string \u200f\u200d\u202a\u206d\u200c\u200e\u202d\u200c\u202e\u200c\u206f\u200e\u200e\u200e\u206d\u200e\u200b\u202e\u202a\u206e\u206f\u202d\u200f\u202d\u200e\u200c\u200c\u206c\u202d\u200b\u200e\u206d\u202b\u206f\u202b\u202b\u200c\u206e\u200f\u202a\u202e;

	internal BaseCombatEntity \u206a\u200e\u206b\u200b\u200f\u202b\u206d\u206d\u200c\u206c\u202a\u202d\u200e\u202e\u206f\u202c\u200e\u206e\u202a\u200e\u206f\u200e\u200d\u202e\u202c\u202c\u206c\u206c\u200d\u200d\u200d\u200b\u206c\u200e\u206d\u202b\u200b\u206a\u202a\u206f\u202e;

	private float \u206e\u206d\u200b\u202a\u202e\u206c\u202a\u206b\u206b\u202a\u206d\u206d\u200d\u200d\u200f\u206d\u206b\u202c\u206c\u202e\u200d\u202c\u200e\u202d\u202b\u206d\u206b\u200f\u206d\u206e\u202c\u200c\u202b\u202d\u202c\u206b\u200e\u206b\u202b\u202c\u202e;

	private bool \u200b\u200b\u206d\u206c\u202d\u206f\u200c\u202a\u206a\u202b\u202c\u200f\u200d\u202c\u206d\u200c\u206f\u200f\u202e\u206d\u202d\u200d\u202c\u200c\u206c\u206a\u200c\u202a\u206d\u200e\u202c\u200f\u202a\u206e\u206a\u202a\u200d\u206c\u200b\u202e\u202e;

	private static Dictionary<NPCType, string> _typeToPrefab = new Dictionary<NPCType, string>
	{
		[NPCType.Scientist] = global::<Module>.\u202b\u206d\u206e\u206e\u206a\u206d\u200b\u206a\u206e\u206a\u202a\u202a\u202e\u206b\u202a\u200c\u202b\u206e\u202d\u202c\u206e\u200b\u200e\u200f\u202d\u202a\u200f\u202b\u206c\u206a\u206e\u200c\u202d\u200c\u200b\u202c\u206e\u200f\u206a\u206a\u202e<string>(-1031191293),
		[NPCType.Peacekeeper] = global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(2067145080),
		[NPCType.HeavyScientist] = global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(2103950492),
		[NPCType.JunkpileScientist] = global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(254605290),
		[NPCType.Bandit] = global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(-453592259),
		[NPCType.Murderer] = global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(-849736951),
		[NPCType.Scarecrow] = global::<Module>.\u200b\u206b\u200d\u206f\u200b\u206a\u202c\u200f\u206f\u206a\u202b\u200f\u206c\u206b\u202b\u206c\u200b\u206d\u200c\u200c\u206b\u200e\u206b\u206e\u202d\u200f\u206f\u206a\u200c\u200e\u206e\u200d\u202d\u200c\u206c\u200b\u206b\u200f\u202d\u206b\u202e<string>(300682934)
	};

	public void Initialize(SerializedNPCSpawner serializedNPCSpawner)
	{
		\u202c\u206c\u202a\u206c\u202b\u202d\u200e\u206e\u200b\u206f\u202c\u206c\u202e\u206d\u202c\u200f\u202a\u202d\u200d\u206f\u206f\u206e\u202c\u202c\u202a\u206a\u200c\u206e\u202e\u206a\u200e\u202a\u202d\u202c\u206e\u200d\u206e\u202b\u200d\u206f\u202e = serializedNPCSpawner;
		while (true)
		{
			int num = -703368652;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -854628182)) % 6)
				{
				case 5u:
					break;
				default:
					return;
				case 2u:
					\u206f\u206c\u206f\u202e\u202a\u200f\u206a\u206b\u200c\u200c\u200f\u206b\u202d\u200b\u206e\u202d\u206a\u200d\u200e\u200e\u206c\u200b\u202c\u200b\u200e\u202a\u202d\u202d\u200f\u200e\u202a\u206f\u206b\u200f\u200c\u202d\u200d\u200e\u202c\u206b\u202e = (NPCType)serializedNPCSpawner.npcType;
					num = ((int)num2 * -1967059043) ^ 0x4A6088FE;
					continue;
				case 0u:
					base.transform.position = serializedNPCSpawner.position;
					InvokeHandler.Invoke(this, DoRespawn, 3f);
					num = ((int)num2 * -1959339124) ^ 0x4CBFF077;
					continue;
				case 1u:
					InvokeHandler.InvokeRepeating(this, CheckIfRespawnNeeded, 5f, 5f);
					num = ((int)num2 * -1885876217) ^ -1320195190;
					continue;
				case 4u:
					\u200f\u200d\u202a\u206d\u200c\u200e\u202d\u200c\u202e\u200c\u206f\u200e\u200e\u200e\u206d\u200e\u200b\u202e\u202a\u206e\u206f\u202d\u200f\u202d\u200e\u200c\u200c\u206c\u202d\u200b\u200e\u206d\u202b\u206f\u202b\u202b\u200c\u206e\u200f\u202a\u202e = _typeToPrefab[\u206f\u206c\u206f\u202e\u202a\u200f\u206a\u206b\u200c\u200c\u200f\u206b\u202d\u200b\u206e\u202d\u206a\u200d\u200e\u200e\u206c\u200b\u202c\u200b\u200e\u202a\u202d\u202d\u200f\u200e\u202a\u206f\u206b\u200f\u200c\u202d\u200d\u200e\u202c\u206b\u202e];
					num = ((int)num2 * -1267395801) ^ -1315845908;
					continue;
				case 3u:
					return;
				}
				break;
			}
		}
	}

	public void CheckIfRespawnNeeded()
	{
		if (!\u200b\u200b\u206d\u206c\u202d\u206f\u200c\u202a\u206a\u202b\u202c\u200f\u200d\u202c\u206d\u200c\u206f\u200f\u202e\u206d\u202d\u200d\u202c\u200c\u206c\u206a\u200c\u202a\u206d\u200e\u202c\u200f\u202a\u206e\u206a\u202a\u200d\u206c\u200b\u202e\u202e)
		{
			goto IL_000b;
		}
		goto IL_008f;
		IL_000b:
		int num = -1506753467;
		goto IL_0010;
		IL_0010:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -2101777716)) % 8)
			{
			case 7u:
				break;
			default:
				return;
			case 3u:
				DoRespawn();
				num = ((int)num2 * -1156233315) ^ -1703126921;
				continue;
			case 6u:
				return;
			case 0u:
			{
				int num5;
				int num6;
				if (Time.time >= \u206e\u206d\u200b\u202a\u202e\u206c\u202a\u206b\u206b\u202a\u206d\u206d\u200d\u200d\u200f\u206d\u206b\u202c\u206c\u202e\u200d\u202c\u200e\u202d\u202b\u206d\u206b\u200f\u206d\u206e\u202c\u200c\u202b\u202d\u202c\u206b\u200e\u206b\u202b\u202c\u202e)
				{
					num5 = -1342086057;
					num6 = num5;
				}
				else
				{
					num5 = -112395272;
					num6 = num5;
				}
				num = num5 ^ (int)(num2 * 759576604);
				continue;
			}
			case 5u:
				goto IL_008f;
			case 2u:
				ScheduleRespawn();
				num = ((int)num2 * -207740703) ^ 0x6AC74C38;
				continue;
			case 1u:
			{
				int num3;
				int num4;
				if (!(\u206a\u200e\u206b\u200b\u200f\u202b\u206d\u206d\u200c\u206c\u202a\u202d\u200e\u202e\u206f\u202c\u200e\u206e\u202a\u200e\u206f\u200e\u200d\u202e\u202c\u202c\u206c\u206c\u200d\u200d\u200d\u200b\u206c\u200e\u206d\u202b\u200b\u206a\u202a\u206f\u202e == null))
				{
					num3 = 264796406;
					num4 = num3;
				}
				else
				{
					num3 = 963317752;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -1692344514);
				continue;
			}
			case 4u:
				return;
			}
			break;
		}
		goto IL_000b;
		IL_008f:
		int num7;
		if (\u206a\u200e\u206b\u200b\u200f\u202b\u206d\u206d\u200c\u206c\u202a\u202d\u200e\u202e\u206f\u202c\u200e\u206e\u202a\u200e\u206f\u200e\u200d\u202e\u202c\u202c\u206c\u206c\u200d\u200d\u200d\u200b\u206c\u200e\u206d\u202b\u200b\u206a\u202a\u206f\u202e == null)
		{
			num = -2052068044;
			num7 = num;
		}
		else
		{
			num = -2092309288;
			num7 = num;
		}
		goto IL_0010;
	}

	public void DoRespawn()
	{
		if (!Rust.Application.isLoading)
		{
			goto IL_0007;
		}
		goto IL_0051;
		IL_0007:
		int num = -1129955135;
		goto IL_000c;
		IL_000c:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -1739592059)) % 5)
			{
			case 2u:
				break;
			default:
				return;
			case 1u:
			{
				int num3;
				int num4;
				if (Rust.Application.isLoadingSave)
				{
					num3 = -96213828;
					num4 = num3;
				}
				else
				{
					num3 = -1392327850;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -1611603210);
				continue;
			}
			case 4u:
				goto IL_0051;
			case 3u:
				SpawnNPC();
				num = (int)(num2 * 1178306848) ^ -2008289916;
				continue;
			case 0u:
				return;
			}
			break;
		}
		goto IL_0007;
		IL_0051:
		\u200b\u200b\u206d\u206c\u202d\u206f\u200c\u202a\u206a\u202b\u202c\u200f\u200d\u202c\u206d\u200c\u206f\u200f\u202e\u206d\u202d\u200d\u202c\u200c\u206c\u206a\u200c\u202a\u206d\u200e\u202c\u200f\u202a\u206e\u206a\u202a\u200d\u206c\u200b\u202e\u202e = false;
		num = -997556269;
		goto IL_000c;
	}

	public void Fill()
	{
		DoRespawn();
	}

	public void ScheduleRespawn()
	{
		\u206e\u206d\u200b\u202a\u202e\u206c\u202a\u206b\u206b\u202a\u206d\u206d\u200d\u200d\u200f\u206d\u206b\u202c\u206c\u202e\u200d\u202c\u200e\u202d\u202b\u206d\u206b\u200f\u206d\u206e\u202c\u200c\u202b\u202d\u202c\u206b\u200e\u206b\u202b\u202c\u202e = Time.time + (float)UnityEngine.Random.Range(\u202c\u206c\u202a\u206c\u202b\u202d\u200e\u206e\u200b\u206f\u202c\u206c\u202e\u206d\u202c\u200f\u202a\u202d\u200d\u206f\u206f\u206e\u202c\u202c\u202a\u206a\u200c\u206e\u202e\u206a\u200e\u202a\u202d\u202c\u206e\u200d\u206e\u202b\u200d\u206f\u202e.respawnMin, \u202c\u206c\u202a\u206c\u202b\u202d\u200e\u206e\u200b\u206f\u202c\u206c\u202e\u206d\u202c\u200f\u202a\u202d\u200d\u206f\u206f\u206e\u202c\u202c\u202a\u206a\u200c\u206e\u202e\u206a\u200e\u202a\u202d\u202c\u206e\u200d\u206e\u202b\u200d\u206f\u202e.respawnMax);
		while (true)
		{
			int num = 10889029;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x6F3708CD)) % 3)
				{
				case 2u:
					break;
				default:
					return;
				case 1u:
					goto IL_004a;
				case 0u:
					return;
				}
				break;
				IL_004a:
				\u200b\u200b\u206d\u206c\u202d\u206f\u200c\u202a\u206a\u202b\u202c\u200f\u200d\u202c\u206d\u200c\u206f\u200f\u202e\u206d\u202d\u200d\u202c\u200c\u206c\u206a\u200c\u202a\u206d\u200e\u202c\u200f\u202a\u206e\u206a\u202a\u200d\u206c\u200b\u202e\u202e = true;
				num = (int)(num2 * 905296096) ^ -2028661226;
			}
		}
	}

	public void SpawnRepeating()
	{
		CheckIfRespawnNeeded();
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public void SpawnNPC()
	{
		Vector3 position = base.transform.position;
		BaseEntity baseEntity = default(BaseEntity);
		int num3 = default(int);
		NavMeshAgent component = default(NavMeshAgent);
		while (true)
		{
			int num = -1546332413;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1919040459)) % 11)
				{
				case 4u:
					break;
				case 9u:
					baseEntity.enableSaving = false;
					num = -1103106317;
					continue;
				case 10u:
					baseEntity.Spawn();
					num = -1035639905;
					continue;
				case 6u:
					return;
				case 5u:
					\u206b\u202e\u200c\u206e\u206a\u206e\u206d\u206a\u206d\u200b\u200e\u202b\u202b\u200e\u206a\u200b\u202a\u202d\u206e\u202c\u206e\u202c\u200e\u200d\u206d\u206c\u200d\u200c\u200d\u200c\u200c\u200e\u202e\u202e\u202e\u200e\u202a\u200e\u202b\u206c\u202e(ref position, out num3);
					num = (int)(num2 * 157140259) ^ -235828074;
					continue;
				case 8u:
					num3 = 1;
					num = (int)((num2 * 1574040087) ^ 0x3D9240A5);
					continue;
				case 2u:
				{
					baseEntity.gameObject.AwakeFromInstantiate();
					component = baseEntity.GetComponent<NavMeshAgent>();
					int num4;
					int num5;
					if (component != null)
					{
						num4 = 262371879;
						num5 = num4;
					}
					else
					{
						num4 = 1631404553;
						num5 = num4;
					}
					num = num4 ^ ((int)num2 * -50376125);
					continue;
				}
				case 3u:
				{
					baseEntity = GameManager.server.CreateEntity(\u200f\u200d\u202a\u206d\u200c\u200e\u202d\u200c\u202e\u200c\u206f\u200e\u200e\u200e\u206d\u200e\u200b\u202e\u202a\u206e\u206f\u202d\u200f\u202d\u200e\u200c\u200c\u206c\u202d\u200b\u200e\u206d\u202b\u206f\u202b\u202b\u200c\u206e\u200f\u202a\u202e, position, Quaternion.identity, startActive: false);
					int num6;
					int num7;
					if (baseEntity == null)
					{
						num6 = 630932189;
						num7 = num6;
					}
					else
					{
						num6 = 1958287765;
						num7 = num6;
					}
					num = num6 ^ ((int)num2 * -1452030309);
					continue;
				}
				case 0u:
					component.areaMask = num3;
					component.agentTypeID = ((num3 != 25 && num3 != 8) ? (-1372625422) : 0);
					num = -1721507877;
					continue;
				case 7u:
					\u206a\u200e\u206b\u200b\u200f\u202b\u206d\u206d\u200c\u206c\u202a\u202d\u200e\u202e\u206f\u202c\u200e\u206e\u202a\u200e\u206f\u200e\u200d\u202e\u202c\u202c\u206c\u206c\u200d\u200d\u200d\u200b\u206c\u200e\u206d\u202b\u200b\u206a\u202a\u206f\u202e = baseEntity as BaseCombatEntity;
					num = ((int)num2 * -353434245) ^ 0x8FF1186;
					continue;
				default:
					Interface.CallHook(global::<Module>.\u202e\u200d\u206b\u202e\u206b\u200f\u202a\u202b\u206e\u206b\u200f\u206e\u202b\u202c\u202a\u200e\u206f\u202d\u202e\u206f\u202e\u202b\u206f\u202e\u206a\u206c\u206a\u202a\u200c\u206a\u200d\u200e\u206d\u206a\u202d\u206f\u206d\u206b\u206e\u206c\u202e<string>(-581413044), baseEntity as BasePlayer);
					return;
				}
				break;
			}
		}
	}

	private bool \u206b\u202e\u200c\u206e\u206a\u206e\u206d\u206a\u206d\u200b\u200e\u202b\u202b\u200e\u206a\u200b\u202a\u202d\u206e\u202c\u206e\u202c\u200e\u200d\u206d\u206c\u200d\u200c\u200d\u200c\u200c\u200e\u202e\u202e\u202e\u200e\u202a\u200e\u202b\u206c\u202e(ref Vector3 P_0, out int P_1)
	{
		if (NavMesh.SamplePosition(P_0, out var hit, 5f, -1))
		{
			while (true)
			{
				int num = 182649203;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ 0x53AEC7D)) % 5)
					{
					case 0u:
						break;
					case 3u:
						P_1 = hit.mask;
						num = ((int)num2 * -2033783351) ^ -1975802947;
						continue;
					case 4u:
						return true;
					case 2u:
						P_0 = hit.position;
						num = (int)((num2 * 91664771) ^ 0x1C018865);
						continue;
					default:
						goto end_IL_0015;
					}
					break;
				}
				continue;
				end_IL_0015:
				break;
			}
		}
		P_1 = -1;
		return false;
	}
}
