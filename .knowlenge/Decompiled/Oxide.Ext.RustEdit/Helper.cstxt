using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using System.Xml.Serialization;
using Facepunch;
using Oxide.Core;
using Oxide.Core.Libraries;
using Rust;
using UnityEngine;
using UnityEngine.SceneManagement;

internal class Helper : Library
{
	private readonly char[] \u206b\u206e\u200c\u202b\u202b\u202c\u200e\u202c\u206b\u206d\u200d\u206e\u200b\u202e\u206b\u206b\u202e\u202a\u202c\u202b\u202b\u206d\u200f\u202b\u200f\u200f\u202b\u202b\u200e\u206f\u200f\u202e\u202a\u200f\u200b\u202d\u200b\u202b\u206a\u202e\u202e = new char[2] { '_', ':' };

	public static int \u200c\u206a\u206b\u202c\u206a\u200e\u202e\u206f\u206c\u206d\u202e\u202c\u202a\u202e\u202d\u206d\u202b\u206e\u200b\u206e\u200d\u200e\u200f\u206e\u206b\u200d\u200f\u206a\u200c\u202e\u202c\u200f\u200f\u206a\u200f\u200b\u200f\u202e\u200e\u200c\u202e;

	[MethodImpl(MethodImplOptions.NoInlining)]
	public \u0001 \u202a\u202b\u200e\u202a\u206a\u206e\u202c\u202d\u202d\u202d\u200b\u202e\u206f\u202b\u202c\u200b\u206b\u206f\u206c\u200f\u206e\u206d\u202d\u202b\u200c\u202b\u200e\u200f\u200c\u206c\u202e\u202e\u200d\u202e\u202d\u206a\u200b\u206c\u202a\u202d\u202e<\u0001>(byte[] P_0, out bool P_1)
	{
		\u0001 result = default(\u0001);
		try
		{
			MemoryStream memoryStream = new MemoryStream(P_0);
			try
			{
				\u0001 obj = (\u0001)new XmlSerializer(typeof(\u0001)).Deserialize(memoryStream);
				P_1 = true;
				result = obj;
			}
			finally
			{
				if (memoryStream != null)
				{
					while (true)
					{
						IL_002d:
						int num = -1670296178;
						while (true)
						{
							uint num2;
							switch ((num2 = (uint)(num ^ -1577955464)) % 3)
							{
							case 0u:
								break;
							default:
								goto end_IL_0032;
							case 2u:
								goto IL_0050;
							case 1u:
								goto end_IL_0032;
							}
							goto IL_002d;
							IL_0050:
							((IDisposable)memoryStream).Dispose();
							num = (int)(num2 * 2146356341) ^ -1151666823;
							continue;
							end_IL_0032:
							break;
						}
						break;
					}
				}
			}
		}
		catch (Exception ex)
		{
			Debug.Log(ex.Message + global::<Module>.\u200b\u206b\u200d\u206f\u200b\u206a\u202c\u200f\u206f\u206a\u202b\u200f\u206c\u206b\u202b\u206c\u200b\u206d\u200c\u200c\u206b\u200e\u206b\u206e\u202d\u200f\u206f\u206a\u200c\u200e\u206e\u200d\u202d\u200c\u206c\u200b\u206b\u200f\u202d\u206b\u202e<string>(-636126554) + ex.StackTrace);
			while (true)
			{
				IL_008a:
				int num3 = -2122937399;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num3 ^ -1577955464)) % 4)
					{
					case 2u:
						break;
					default:
						goto end_IL_008f;
					case 1u:
						P_1 = false;
						num3 = ((int)num2 * -1781466979) ^ -1361366191;
						continue;
					case 0u:
						result = default(\u0001);
						num3 = (int)(num2 * 1984337650) ^ -1516889025;
						continue;
					case 3u:
						goto end_IL_008f;
					}
					goto IL_008a;
					continue;
					end_IL_008f:
					break;
				}
				break;
			}
		}
		return result;
	}

	public string \u202d\u202c\u206a\u200b\u206d\u200e\u206c\u206e\u200f\u200e\u200e\u202c\u200d\u206e\u202c\u202d\u202d\u206c\u206f\u200b\u202b\u202c\u202a\u200d\u200d\u200e\u206d\u200c\u206b\u202c\u200f\u200b\u206b\u206f\u206a\u200b\u200f\u202e\u200c\u202d\u202e(string P_0)
	{
		if (string.IsNullOrEmpty(P_0))
		{
			goto IL_0008;
		}
		goto IL_007d;
		IL_0008:
		int num = 1874047038;
		goto IL_000d;
		IL_000d:
		string[] array = default(string[]);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x4A74045F)) % 6)
			{
			case 5u:
				break;
			case 3u:
				return string.Empty;
			case 4u:
			{
				int num3;
				int num4;
				if (array.Length > 2)
				{
					num3 = 1564010422;
					num4 = num3;
				}
				else
				{
					num3 = 1143619111;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -540013757);
				continue;
			}
			case 1u:
				return array[3];
			case 2u:
				goto IL_007d;
			default:
				return string.Empty;
			}
			break;
		}
		goto IL_0008;
		IL_007d:
		array = P_0.Split(\u206b\u206e\u200c\u202b\u202b\u202c\u200e\u202c\u206b\u206d\u200d\u206e\u200b\u202e\u206b\u206b\u202e\u202a\u202c\u202b\u202b\u206d\u200f\u202b\u200f\u200f\u202b\u202b\u200e\u206f\u200f\u202e\u202a\u200f\u200b\u202d\u200b\u202b\u206a\u202e\u202e);
		num = 1966407787;
		goto IL_000d;
	}

	public int \u202e\u206a\u202a\u200f\u206e\u200f\u202b\u200c\u206b\u206f\u206e\u200b\u200c\u200f\u200d\u200b\u206c\u200d\u206a\u200d\u202e\u200c\u200f\u206a\u206c\u200d\u202a\u206c\u202e\u206a\u206f\u200e\u202c\u202a\u202b\u206a\u200e\u202d\u206c\u202e(string P_0)
	{
		string[] array = P_0.Split(\u206b\u206e\u200c\u202b\u202b\u202c\u200e\u202c\u206b\u206d\u200d\u206e\u200b\u202e\u206b\u206b\u202e\u202a\u202c\u202b\u202b\u206d\u200f\u202b\u200f\u200f\u202b\u202b\u200e\u206f\u200f\u202e\u202a\u200f\u200b\u202d\u200b\u202b\u206a\u202e\u202e);
		if (array.Length > 3)
		{
			while (true)
			{
				uint num;
				switch ((num = 1884176191u) % 3)
				{
				case 2u:
					continue;
				case 1u:
					return int.Parse(array[4]);
				}
				break;
			}
		}
		return -1;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public \u0001 \u202d\u200f\u206d\u202a\u202d\u206a\u200f\u200d\u200e\u206a\u202e\u206d\u200f\u202a\u206a\u202d\u206b\u200e\u202d\u202a\u206c\u202a\u206e\u206e\u206d\u206f\u202d\u206b\u202a\u206d\u202e\u200b\u200b\u206b\u202c\u206e\u200c\u206c\u202c\u206c\u202e<\u0001>(string P_0, Vector3 P_1, Quaternion P_2) where \u0001 : Component
	{
		GameObject gameObject = GameManager.server.FindPrefab(P_0);
		while (true)
		{
			int num = -732543275;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1517169684)) % 14)
				{
				case 0u:
					break;
				case 12u:
				{
					int num7;
					int num8;
					if (!gameObject.activeSelf)
					{
						num7 = -1504247197;
						num8 = num7;
					}
					else
					{
						num7 = -186118576;
						num8 = num7;
					}
					num = num7 ^ (int)(num2 * 773371869);
					continue;
				}
				case 4u:
					Interface.Oxide.LogInfo(global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<string>(134930851) + P_0);
					num = -261806613;
					continue;
				case 10u:
					Interface.Oxide.LogInfo(global::<Module>.\u202b\u200e\u202e\u202a\u206f\u202e\u200c\u206a\u206a\u200b\u206a\u206c\u206f\u202b\u202e\u206f\u206b\u200c\u206a\u206e\u200e\u206c\u202c\u200e\u200d\u202d\u202c\u200e\u206b\u206a\u200b\u202d\u206d\u202c\u202e\u202e\u202c\u202b\u206a\u202a\u202e<string>(-2008276305) + P_0);
					num = -663225295;
					continue;
				case 7u:
					return null;
				case 11u:
					gameObject = Instantiate.GameObject(gameObject, P_1, P_2);
					num = -1831854086;
					continue;
				case 8u:
				{
					int num5;
					int num6;
					if (gameObject == null)
					{
						num5 = -573278158;
						num6 = num5;
					}
					else
					{
						num5 = -967553677;
						num6 = num5;
					}
					num = num5 ^ ((int)num2 * -443446847);
					continue;
				}
				case 5u:
					SceneManager.MoveGameObjectToScene(gameObject, Server.EntityScene);
					num = (int)((num2 * 28910998) ^ 0x6C7CD512);
					continue;
				case 13u:
					gameObject.name = P_0;
					num = -1192951761;
					continue;
				case 3u:
					return null;
				case 2u:
					UnityEngine.Object.Destroy(gameObject.GetComponent<Spawnable>());
					num = ((int)num2 * -2029498000) ^ -36937066;
					continue;
				case 1u:
					gameObject.SetActive(value: true);
					num = ((int)num2 * -1684848005) ^ -1793833427;
					continue;
				case 9u:
				{
					int num3;
					int num4;
					if (!(gameObject == null))
					{
						num3 = 1372841127;
						num4 = num3;
					}
					else
					{
						num3 = 996335036;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -715676438);
					continue;
				}
				default:
					return gameObject.GetComponent<\u0001>();
				}
				break;
			}
		}
	}

	public T FindEntity<T>(BasePlayer player) where T : Component
	{
		Vector3 aim = Quaternion.Euler(player.serverInput.current.aimAngles) * Vector3.forward;
		Vector3 vector = new Vector3(0f, 1.5f, 0f);
		T result = default(T);
		T val = default(T);
		while (true)
		{
			int num = 1132198070;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x63FB6310)) % 6)
				{
				case 0u:
					break;
				case 3u:
					result = null;
					num = 661968801;
					continue;
				case 2u:
				{
					int num3;
					int num4;
					if ((object)val != null)
					{
						num3 = 716205413;
						num4 = num3;
					}
					else
					{
						num3 = 2052252959;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -790995753);
					continue;
				}
				case 4u:
					val = CastRay<T>(player.transform.position + vector, aim);
					num = (int)(num2 * 2016352268) ^ -1507701986;
					continue;
				case 5u:
					return val;
				default:
					return result;
				}
				break;
			}
		}
	}

	private T CastRay<T>(Vector3 Pos, Vector3 Aim) where T : Component
	{
		RaycastHit[] array = Physics.RaycastAll(Pos, Aim);
		float num3 = default(float);
		RaycastHit raycastHit = default(RaycastHit);
		int num4 = default(int);
		T result = default(T);
		while (true)
		{
			int num = -2043167081;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -420984320)) % 10)
				{
				case 0u:
					break;
				case 8u:
					num3 = raycastHit.distance;
					num = (int)(num2 * 780578300) ^ -1553668124;
					continue;
				case 1u:
				{
					raycastHit = array[num4];
					int num6;
					if (raycastHit.collider.GetComponentInParent<T>() != null)
					{
						num = -238794300;
						num6 = num;
					}
					else
					{
						num = -696543069;
						num6 = num;
					}
					continue;
				}
				case 6u:
				{
					int num7;
					int num8;
					if (raycastHit.distance >= num3)
					{
						num7 = -461885001;
						num8 = num7;
					}
					else
					{
						num7 = -480597528;
						num8 = num7;
					}
					num = num7 ^ (int)(num2 * 1158626965);
					continue;
				}
				case 7u:
					num4 = 0;
					num = (int)((num2 * 1413732578) ^ 0x5F41BE93);
					continue;
				case 3u:
					num4++;
					num = -1962916859;
					continue;
				case 5u:
				{
					int num5;
					if (num4 < array.Length)
					{
						num = -1992788373;
						num5 = num;
					}
					else
					{
						num = -1038946112;
						num5 = num;
					}
					continue;
				}
				case 2u:
					result = raycastHit.collider.GetComponentInParent<T>();
					num = ((int)num2 * -1692777674) ^ 0x1F5FFDDB;
					continue;
				case 9u:
					num3 = 1000f;
					result = null;
					num = (int)(num2 * 1113746699) ^ -1380871162;
					continue;
				default:
					return result;
				}
				break;
			}
		}
	}

	public byte[] \u202a\u202b\u206f\u206f\u200b\u206c\u206d\u206a\u206c\u206b\u202e\u202a\u202a\u206a\u200d\u206e\u206e\u202e\u202a\u200d\u200c\u202c\u206a\u200b\u200c\u200b\u206d\u206e\u206c\u200c\u206d\u200f\u202b\u200c\u202e\u200d\u200d\u202b\u202d\u206b\u202e(string P_0)
	{
		StringBuilder stringBuilder = new StringBuilder(P_0);
		StringBuilder stringBuilder2 = default(StringBuilder);
		int num3 = default(int);
		char value = default(char);
		while (true)
		{
			int num = 823495644;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x7F6B2186)) % 9)
				{
				case 3u:
					break;
				case 2u:
					stringBuilder2 = new StringBuilder(P_0.Length);
					num = (int)(num2 * 1659543162) ^ -55127376;
					continue;
				case 0u:
					num = (int)((num2 * 1900180678) ^ 0x6B130C72);
					continue;
				case 8u:
					num3 = 0;
					num = ((int)num2 * -87469714) ^ -1459852447;
					continue;
				case 4u:
					num3++;
					num = (int)(num2 * 257589414) ^ -437811946;
					continue;
				case 7u:
					value = stringBuilder[num3];
					value = (char)(value ^ \u200c\u206a\u206b\u202c\u206a\u200e\u202e\u206f\u206c\u206d\u202e\u202c\u202a\u202e\u202d\u206d\u202b\u206e\u200b\u206e\u200d\u200e\u200f\u206e\u206b\u200d\u200f\u206a\u200c\u202e\u202c\u200f\u200f\u206a\u200f\u200b\u200f\u202e\u200e\u200c\u202e);
					num = 78269985;
					continue;
				case 6u:
					stringBuilder2.Append(value);
					num = ((int)num2 * -712092212) ^ -56963069;
					continue;
				case 1u:
				{
					int num4;
					if (num3 < P_0.Length)
					{
						num = 1691271058;
						num4 = num;
					}
					else
					{
						num = 1525100813;
						num4 = num;
					}
					continue;
				}
				default:
					return World.GetMap(stringBuilder2.ToString()) ?? World.GetMap(\u200c\u202e\u202e\u206d\u200b\u202b\u206d\u206c\u202a\u202c\u206d\u200b\u202c\u202d\u202c\u206b\u206e\u200d\u202e\u200c\u200b\u202c\u206f\u202c\u206b\u202c\u200d\u202e\u200e\u200d\u200e\u202e\u206e\u206b\u200e\u202d\u206f\u206f\u200d\u206b\u202e(P_0, \u200c\u206a\u206b\u202c\u206a\u200e\u202e\u206f\u206c\u206d\u202e\u202c\u202a\u202e\u202d\u206d\u202b\u206e\u200b\u206e\u200d\u200e\u200f\u206e\u206b\u200d\u200f\u206a\u200c\u202e\u202c\u200f\u200f\u206a\u200f\u200b\u200f\u202e\u200e\u200c\u202e));
				}
				break;
			}
		}
	}

	private string \u200c\u202e\u202e\u206d\u200b\u202b\u206d\u206c\u202a\u202c\u206d\u200b\u202c\u202d\u202c\u206b\u206e\u200d\u202e\u200c\u200b\u202c\u206f\u202c\u206b\u202c\u200d\u202e\u200e\u200d\u200e\u202e\u206e\u206b\u200e\u202d\u206f\u206f\u200d\u206b\u202e(string P_0, int P_1)
	{
		string password = P_1.ToString();
		byte[] bytes = default(byte[]);
		while (true)
		{
			int num = 792457085;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x7D56D53)) % 3)
				{
				case 0u:
					break;
				case 1u:
					goto IL_002b;
				default:
				{
					Aes aes = Aes.Create();
					try
					{
						Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(password, global::<Module>.\u206e\u202e\u202d\u206f\u206c\u206b\u200c\u202d\u200f\u206f\u206a\u206d\u206f\u202c\u200c\u200f\u200c\u206c\u200c\u202b\u206e\u200d\u202c\u202b\u202a\u202b\u202b\u200f\u200c\u200b\u202a\u206b\u202e\u202d\u200c\u200d\u200e\u200f\u206e\u202b\u202e<byte[]>(123070724));
						aes.Key = rfc2898DeriveBytes.GetBytes(32);
						while (true)
						{
							int num3 = 1061551606;
							while (true)
							{
								switch ((num2 = (uint)(num3 ^ 0x7D56D53)) % 3)
								{
								case 0u:
									break;
								case 2u:
									goto IL_008f;
								default:
								{
									MemoryStream memoryStream = new MemoryStream();
									try
									{
										CryptoStream cryptoStream = new CryptoStream(memoryStream, aes.CreateEncryptor(), CryptoStreamMode.Write);
										try
										{
											cryptoStream.Write(bytes, 0, bytes.Length);
											cryptoStream.Close();
										}
										finally
										{
											if (cryptoStream != null)
											{
												while (true)
												{
													IL_00dd:
													int num4 = 1140386327;
													while (true)
													{
														switch ((num2 = (uint)(num4 ^ 0x7D56D53)) % 3)
														{
														case 2u:
															break;
														default:
															goto end_IL_00e2;
														case 1u:
															goto IL_0100;
														case 0u:
															goto end_IL_00e2;
														}
														goto IL_00dd;
														IL_0100:
														((IDisposable)cryptoStream).Dispose();
														num4 = ((int)num2 * -418997124) ^ 0x5585D789;
														continue;
														end_IL_00e2:
														break;
													}
													break;
												}
											}
										}
										P_0 = Convert.ToBase64String(memoryStream.ToArray());
										return P_0;
									}
									finally
									{
										if (memoryStream != null)
										{
											while (true)
											{
												IL_012c:
												int num5 = 1221511101;
												while (true)
												{
													switch ((num2 = (uint)(num5 ^ 0x7D56D53)) % 3)
													{
													case 0u:
														break;
													default:
														goto end_IL_0131;
													case 1u:
														goto IL_014f;
													case 2u:
														goto end_IL_0131;
													}
													goto IL_012c;
													IL_014f:
													((IDisposable)memoryStream).Dispose();
													num5 = (int)((num2 * 863017774) ^ 0x7E46EF98);
													continue;
													end_IL_0131:
													break;
												}
												break;
											}
										}
									}
								}
								}
								break;
								IL_008f:
								aes.IV = rfc2898DeriveBytes.GetBytes(16);
								num3 = (int)((num2 * 106129530) ^ 0x1BEC9297);
							}
						}
					}
					finally
					{
						if (aes != null)
						{
							while (true)
							{
								IL_016a:
								int num6 = 1045939354;
								while (true)
								{
									switch ((num2 = (uint)(num6 ^ 0x7D56D53)) % 3)
									{
									case 0u:
										break;
									default:
										goto end_IL_016f;
									case 2u:
										goto IL_018d;
									case 1u:
										goto end_IL_016f;
									}
									goto IL_016a;
									IL_018d:
									((IDisposable)aes).Dispose();
									num6 = (int)((num2 * 511885639) ^ 0x6655A8AA);
									continue;
									end_IL_016f:
									break;
								}
								break;
							}
						}
					}
				}
				}
				break;
				IL_002b:
				bytes = Encoding.Unicode.GetBytes(P_0);
				num = (int)((num2 * 583811778) ^ 0x7F94DD9E);
			}
		}
	}
}
