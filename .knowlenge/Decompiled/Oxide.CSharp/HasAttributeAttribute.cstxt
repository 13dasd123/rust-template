using System;
using System.Collections.Generic;
using System.Linq;
using Mono.Cecil;
using Mono.Collections.Generic;
using Oxide.CSharp.Patching.Validation;

public class HasAttributeAttribute : HasNameAttribute
{
	public HasAttributeAttribute(string rule, StringValidationType type = StringValidationType.StartsWith, StringComparison comparison = StringComparison.InvariantCultureIgnoreCase)
		: base(rule, type, comparison)
	{
	}

	protected override bool IsValid(object item)
	{
		CustomAttribute val = (CustomAttribute)((item is CustomAttribute) ? item : null);
		if (val != null)
		{
			return base.IsValid((object)((MemberReference)val.AttributeType).FullName);
		}
		if (item is Collection<CustomAttribute> source)
		{
			return ((IEnumerable<CustomAttribute>)source).Any((CustomAttribute a) => base.IsValid((object)((MemberReference)a.AttributeType).FullName));
		}
		AssemblyDefinition val2 = (AssemblyDefinition)((item is AssemblyDefinition) ? item : null);
		if (val2 != null && val2.HasCustomAttributes)
		{
			return ((IEnumerable<CustomAttribute>)val2.CustomAttributes).Any((CustomAttribute a) => base.IsValid((object)((MemberReference)a.AttributeType).FullName));
		}
		ModuleDefinition val3 = (ModuleDefinition)((item is ModuleDefinition) ? item : null);
		if (val3 != null && val3.HasCustomAttributes)
		{
			return ((IEnumerable<CustomAttribute>)val3.CustomAttributes).Any((CustomAttribute a) => base.IsValid((object)((MemberReference)a.AttributeType).FullName));
		}
		IMemberDefinition val4 = (IMemberDefinition)((item is IMemberDefinition) ? item : null);
		if (val4 != null && ((ICustomAttributeProvider)val4).HasCustomAttributes)
		{
			return ((IEnumerable<CustomAttribute>)((ICustomAttributeProvider)val4).CustomAttributes).Any((CustomAttribute a) => base.IsValid((object)((MemberReference)a.AttributeType).FullName));
		}
		return false;
	}
}
