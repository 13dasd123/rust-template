using Oxide.Ext.Chaos.UIFramework;
using Oxide.Game.Rust.Cui;
using UnityEngine;

public class TextContainer : BaseContainer
{
	private TextComponent m_Component;

	protected void Initialize(BaseContainer parent, string text, Style style, Anchor anchor, Offset offset)
	{
		Initialize(\u202d\u206f\u202d\u206c\u206a\u200c\u206b\u200f\u206c\u202d\u200c\u202b\u206b\u206e\u206e\u202e\u202c\u202e\u202e\u206a\u200c\u206b\u202c\u202e\u206a\u206b\u200d\u200f\u202e\u206c\u206e\u202e\u200b\u206a\u206c\u206a\u202c\u206a\u200e\u206c\u202e(), parent, anchor, offset);
		while (true)
		{
			int num = -2106903569;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1444620726)) % 6)
				{
				case 4u:
					break;
				default:
					return;
				case 5u:
					WithStyle(style);
					num = (int)((num2 * 545812166) ^ 0xAAAA7FC);
					continue;
				case 3u:
				{
					int num3;
					int num4;
					if (style != null)
					{
						num3 = 1477513527;
						num4 = num3;
					}
					else
					{
						num3 = 84040148;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -1834542810);
					continue;
				}
				case 0u:
					m_Component.Text = text;
					num = -84120042;
					continue;
				case 1u:
					base.Element.Components.Add(m_Component = UIComponentPool.Get<TextComponent>());
					num = (int)((num2 * 1931428109) ^ 0x5DB52388);
					continue;
				case 2u:
					return;
				}
				break;
			}
		}
	}

	protected void Initialize(string name, Layer layer, string text, Style style, Anchor anchor, Offset offset)
	{
		Initialize(name, layer, anchor, offset);
		while (true)
		{
			int num = 178243487;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x76D395D)) % 5)
				{
				case 0u:
					break;
				case 3u:
					base.Element.Components.Add(m_Component = UIComponentPool.Get<TextComponent>());
					num = ((int)num2 * -1046920244) ^ 0x34962841;
					continue;
				case 1u:
					WithStyle(style);
					num = (int)(num2 * 207628599) ^ -1258975982;
					continue;
				case 4u:
				{
					int num3;
					int num4;
					if (style != null)
					{
						num3 = -1703812858;
						num4 = num3;
					}
					else
					{
						num3 = -25280593;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -1494230917);
					continue;
				}
				default:
					m_Component.Text = text;
					return;
				}
				break;
			}
		}
	}

	public new static TextContainer Create(BaseContainer parent)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, null, Anchor.FullStretch, Offset.Default);
		return textContainer;
	}

	public new static TextContainer Create(BaseContainer parent, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, null, anchor, Offset.Default);
		return textContainer;
	}

	public new static TextContainer Create(BaseContainer parent, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, null, Anchor.FullStretch, offset);
		return textContainer;
	}

	public new static TextContainer Create(BaseContainer parent, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, null, anchor, offset);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, string text)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, text, null, Anchor.FullStretch, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, string text, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, text, null, anchor, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, string text, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, text, null, Anchor.FullStretch, offset);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, string text, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, text, null, anchor, offset);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, Style style)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, style, Anchor.FullStretch, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, Style style, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, style, anchor, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, Style style, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, style, Anchor.FullStretch, offset);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, Style style, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, string.Empty, style, anchor, offset);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, string text, Style style, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, text, style, anchor, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, string text, Style style, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, text, style, Anchor.FullStretch, offset);
		return textContainer;
	}

	public static TextContainer Create(BaseContainer parent, string text, Style style, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(parent, text, style, anchor, offset);
		return textContainer;
	}

	public new static TextContainer Create(string name, Layer layer)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, null, Anchor.FullStretch, Offset.Default);
		return textContainer;
	}

	public new static TextContainer Create(string name, Layer layer, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, null, anchor, Offset.Default);
		return textContainer;
	}

	public new static TextContainer Create(string name, Layer layer, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, null, Anchor.FullStretch, offset);
		return textContainer;
	}

	public new static TextContainer Create(string name, Layer layer, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, null, anchor, offset);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, string text)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, text, null, Anchor.FullStretch, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, string text, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, text, null, anchor, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, string text, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, text, null, Anchor.FullStretch, offset);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, string text, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, text, null, anchor, offset);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, Style style)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, style, Anchor.FullStretch, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, Style style, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, style, anchor, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, Style style, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, style, Anchor.FullStretch, offset);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, Style style, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, string.Empty, style, anchor, offset);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, string text, Style style, Anchor anchor)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, text, style, anchor, Offset.Default);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, string text, Style style, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, text, style, Anchor.FullStretch, offset);
		return textContainer;
	}

	public static TextContainer Create(string name, Layer layer, string text, Style style, Anchor anchor, Offset offset)
	{
		TextContainer textContainer = UIContainerPool.Get<TextContainer>();
		textContainer.Initialize(name, layer, text, style, anchor, offset);
		return textContainer;
	}

	public TextContainer WithText(string text)
	{
		m_Component.Text = text;
		return this;
	}

	public TextContainer WithColor(Oxide.Ext.Chaos.UIFramework.Color color)
	{
		m_Component.Color = color;
		return this;
	}

	public TextContainer WithFont(Oxide.Ext.Chaos.UIFramework.Font font)
	{
		m_Component.Font = font;
		return this;
	}

	public TextContainer WithSize(int size)
	{
		m_Component.FontSize = size;
		return this;
	}

	public TextContainer WithAlignment(TextAnchor alignment)
	{
		m_Component.Alignment = alignment;
		return this;
	}

	public TextContainer WithWrapMode(VerticalWrapMode wrapMode)
	{
		m_Component.VerticalOverflow = wrapMode;
		return this;
	}

	public TextContainer WithFadeIn(float fadeIn)
	{
		m_Component.FadeIn = fadeIn;
		return this;
	}

	public TextContainer WithStyle(Style style)
	{
		if (style != null)
		{
			while (true)
			{
				int num = -526292161;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ -1034991568)) % 3)
					{
					case 0u:
						break;
					case 1u:
						m_Component.WithStyle(style);
						num = ((int)num2 * -1632821582) ^ -1872739053;
						continue;
					default:
						goto end_IL_0003;
					}
					break;
				}
				continue;
				end_IL_0003:
				break;
			}
		}
		return this;
	}

	public override void OnEnterPool()
	{
		if (m_Component != null)
		{
			UIComponentPool.Free(ref m_Component);
			m_Component = null;
		}
		base.OnEnterPool();
	}

	static string \u202d\u206f\u202d\u206c\u206a\u200c\u206b\u200f\u206c\u202d\u200c\u202b\u206b\u206e\u206e\u202e\u202c\u202e\u202e\u206a\u200c\u206b\u202c\u202e\u206a\u206b\u200d\u200f\u202e\u206c\u206e\u202e\u200b\u206a\u206c\u206a\u202c\u206a\u200e\u206c\u202e()
	{
		return CuiHelper.GetGuid();
	}
}
