using System.Collections.Generic;

public class GenericPoolCollection<T>
{
	protected Stack<T> m_Stack;

	protected int m_MaximumSize;

	public bool HasContents => m_Stack.Count > 0;

	public GenericPoolCollection(int maximumSize)
	{
		m_MaximumSize = maximumSize;
		m_Stack = new Stack<T>(maximumSize);
	}

	public virtual T Get()
	{
		T val = (HasContents ? m_Stack.Pop() : CreateInstance());
		OnInstanceCreated(val);
		return val;
	}

	protected virtual T CreateInstance()
	{
		return default(T);
	}

	protected virtual void OnInstanceCreated(T t)
	{
	}

	public virtual void Free(ref T t)
	{
		if (m_Stack.Count >= m_MaximumSize)
		{
			DestroyInstance(ref t);
			return;
		}
		OnInstancePooled(ref t);
		m_Stack.Push(t);
	}

	protected virtual void DestroyInstance(ref T t)
	{
	}

	protected virtual void OnInstancePooled(ref T t)
	{
	}
}
