using System;
using Oxide.Ext.Chaos.UIFramework;
using Oxide.Game.Rust.Cui;
using UnityEngine.UI;

public class ButtonContainer : BaseContainer
{
	private ButtonComponent m_Component;

	protected void Initialize(BaseContainer parent, string command, Style style, Anchor anchor, Offset offset)
	{
		Initialize(\u206a\u202c\u206d\u206f\u206b\u202b\u202c\u200f\u202c\u206e\u202c\u206e\u202e\u206e\u202d\u206b\u202a\u206d\u206b\u202c\u202b\u202c\u202e\u202b\u200b\u200d\u206d\u200d\u202e\u202a\u200e\u202b\u200c\u202c\u202e\u202a\u200e\u202d\u200e\u206f\u202e(), parent, anchor, offset);
		base.Element.Components.Add(m_Component = UIComponentPool.Get<ButtonComponent>());
		if (style != null)
		{
			while (true)
			{
				int num = -685120372;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ -2082919087)) % 3)
					{
					case 0u:
						break;
					case 2u:
						WithStyle(style);
						num = (int)((num2 * 712918300) ^ 0x6197390);
						continue;
					default:
						goto end_IL_0031;
					}
					break;
				}
				continue;
				end_IL_0031:
				break;
			}
		}
		m_Component.Command = command;
	}

	protected void Initialize(string name, Layer layer, string command, Style style, Anchor anchor, Offset offset)
	{
		Initialize(name, layer, anchor, offset);
		while (true)
		{
			int num = -983781305;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1110295098)) % 4)
				{
				case 3u:
					break;
				case 1u:
				{
					base.Element.Components.Add(m_Component = UIComponentPool.Get<ButtonComponent>());
					int num3;
					int num4;
					if (style != null)
					{
						num3 = 1185456389;
						num4 = num3;
					}
					else
					{
						num3 = 676395035;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -1998283177);
					continue;
				}
				case 0u:
					WithStyle(style);
					num = (int)((num2 * 1462370452) ^ 0x66C8675C);
					continue;
				default:
					m_Component.Command = command;
					return;
				}
				break;
			}
		}
	}

	public new static ButtonContainer Create(BaseContainer parent)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, null, Anchor.FullStretch, Offset.Default);
		return buttonContainer;
	}

	public new static ButtonContainer Create(BaseContainer parent, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, null, anchor, Offset.Default);
		return buttonContainer;
	}

	public new static ButtonContainer Create(BaseContainer parent, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, null, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public new static ButtonContainer Create(BaseContainer parent, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, null, anchor, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, string command)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, command, null, Anchor.FullStretch, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, string command, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, command, null, anchor, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, string command, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, command, null, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, string command, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, command, null, anchor, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, Style style)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, style, Anchor.FullStretch, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, Style style, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, style, anchor, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, Style style, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, style, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, Style style, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, string.Empty, style, anchor, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, string command, Style style, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, command, style, anchor, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, string command, Style style, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, command, style, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(BaseContainer parent, string command, Style style, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(parent, command, style, anchor, offset);
		return buttonContainer;
	}

	public new static ButtonContainer Create(string name, Layer layer)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, null, Anchor.FullStretch, Offset.Default);
		return buttonContainer;
	}

	public new static ButtonContainer Create(string name, Layer layer, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, null, anchor, Offset.Default);
		return buttonContainer;
	}

	public new static ButtonContainer Create(string name, Layer layer, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, null, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public new static ButtonContainer Create(string name, Layer layer, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, null, anchor, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, string command)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, command, null, Anchor.FullStretch, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, string command, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, command, null, anchor, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, string command, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, command, null, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, string command, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, command, null, anchor, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, Style style)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, style, Anchor.FullStretch, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, Style style, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, style, anchor, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, Style style, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, style, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, Style style, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, string.Empty, style, anchor, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, string command, Style style, Anchor anchor)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, command, style, anchor, Offset.Default);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, string command, Style style, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, command, style, Anchor.FullStretch, offset);
		return buttonContainer;
	}

	public static ButtonContainer Create(string name, Layer layer, string command, Style style, Anchor anchor, Offset offset)
	{
		ButtonContainer buttonContainer = UIContainerPool.Get<ButtonContainer>();
		buttonContainer.Initialize(name, layer, command, style, anchor, offset);
		return buttonContainer;
	}

	public ButtonContainer WithColor(Color color)
	{
		m_Component.Color = color;
		return this;
	}

	public ButtonContainer CloseOnPress()
	{
		m_Component.Close = true;
		return this;
	}

	public ButtonContainer WithSprite(string sprite)
	{
		m_Component.Sprite = sprite;
		return this;
	}

	public ButtonContainer WithImageType(Image.Type imageType)
	{
		m_Component.ImageType = imageType;
		return this;
	}

	public ButtonContainer WithMaterial(string material)
	{
		m_Component.Material = material;
		return this;
	}

	public ButtonContainer WithFadeIn(float fadeIn)
	{
		m_Component.FadeIn = fadeIn;
		return this;
	}

	public ButtonContainer WithStyle(Style style)
	{
		if (style != null)
		{
			while (true)
			{
				int num = 385657233;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ 0x38E9FDDE)) % 3)
					{
					case 0u:
						break;
					case 2u:
						m_Component.WithStyle(style);
						num = ((int)num2 * -1808983011) ^ 0x52335C38;
						continue;
					default:
						goto end_IL_0003;
					}
					break;
				}
				continue;
				end_IL_0003:
				break;
			}
		}
		return this;
	}

	public ButtonContainer WithCommand(string command)
	{
		m_Component.Command = command;
		return this;
	}

	public ButtonContainer WithCallback(CommandCallbackHandler commandCallbackHandler, Action<ConsoleSystem.Arg> callback, string identifier = "")
	{
		m_Component.SetCommand(commandCallbackHandler, callback, identifier);
		return this;
	}

	public ButtonContainer WithSecureCallback(CommandCallbackHandler commandCallbackHandler, Action<ConsoleSystem.Arg> callback, ulong userId, string identifier = "")
	{
		m_Component.SetSecureCommand(commandCallbackHandler, callback, userId, identifier);
		return this;
	}

	public override void OnEnterPool()
	{
		if (m_Component != null)
		{
			UIComponentPool.Free(ref m_Component);
			m_Component = null;
		}
		base.OnEnterPool();
	}

	static string \u206a\u202c\u206d\u206f\u206b\u202b\u202c\u200f\u202c\u206e\u202c\u206e\u202e\u206e\u202d\u206b\u202a\u206d\u206b\u202c\u202b\u202c\u202e\u202b\u200b\u200d\u206d\u200d\u202e\u202a\u200e\u202b\u200c\u202c\u202e\u202a\u200e\u202d\u200e\u206f\u202e()
	{
		return CuiHelper.GetGuid();
	}
}
