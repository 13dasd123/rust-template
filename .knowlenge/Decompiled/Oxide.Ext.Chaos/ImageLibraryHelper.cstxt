using System;
using System.Collections.Generic;

public class ImageLibraryHelper : BasePluginHelper
{
	public ImageLibraryHelper()
		: base("ImageLibrary", "Image Library")
	{
	}

	public bool AddImage(string url, string imageName, ulong skinID, Action callback = null)
	{
		return Call<bool>("AddImage", new object[4] { url, imageName, skinID, callback });
	}

	public bool AddImageData(string imageName, byte[] bytes, ulong skinID, Action callback = null)
	{
		return Call<bool>("AddImageData", new object[4] { imageName, bytes, skinID, callback });
	}

	public string GetImage(string shortname, ulong skinID = 0uL)
	{
		return Call<string>("GetImage", new object[2] { shortname, skinID }) ?? string.Empty;
	}

	public bool HasImage(string imageName, ulong skinID)
	{
		return Call<bool>("HasImage", new object[2] { imageName, skinID });
	}

	public bool IsReady()
	{
		return Call<bool>("IsReady", Array.Empty<object>());
	}

	public void ImportImageList(string title, Dictionary<string, string> imageList, ulong imageId = 0uL, bool replace = false, Action callback = null)
	{
		Call("ImportImageList", title, imageList, imageId, replace, callback);
	}

	public void ImportItemList(string title, Dictionary<string, Dictionary<ulong, string>> itemList, bool replace = false, Action callback = null)
	{
		Call("ImportItemList", title, itemList, replace, callback);
	}

	public void ImportImageData(string title, Dictionary<string, byte[]> imageList, ulong imageId = 0uL, bool replace = false, Action callback = null)
	{
		Call("ImportImageData", title, imageList, imageId, replace, callback);
	}

	public void LoadImageList(string title, List<KeyValuePair<string, ulong>> imageList, Action callback = null)
	{
		Call("LoadImageList", title, imageList, callback);
	}

	public void RemoveImage(string imageName, ulong imageId)
	{
		Call("RemoveImage", imageName, imageId);
	}
}
