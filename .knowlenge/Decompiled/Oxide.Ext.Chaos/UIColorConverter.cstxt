using System;
using Newtonsoft.Json;
using Oxide.Ext.Chaos.UIFramework;
using UnityEngine;

public class UIColorConverter : JsonConverter
{
	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		Oxide.Ext.Chaos.UIFramework.Color color = (Oxide.Ext.Chaos.UIFramework.Color)value;
		writer.WriteValue($"{color.R} {color.G} {color.B} {color.A}");
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		if (reader.TokenType == JsonToken.String)
		{
			string[] array = reader.Value.ToString().Trim().Split(new char[1] { ' ' });
			return new Oxide.Ext.Chaos.UIFramework.Color(Convert.ToSingle(array[0]), Convert.ToSingle(array[1]), Convert.ToSingle(array[2]), Convert.ToSingle(array[3]));
		}
		return Oxide.Ext.Chaos.UIFramework.Color.Clear;
	}

	public override bool CanConvert(Type objectType)
	{
		return objectType == typeof(UnityEngine.Color);
	}
}
