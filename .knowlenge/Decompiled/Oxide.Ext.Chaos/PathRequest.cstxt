using System;
using System.Collections.Generic;
using Oxide.Ext.Chaos.AStar;
using UnityEngine;

public struct PathRequest
{
	internal Vector3 From;

	internal Vector3 To;

	internal object Reference;

	internal List<Vector3> Results;

	internal Action<PathCompletedResult> PathCompletedCallback;

	internal Action<PathFailedResult> PathFailedCallback;

	public PathRequest(Vector3 from, Vector3 to, object reference, List<Vector3> results, Action<PathCompletedResult> pathComplete, Action<PathFailedResult> pathFailed)
	{
		From = from;
		To = to;
		Reference = reference;
		Results = results;
		PathCompletedCallback = pathComplete;
		PathFailedCallback = pathFailed;
	}

	public void OnPathGenerated()
	{
		PathCompletedCallback?.Invoke(new PathCompletedResult(Reference, Results));
	}

	public void OnPathFailed(PathFailedResult.Enum reason)
	{
		PathFailedCallback?.Invoke(new PathFailedResult(Reference, reason, Results));
	}
}
