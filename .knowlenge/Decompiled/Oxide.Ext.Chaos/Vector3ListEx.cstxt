using System;
using System.Collections.Generic;
using UnityEngine;

public static class Vector3ListEx
{
	private static Vector3[] \u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e = new Vector3[0];

	public static void ChaikinSmooth(this List<Vector3> list, int passes)
	{
		int num = 0;
		int num5 = default(int);
		int num7 = default(int);
		int num6 = default(int);
		while (true)
		{
			int num2;
			int num3;
			if (num < passes)
			{
				num2 = 95621272;
				num3 = num2;
			}
			else
			{
				num2 = 2088462971;
				num3 = num2;
			}
			while (true)
			{
				uint num4;
				switch ((num4 = (uint)(num2 ^ 0x1E4BD8F1)) % 22)
				{
				case 12u:
					num2 = 95621272;
					continue;
				default:
					return;
				case 4u:
				{
					int num10;
					if (num5 % (2 * passes) == 0)
					{
						num2 = 181067339;
						num10 = num2;
					}
					else
					{
						num2 = 771870657;
						num10 = num2;
					}
					continue;
				}
				case 13u:
					\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e[0] = list[0];
					num2 = (int)(num4 * 1834930223) ^ -1307764600;
					continue;
				case 14u:
					num2 = (int)(num4 * 888536296) ^ -87286530;
					continue;
				case 15u:
				{
					int num9;
					if (num7 >= list.Count - 2)
					{
						num2 = 834911345;
						num9 = num2;
					}
					else
					{
						num2 = 647500788;
						num9 = num2;
					}
					continue;
				}
				case 0u:
					num5++;
					num2 = 258769623;
					continue;
				case 5u:
					num6 += 2;
					num7++;
					num2 = (int)((num4 * 1646018868) ^ 0x5D8F96FA);
					continue;
				case 7u:
					num2 = ((int)num4 * -1873349244) ^ -1522462525;
					continue;
				case 6u:
				{
					int num11;
					int num12;
					if (num < passes - 1)
					{
						num11 = 967836532;
						num12 = num11;
					}
					else
					{
						num11 = 1152754854;
						num12 = num11;
					}
					num2 = num11 ^ ((int)num4 * -38160417);
					continue;
				}
				case 20u:
					num6 = 1;
					num7 = 0;
					num2 = (int)((num4 * 952676648) ^ 0x6FC42B37);
					continue;
				case 17u:
					list.Clear();
					num2 = ((int)num4 * -926562742) ^ -996903829;
					continue;
				case 18u:
				{
					int num8;
					if (num5 < \u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e.Length)
					{
						num2 = 1157578005;
						num8 = num2;
					}
					else
					{
						num2 = 450966534;
						num8 = num2;
					}
					continue;
				}
				case 21u:
					\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e[num6] = list[num7] + (list[num7 + 1] - list[num7]) * 0.75f;
					\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e[num6 + 1] = list[num7 + 1] + (list[num7 + 2] - list[num7 + 1]) * 0.25f;
					num2 = 7269536;
					continue;
				case 19u:
					\u200c\u202d\u206b\u200c\u200d\u202c\u200d\u200d\u206f\u206a\u202c\u206f\u200e\u206a\u202b\u206d\u206a\u202b\u202d\u200f\u200d\u200b\u206e\u206f\u206a\u200d\u206e\u206a\u200d\u202a\u200e\u200f\u202b\u200f\u202b\u202c\u206a\u200f\u200f\u206e\u202e((Array)\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e, 0, \u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e.Length);
					num2 = 958984626;
					continue;
				case 2u:
					list.Add(\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e[num5]);
					num2 = (int)(num4 * 493856743) ^ -2038978537;
					continue;
				case 9u:
					list.Clear();
					num5 = 0;
					num2 = 1234218324;
					continue;
				case 16u:
					list.AddRange(\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e);
					num2 = ((int)num4 * -562024542) ^ 0x7C7B84D6;
					continue;
				case 8u:
					\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e[\u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e.Length - 1] = list[list.Count - 1];
					num2 = (int)((num4 * 198590034) ^ 0x4F2C5A15);
					continue;
				case 11u:
					num++;
					num2 = (int)((num4 * 852560433) ^ 0x1B2F5F7);
					continue;
				case 3u:
					Array.Resize(ref \u200e\u202c\u200b\u206b\u200e\u202e\u200f\u206e\u202c\u200b\u202a\u206a\u206a\u200d\u206b\u202c\u200f\u202a\u206f\u206a\u206c\u206c\u202c\u200f\u202e\u206f\u202b\u202a\u206b\u200b\u202c\u200e\u202d\u200e\u200e\u202e\u200e\u206d\u200d\u202a\u202e, (list.Count - 2) * 2 + 2);
					num2 = 1954846868;
					continue;
				case 1u:
					break;
				case 10u:
					return;
				}
				break;
			}
		}
	}

	static void \u200c\u202d\u206b\u200c\u200d\u202c\u200d\u200d\u206f\u206a\u202c\u206f\u200e\u206a\u202b\u206d\u206a\u202b\u202d\u200f\u200d\u200b\u206e\u206f\u206a\u200d\u206e\u206a\u200d\u202a\u200e\u200f\u202b\u200f\u202b\u202c\u206a\u200f\u200f\u206e\u202e(Array P_0, int P_1, int P_2)
	{
		Array.Clear(P_0, P_1, P_2);
	}
}
