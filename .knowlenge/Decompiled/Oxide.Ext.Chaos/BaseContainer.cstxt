using System;
using System.Collections.Generic;
using System.Linq;
using Facepunch;
using Oxide.Ext.Chaos.UIFramework;
using Oxide.Game.Rust.Cui;
using UnityEngine;

public class BaseContainer : IPoolable
{
	protected CuiElementComponent m_Element;

	internal RectTransformComponent m_Transform;

	internal List<BaseContainer> m_Children;

	protected BaseContainer m_Parent;

	private StylePreset m_StylePreset;

	public static readonly NeedsCursorComponent NeedsCursorComponent = new NeedsCursorComponent();

	public static readonly NeedsKeyboardComponent NeedsKeyboardComponent;

	public string Name
	{
		get
		{
			return m_Element.Name;
		}
		set
		{
			m_Element.Name = value;
		}
	}

	internal CuiElementComponent Element => m_Element;

	internal List<BaseContainer> Children => m_Children;

	public BaseContainer RootContainer
	{
		get
		{
			if (m_Parent == null)
			{
				while (true)
				{
					uint num;
					switch ((num = 1938480622u) % 3)
					{
					case 0u:
						continue;
					case 1u:
						return this;
					}
					break;
				}
			}
			return m_Parent.RootContainer;
		}
	}

	public StylePreset StylePreset
	{
		get
		{
			if (m_StylePreset == null)
			{
				while (true)
				{
					int num = -653628558;
					while (true)
					{
						uint num2;
						switch ((num2 = (uint)(num ^ -677185545)) % 5)
						{
						case 4u:
							break;
						case 1u:
						{
							int num3;
							int num4;
							if (m_Parent != null)
							{
								num3 = 1909361550;
								num4 = num3;
							}
							else
							{
								num3 = 1661415801;
								num4 = num3;
							}
							num = num3 ^ (int)(num2 * 1531600585);
							continue;
						}
						case 3u:
							return m_Parent.StylePreset;
						case 2u:
							return ChaosStyle.Preset;
						default:
							goto end_IL_0008;
						}
						break;
					}
					continue;
					end_IL_0008:
					break;
				}
			}
			return m_StylePreset;
		}
	}

	protected void Initialize(string name, Layer layer, Anchor anchor, Offset offset)
	{
		m_Element = UIComponentPool.Get<CuiElementComponent>();
		while (true)
		{
			int num = -1747286179;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -3716472)) % 6)
				{
				case 4u:
					break;
				default:
					return;
				case 5u:
					m_Element.Initialize(name, layer);
					m_Element.Components.Add(m_Transform = UIComponentPool.Get<RectTransformComponent>());
					num = (int)((num2 * 1630827033) ^ 0x22F63540);
					continue;
				case 0u:
					m_Children = Pool.GetList<BaseContainer>();
					num = (int)(num2 * 1476146172) ^ -556311824;
					continue;
				case 2u:
					m_Children.Add(this);
					num = ((int)num2 * -1799002580) ^ 0x253C29CF;
					continue;
				case 3u:
					m_Transform.Set(anchor, offset);
					num = (int)(num2 * 648890929) ^ -1028063543;
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
	}

	protected void Initialize(string name, BaseContainer parent, Anchor anchor, Offset offset)
	{
		m_Parent = parent;
		while (true)
		{
			int num = -996006852;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1792141105)) % 7)
				{
				case 2u:
					break;
				default:
					return;
				case 4u:
					m_Element = UIComponentPool.Get<CuiElementComponent>();
					num = (int)(num2 * 1844920724) ^ -1762957959;
					continue;
				case 0u:
					m_Element.Initialize(name, parent);
					m_Element.Components.Add(m_Transform = UIComponentPool.Get<RectTransformComponent>());
					num = ((int)num2 * -819862771) ^ 0x63E02059;
					continue;
				case 6u:
					m_Transform.Set(anchor, offset);
					num = ((int)num2 * -1033526531) ^ 0x54C752EA;
					continue;
				case 3u:
					RootContainer.m_Children.Add(this);
					num = ((int)num2 * -488205989) ^ -1307153991;
					continue;
				case 1u:
				{
					int num3;
					int num4;
					if (parent == null)
					{
						num3 = -1592493910;
						num4 = num3;
					}
					else
					{
						num3 = -2135389784;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 1031262185);
					continue;
				}
				case 5u:
					return;
				}
				break;
			}
		}
	}

	protected virtual void Initialize(string name, BaseContainer parent, RectTransformComponent transform)
	{
		m_Parent = parent;
		m_Element = UIComponentPool.Get<CuiElementComponent>();
		while (true)
		{
			int num = -1605476399;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1873105858)) % 4)
				{
				case 2u:
					break;
				default:
					return;
				case 3u:
				{
					m_Element.Initialize(name, parent);
					m_Element.Components.Add(m_Transform = UIComponentPool.Get<RectTransformComponent>());
					m_Transform.Set(transform);
					int num3;
					int num4;
					if (parent == null)
					{
						num3 = 926223438;
						num4 = num3;
					}
					else
					{
						num3 = 1714787295;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 1269718999);
					continue;
				}
				case 0u:
					RootContainer.m_Children.Add(this);
					num = (int)((num2 * 216455350) ^ 0x5CDFD667);
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
	}

	public static BaseContainer Create(BaseContainer parent)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(\u202a\u202d\u206a\u200c\u200d\u202c\u206f\u206d\u202c\u206e\u200d\u206f\u202c\u206c\u202c\u206d\u202b\u202d\u202c\u200d\u200f\u202c\u206a\u202b\u200b\u200f\u202a\u200f\u200b\u206c\u200b\u200c\u206a\u200c\u206a\u206b\u200b\u206d\u200c\u206d\u202e(), parent, Anchor.FullStretch, Offset.Default);
		return baseContainer;
	}

	public static BaseContainer Create(BaseContainer parent, Anchor anchor)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(\u202a\u202d\u206a\u200c\u200d\u202c\u206f\u206d\u202c\u206e\u200d\u206f\u202c\u206c\u202c\u206d\u202b\u202d\u202c\u200d\u200f\u202c\u206a\u202b\u200b\u200f\u202a\u200f\u200b\u206c\u200b\u200c\u206a\u200c\u206a\u206b\u200b\u206d\u200c\u206d\u202e(), parent, anchor, Offset.Default);
		return baseContainer;
	}

	public static BaseContainer Create(BaseContainer parent, Offset offset)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(\u202a\u202d\u206a\u200c\u200d\u202c\u206f\u206d\u202c\u206e\u200d\u206f\u202c\u206c\u202c\u206d\u202b\u202d\u202c\u200d\u200f\u202c\u206a\u202b\u200b\u200f\u202a\u200f\u200b\u206c\u200b\u200c\u206a\u200c\u206a\u206b\u200b\u206d\u200c\u206d\u202e(), parent, Anchor.FullStretch, offset);
		return baseContainer;
	}

	public static BaseContainer Create(BaseContainer parent, Anchor anchor, Offset offset)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(\u202a\u202d\u206a\u200c\u200d\u202c\u206f\u206d\u202c\u206e\u200d\u206f\u202c\u206c\u202c\u206d\u202b\u202d\u202c\u200d\u200f\u202c\u206a\u202b\u200b\u200f\u202a\u200f\u200b\u206c\u200b\u200c\u206a\u200c\u206a\u206b\u200b\u206d\u200c\u206d\u202e(), parent, anchor, offset);
		return baseContainer;
	}

	public static BaseContainer Create(string name, BaseContainer parent)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, parent, Anchor.FullStretch, Offset.Default);
		return baseContainer;
	}

	public static BaseContainer Create(string name, Layer layer)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, layer, Anchor.FullStretch, Offset.Default);
		return baseContainer;
	}

	public static BaseContainer Create(string name, BaseContainer parent, Anchor anchor)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, parent, anchor, Offset.Default);
		return baseContainer;
	}

	public static BaseContainer Create(string name, Layer layer, Anchor anchor)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, layer, anchor, Offset.Default);
		return baseContainer;
	}

	public static BaseContainer Create(string name, BaseContainer parent, Offset offset)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, parent, Anchor.FullStretch, offset);
		return baseContainer;
	}

	public static BaseContainer Create(string name, Layer layer, Offset offset)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, layer, Anchor.FullStretch, offset);
		return baseContainer;
	}

	public static BaseContainer Create(string name, BaseContainer parent, Anchor anchor, Offset offset)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, parent, anchor, offset);
		return baseContainer;
	}

	public static BaseContainer Create(string name, Layer layer, Anchor anchor, Offset offset)
	{
		BaseContainer baseContainer = UIContainerPool.Get<BaseContainer>();
		baseContainer.Initialize(name, layer, anchor, offset);
		return baseContainer;
	}

	public BaseContainer WithParent(string parent)
	{
		m_Element.Parent = parent;
		List<BaseContainer> children = RootContainer.m_Children;
		if (!children.Contains(this))
		{
			while (true)
			{
				int num = 200547143;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ 0x1BC178D0)) % 3)
					{
					case 2u:
						break;
					case 1u:
						children.Add(this);
						num = ((int)num2 * -11948550) ^ -1061336422;
						continue;
					default:
						goto end_IL_0021;
					}
					break;
				}
				continue;
				end_IL_0021:
				break;
			}
		}
		return this;
	}

	public BaseContainer WithParent(BaseContainer parent)
	{
		m_Element.Parent = parent.m_Element.Name;
		List<BaseContainer> children = default(List<BaseContainer>);
		while (true)
		{
			int num = -137939337;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -868531067)) % 4)
				{
				case 3u:
					break;
				case 2u:
				{
					m_Parent = parent;
					children = RootContainer.m_Children;
					int num3;
					int num4;
					if (!children.Contains(this))
					{
						num3 = -1610719524;
						num4 = num3;
					}
					else
					{
						num3 = -1615266671;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 1638080080);
					continue;
				}
				case 1u:
					children.Add(this);
					num = ((int)num2 * -88757314) ^ 0x3D20AAFF;
					continue;
				default:
					return this;
				}
				break;
			}
		}
	}

	public BaseContainer WithChildren(Action<BaseContainer> createAction)
	{
		createAction(this);
		return this;
	}

	public BaseContainer WithName(string name)
	{
		Name = name;
		return this;
	}

	public BaseContainer WithParent(Layer layer)
	{
		m_Element.Parent = \u200c\u206b\u202a\u206a\u200f\u202a\u206e\u206a\u202c\u202b\u200e\u202b\u200e\u202a\u206a\u202d\u206d\u206c\u206e\u200f\u206d\u202e\u202e\u202c\u206d\u206f\u206b\u206c\u206d\u206f\u202d\u200f\u200d\u202e\u202c\u202b\u200f\u206e\u200b\u202a\u202e.\u200d\u200d\u206e\u202e\u200e\u200c\u202a\u200f\u206c\u202a\u200e\u206c\u200e\u202d\u202d\u206c\u200e\u200e\u202d\u206d\u206f\u206c\u202d\u202c\u200d\u206c\u200d\u206a\u200b\u202d\u200b\u206c\u206e\u200c\u206c\u206e\u206b\u202c\u200f\u202b\u202e(layer);
		while (true)
		{
			int num = -890668144;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1517833061)) % 4)
				{
				case 0u:
					break;
				case 3u:
					m_Children = Pool.GetList<BaseContainer>();
					num = ((int)num2 * -469871437) ^ -1277182072;
					continue;
				case 2u:
					m_Children.Add(this);
					num = ((int)num2 * -1759793339) ^ 0x65DF4D14;
					continue;
				default:
					return this;
				}
				break;
			}
		}
	}

	public BaseContainer WithAnchor(Anchor anchor)
	{
		m_Transform.AnchorMin = anchor.Min;
		while (true)
		{
			int num = -746310222;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -2109006440)) % 3)
				{
				case 0u:
					break;
				case 1u:
					goto IL_0033;
				default:
					return this;
				}
				break;
				IL_0033:
				m_Transform.AnchorMax = anchor.Max;
				num = ((int)num2 * -1402265488) ^ 0x20160BBA;
			}
		}
	}

	public BaseContainer WithOffset(Offset offset)
	{
		m_Transform.OffsetMin = offset.Min;
		m_Transform.OffsetMax = offset.Max;
		return this;
	}

	public BaseContainer FromTransform(RectTransformComponent transform)
	{
		m_Transform.AnchorMin = transform.AnchorMin;
		m_Transform.AnchorMax = transform.AnchorMax;
		while (true)
		{
			int num = 1334887530;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x3E1711)) % 3)
				{
				case 0u:
					break;
				case 2u:
					goto IL_0044;
				default:
					return this;
				}
				break;
				IL_0044:
				m_Transform.OffsetMin = transform.OffsetMin;
				m_Transform.OffsetMax = transform.OffsetMax;
				num = (int)((num2 * 108879103) ^ 0x71A9AAF2);
			}
		}
	}

	public BaseContainer WithFadeOut(float fadeOut)
	{
		m_Element.FadeOut = fadeOut;
		return this;
	}

	public BaseContainer Destroy(string panel)
	{
		m_Element.Destroy = panel;
		return this;
	}

	public BaseContainer DestroyExisting()
	{
		m_Element.Destroy = Name;
		return this;
	}

	public BaseContainer NeedsCursor()
	{
		m_Element.Components.Add(NeedsCursorComponent);
		return this;
	}

	public BaseContainer NeedsKeyboard()
	{
		m_Element.Components.Add(NeedsKeyboardComponent);
		return this;
	}

	public BaseContainer AsUpdate()
	{
		m_Element.Update = true;
		return this;
	}

	public BaseContainer WithOutline(OutlineComponent outlineComponent)
	{
		m_Element.Components.Add(outlineComponent);
		return this;
	}

	public BaseContainer WithCountdown(CountdownComponent countdownComponent)
	{
		m_Element.Components.Add(countdownComponent);
		return this;
	}

	public ScrollContentContainer WithScrollView(ScrollViewComponent scrollViewComponent)
	{
		m_Element.Components.Add(scrollViewComponent);
		return ScrollContentContainer.Create(Name, this, scrollViewComponent);
	}

	public BaseContainer WithStylePreset(StylePreset stylePreset)
	{
		m_StylePreset = stylePreset;
		return this;
	}

	public BaseContainer WithLayoutGroup<T1, T2>(T1 layoutGroup, List<T2> elements, int page, Action<int, T2, BaseContainer, Anchor, Offset> createElementAction) where T1 : BaseLayoutGroup
	{
		layoutGroup.RecalculateSize();
		int num3 = default(int);
		int num5 = default(int);
		Anchor anchor = default(Anchor);
		Offset offset = default(Offset);
		int num4 = default(int);
		while (true)
		{
			int num = -580149648;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -892865557)) % 8)
				{
				case 7u:
					break;
				case 2u:
					createElementAction(num3, elements[num5], this, anchor, offset);
					num = ((int)num2 * -2017404602) ^ -430629949;
					continue;
				case 1u:
					layoutGroup.Evaluate(num3, out anchor, out offset);
					num = -1506703135;
					continue;
				case 6u:
				{
					int num6;
					if (num5 >= num4)
					{
						num = -369843010;
						num6 = num;
					}
					else
					{
						num = -1483722966;
						num6 = num;
					}
					continue;
				}
				case 0u:
					num5++;
					num = ((int)num2 * -1943649891) ^ -1424524819;
					continue;
				case 3u:
					num4 = Mathf.Min(elements.Count, (page + 1) * layoutGroup.PerPage);
					num3 = 0;
					num5 = page * layoutGroup.PerPage;
					num = (int)(num2 * 623928436) ^ -329369479;
					continue;
				case 4u:
					num3++;
					num = ((int)num2 * -1820005155) ^ -2071803929;
					continue;
				default:
					return this;
				}
				break;
			}
		}
	}

	public BaseContainer WithLayoutGroup<T1, T2>(T1 layoutGroup, T2[] elements, int page, Action<int, T2, BaseContainer, Anchor, Offset> createElementAction) where T1 : BaseLayoutGroup
	{
		layoutGroup.RecalculateSize();
		int num4 = default(int);
		int num3 = default(int);
		int num5 = default(int);
		Anchor anchor = default(Anchor);
		Offset offset = default(Offset);
		while (true)
		{
			int num = -404891428;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1592665671)) % 8)
				{
				case 7u:
					break;
				case 6u:
				{
					int num6;
					if (num4 < num3)
					{
						num = -680871163;
						num6 = num;
					}
					else
					{
						num = -1493940342;
						num6 = num;
					}
					continue;
				}
				case 4u:
					layoutGroup.Evaluate(num5, out anchor, out offset);
					num = -242965887;
					continue;
				case 0u:
					createElementAction(num5, elements[num4], this, anchor, offset);
					num5++;
					num = ((int)num2 * -55353557) ^ -127960088;
					continue;
				case 2u:
					num5 = 0;
					num4 = page * layoutGroup.PerPage;
					num = (int)(num2 * 1903297861) ^ -1459408715;
					continue;
				case 1u:
					num4++;
					num = ((int)num2 * -857140153) ^ 0x467C0310;
					continue;
				case 5u:
					num3 = Mathf.Min(elements.Length, (page + 1) * layoutGroup.PerPage);
					num = (int)((num2 * 2073548414) ^ 0x41DE806D);
					continue;
				default:
					return this;
				}
				break;
			}
		}
	}

	public BaseContainer WithLayoutGroup<T1, T2>(T1 layoutGroup, IEnumerable<T2> elements, int page, Action<int, T2, BaseContainer, Anchor, Offset> createElementAction) where T1 : BaseLayoutGroup
	{
		layoutGroup.RecalculateSize();
		int num5 = default(int);
		int num4 = default(int);
		int num3 = default(int);
		while (true)
		{
			int num = -137707351;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -184706172)) % 8)
				{
				case 4u:
					break;
				case 5u:
					num5 = Mathf.Min(elements.Count(), (page + 1) * layoutGroup.PerPage);
					num4 = 0;
					num = ((int)num2 * -1838408128) ^ -1714782430;
					continue;
				case 0u:
					num4++;
					num = (int)((num2 * 1268418107) ^ 0xD8E46D6);
					continue;
				case 3u:
				{
					int num6;
					if (num3 < num5)
					{
						num = -1985177021;
						num6 = num;
					}
					else
					{
						num = -1105442059;
						num6 = num;
					}
					continue;
				}
				case 7u:
				{
					layoutGroup.Evaluate(num4, out var anchor, out var offset);
					createElementAction(num4, elements.ElementAt(num3), this, anchor, offset);
					num = -1791653468;
					continue;
				}
				case 2u:
					num3++;
					num = (int)((num2 * 387052705) ^ 0x22EDBB2D);
					continue;
				case 6u:
					num3 = page * layoutGroup.PerPage;
					num = (int)((num2 * 1835657833) ^ 0x48BB5B09);
					continue;
				default:
					return this;
				}
				break;
			}
		}
	}

	public virtual void OnEnterPool()
	{
		m_StylePreset = null;
		if (m_Children != null)
		{
			for (int i = 0; i < m_Children.Count; i++)
			{
				BaseContainer t = m_Children[i];
				if (t != null && t != this)
				{
					UIContainerPool.Free(ref t);
				}
			}
			Pool.FreeList(ref m_Children);
			m_Children = null;
		}
		if (m_Transform != null)
		{
			UIComponentPool.Free(ref m_Transform);
			m_Transform = null;
		}
		if (m_Element != null)
		{
			UIComponentPool.Free(ref m_Element);
			m_Element = null;
		}
		m_Parent = null;
	}

	void IPoolable.OnEnterPool()
	{
		//ILSpy generated this explicit interface implementation from .override directive in OnEnterPool
		this.OnEnterPool();
	}

	public virtual void OnLeavePool()
	{
	}

	void IPoolable.OnLeavePool()
	{
		//ILSpy generated this explicit interface implementation from .override directive in OnLeavePool
		this.OnLeavePool();
	}

	static BaseContainer()
	{
		while (true)
		{
			int num = 907815796;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x653B90)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
					goto IL_002c;
				case 1u:
					return;
				}
				break;
				IL_002c:
				NeedsKeyboardComponent = new NeedsKeyboardComponent();
				num = (int)(num2 * 403188956) ^ -933195420;
			}
		}
	}

	static string \u202a\u202d\u206a\u200c\u200d\u202c\u206f\u206d\u202c\u206e\u200d\u206f\u202c\u206c\u202c\u206d\u202b\u202d\u202c\u200d\u200f\u202c\u206a\u202b\u200b\u200f\u202a\u200f\u200b\u206c\u200b\u200c\u206a\u200c\u206a\u206b\u200b\u206d\u200c\u206d\u202e()
	{
		return CuiHelper.GetGuid();
	}
}
