using System;
using System.Text;
using Oxide.Ext.Chaos.UIFramework;

public class StringBuilderPool : GenericPool
{
	public class Collection : GenericPoolCollection<StringBuilder>
	{
		public bool HasSpace => m_Stack.Count < m_MaximumSize;

		public Collection(int maximumSize = 10)
			: base(maximumSize)
		{
		}

		protected override StringBuilder CreateInstance()
		{
			return Activator.CreateInstance<StringBuilder>();
		}

		protected override void DestroyInstance(ref StringBuilder t)
		{
		}
	}

	private static readonly StringBuilderPool _instance;

	private static Collection m_Collection;

	static StringBuilderPool()
	{
		_instance = new StringBuilderPool();
		m_Collection = new Collection();
	}

	public static StringBuilder Get()
	{
		if (m_Collection != null)
		{
			return m_Collection.Get();
		}
		return Activator.CreateInstance<StringBuilder>();
	}

	public static void Free(ref StringBuilder sb)
	{
		if (sb != null)
		{
			sb.Clear();
			if (m_Collection == null)
			{
				m_Collection = new Collection();
			}
			m_Collection.Free(ref sb);
		}
	}
}
