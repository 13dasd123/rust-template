using System;
using Newtonsoft.Json;
using Unity.Mathematics;

public class int3Converter : JsonConverter
{
	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		int3 @int = (int3)value;
		writer.WriteValue($"{@int.x} {@int.y} {@int.z}");
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		if (reader.TokenType == JsonToken.String)
		{
			string[] array = reader.Value.ToString().Trim().Split(new char[1] { ' ' });
			return new int3(Convert.ToInt32(array[0]), Convert.ToInt32(array[1]), Convert.ToInt32(array[2]));
		}
		return int3.zero;
	}

	public override bool CanConvert(Type objectType)
	{
		return objectType == typeof(int3);
	}
}
