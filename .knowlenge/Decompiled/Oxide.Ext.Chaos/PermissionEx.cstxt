using Oxide.Core;
using Oxide.Core.Libraries;

public static class PermissionEx
{
	private static Permission m_Permission = Interface.Oxide.GetLibrary<Permission>();

	public static bool HasPermission(this BasePlayer player, string permission)
	{
		return m_Permission.UserHasPermission(player.UserIDString, permission);
	}

	public static bool HasPermission(this string playerID, string permission)
	{
		return m_Permission.UserHasPermission(playerID, permission);
	}

	public static bool HasPermission(this ulong playerID, string permission)
	{
		return m_Permission.UserHasPermission(playerID.ToString(), permission);
	}

	public static void GrantPermission(this BasePlayer player, string permission)
	{
		m_Permission.GrantUserPermission(player.UserIDString, permission, null);
	}

	public static void GrantPermission(this string playerID, string permission)
	{
		m_Permission.GrantUserPermission(playerID, permission, null);
	}

	public static void GrantPermission(this ulong playerID, string permission)
	{
		m_Permission.GrantUserPermission(playerID.ToString(), permission, null);
	}

	public static void RevokePermission(this BasePlayer player, string permission)
	{
		m_Permission.RevokeUserPermission(player.UserIDString, permission);
	}

	public static void RevokePermission(this string playerID, string permission)
	{
		m_Permission.RevokeUserPermission(playerID, permission);
	}

	public static void RevokePermission(this ulong playerID, string permission)
	{
		m_Permission.RevokeUserPermission(playerID.ToString(), permission);
	}

	public static bool UserHasGroup(this BasePlayer player, string group)
	{
		return m_Permission.UserHasGroup(player.UserIDString, group);
	}

	public static bool UserHasGroup(this string playerID, string group)
	{
		return m_Permission.UserHasGroup(playerID, group);
	}

	public static bool UserHasGroup(this ulong playerID, string group)
	{
		return m_Permission.UserHasGroup(playerID.ToString(), group);
	}

	public static void AddToGroup(this BasePlayer player, string group)
	{
		m_Permission.AddUserGroup(player.UserIDString, group);
	}

	public static void AddToGroup(this string playerID, string group)
	{
		m_Permission.AddUserGroup(playerID, group);
	}

	public static void AddToGroup(this ulong playerID, string group)
	{
		m_Permission.AddUserGroup(playerID.ToString(), group);
	}

	public static void RemoveFromGroup(this BasePlayer player, string group)
	{
		m_Permission.RemoveUserGroup(player.UserIDString, group);
	}

	public static void RemoveFromGroup(this string playerID, string group)
	{
		m_Permission.RemoveUserGroup(playerID, group);
	}

	public static void RemoveFromGroup(this ulong playerID, string group)
	{
		m_Permission.RemoveUserGroup(playerID.ToString(), group);
	}
}
