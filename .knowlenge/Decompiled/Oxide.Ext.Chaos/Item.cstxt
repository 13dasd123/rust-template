using System.Runtime.CompilerServices;
using Newtonsoft.Json;
using Oxide.Ext.Chaos.Loot;
using UnityEngine;

public class Item
{
	[JsonIgnore]
	private ItemDefinition _itemDefinition;

	[JsonIgnore]
	private static ItemDefinition _blueprintDefinition;

	[JsonProperty(PropertyName = "Shortname")]
	public string Name { get; set; }

	[JsonProperty(PropertyName = "Skin ID")]
	public ulong Skin { get; set; }

	[JsonProperty(PropertyName = "Minimum amount")]
	public int Minimum { get; set; }

	[JsonProperty(PropertyName = "Maximum amount")]
	public int Maximum { get; set; }

	[JsonProperty(PropertyName = "Weight")]
	public int Weight { get; set; } = 1;

	[JsonProperty(PropertyName = "Spawn as blueprint?")]
	public bool Blueprint { get; set; }

	[JsonProperty(PropertyName = "Minimum condition (0.0 - 1.0)")]
	public float MinCondition { get; set; } = 1f;

	[JsonProperty(PropertyName = "Maximum condition (0.0 - 1.0)")]
	public float MaxCondition { get; set; } = 1f;

	[JsonProperty(PropertyName = "Spawn with")]
	public Oxide.Ext.Chaos.Loot.Item Required { get; set; }

	[JsonIgnore]
	private ItemDefinition Definition
	{
		get
		{
			if (\u206f\u206c\u200d\u206d\u206c\u202b\u206f\u202c\u202c\u206a\u206f\u206c\u200d\u202c\u202c\u202c\u206f\u200c\u200d\u202a\u202b\u206c\u206f\u200c\u200f\u206e\u202d\u206a\u200b\u200c\u200d\u206a\u200d\u200c\u200c\u206e\u206d\u200b\u200d\u206d\u202e((Object)_itemDefinition, (Object)null))
			{
				while (true)
				{
					int num = 600088625;
					while (true)
					{
						uint num2;
						switch ((num2 = (uint)(num ^ 0x2634DC4)) % 3)
						{
						case 2u:
							break;
						case 1u:
							_itemDefinition = \u200d\u206d\u206a\u200d\u200e\u202a\u202e\u200c\u200c\u200b\u200d\u206b\u202c\u206f\u200b\u206d\u202d\u202d\u200f\u200e\u202e\u202e\u206f\u206c\u200c\u200b\u202c\u206e\u200c\u202e\u206a\u206e\u206a\u202d\u206a\u202e\u200f\u206a\u200f\u202b\u202e(Name);
							num = ((int)num2 * -2144518713) ^ -1458001532;
							continue;
						default:
							goto end_IL_000e;
						}
						break;
					}
					continue;
					end_IL_000e:
					break;
				}
			}
			return _itemDefinition;
		}
	}

	[JsonIgnore]
	private static ItemDefinition BlueprintDefinition
	{
		[MethodImpl(MethodImplOptions.NoInlining)]
		get
		{
			if (\u206f\u206c\u200d\u206d\u206c\u202b\u206f\u202c\u202c\u206a\u206f\u206c\u200d\u202c\u202c\u202c\u206f\u200c\u200d\u202a\u202b\u206c\u206f\u200c\u200f\u206e\u202d\u206a\u200b\u200c\u200d\u206a\u200d\u200c\u200c\u206e\u206d\u200b\u200d\u206d\u202e((Object)_blueprintDefinition, (Object)null))
			{
				while (true)
				{
					int num = -1349203118;
					while (true)
					{
						uint num2;
						switch ((num2 = (uint)(num ^ -2060057669)) % 3)
						{
						case 0u:
							break;
						case 1u:
							_blueprintDefinition = \u200d\u206d\u206a\u200d\u200e\u202a\u202e\u200c\u200c\u200b\u200d\u206b\u202c\u206f\u200b\u206d\u202d\u202d\u200f\u200e\u202e\u202e\u206f\u206c\u200c\u200b\u202c\u206e\u200c\u202e\u206a\u206e\u206a\u202d\u206a\u202e\u200f\u206a\u200f\u202b\u202e(global::<Module>.\u200d\u206e\u202d\u202a\u206c\u200c\u202e\u206e\u202d\u200f\u200b\u206a\u206c\u202c\u202b\u200e\u200f\u202b\u200d\u206b\u200b\u202e\u202b\u202e\u202a\u206c\u206e\u202d\u200c\u200c\u200b\u206a\u206e\u202a\u206a\u202a\u206d\u202a\u202a\u202c\u202e<string>(1791555539));
							num = -1692446845;
							continue;
						default:
							goto end_IL_000d;
						}
						break;
					}
					continue;
					end_IL_000d:
					break;
				}
			}
			return _blueprintDefinition;
		}
	}

	public Item Create()
	{
		if (\u206f\u206c\u200d\u206d\u206c\u202b\u206f\u202c\u202c\u206a\u206f\u206c\u200d\u202c\u202c\u202c\u206f\u200c\u200d\u202a\u202b\u206c\u206f\u200c\u200f\u206e\u202d\u206a\u200b\u200c\u200d\u206a\u200d\u200c\u200c\u206e\u206d\u200b\u200d\u206d\u202e((Object)Definition, (Object)null))
		{
			goto IL_000e;
		}
		goto IL_0056;
		IL_000e:
		int num = 679660734;
		goto IL_0013;
		IL_0013:
		Item item = default(Item);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x794A56BA)) % 8)
			{
			case 0u:
				break;
			case 6u:
				num = (int)((num2 * 1037962040) ^ 0x56B8BEB8);
				continue;
			case 7u:
				goto IL_0056;
			case 5u:
				item = \u206c\u206f\u202b\u200d\u202c\u206b\u202b\u206e\u202c\u206c\u200d\u200d\u200b\u200c\u202e\u200f\u202b\u202d\u202c\u206a\u206f\u206e\u200c\u200c\u202a\u200f\u206b\u200d\u200d\u200f\u202d\u200c\u200b\u206f\u206e\u206e\u200d\u200e\u206e\u206b\u202e(BlueprintDefinition, 1, 0uL, true);
				num = (int)((num2 * 235266782) ^ 0x5D9EB17F);
				continue;
			case 1u:
				item = \u206c\u206f\u202b\u200d\u202c\u206b\u202b\u206e\u202c\u206c\u200d\u200d\u200b\u200c\u202e\u200f\u202b\u202d\u202c\u206a\u206f\u206e\u200c\u200c\u202a\u200f\u206b\u200d\u200d\u200f\u202d\u200c\u200b\u206f\u206e\u206e\u200d\u200e\u206e\u206b\u202e(Definition, \u206b\u206a\u200b\u200f\u202d\u206e\u202c\u206f\u206d\u206c\u202a\u202c\u202e\u202a\u202c\u206e\u202a\u202e\u202d\u202c\u200b\u200f\u206d\u200d\u202e\u206a\u206e\u202c\u206a\u200c\u200e\u206b\u200b\u206a\u200c\u206d\u206c\u202e\u200b\u202e\u202e(Minimum, Maximum), Skin, true);
				\u206a\u206f\u202d\u206b\u202e\u206e\u206c\u200e\u200f\u206f\u206e\u206d\u206a\u206a\u202a\u206d\u202a\u206f\u200d\u200e\u206c\u202c\u202c\u202c\u202c\u206b\u200c\u200c\u206e\u200b\u200e\u202e\u200e\u202b\u206c\u206f\u200d\u206c\u202a\u206b\u202e(item, \u206c\u206c\u202b\u202c\u202d\u206b\u202e\u206b\u200c\u202c\u200c\u206a\u200b\u200f\u206f\u200f\u202b\u202c\u206d\u206a\u206f\u200e\u206d\u206e\u200b\u202e\u206c\u206b\u206b\u200f\u200c\u200e\u202a\u202c\u202c\u202e\u200c\u206a\u206d\u200d\u202e(Mathf.Clamp01(MinCondition), Mathf.Clamp01(MaxCondition)));
				\u200b\u202d\u202c\u200f\u206a\u206a\u206d\u200e\u206d\u206d\u202e\u200d\u200c\u206c\u202a\u200c\u206d\u206b\u206a\u200c\u206d\u202a\u206d\u200f\u200d\u200f\u206f\u202e\u200c\u206d\u206a\u202b\u200c\u202a\u206d\u206e\u200b\u200e\u202b\u202d\u202e(item);
				num = 1084044264;
				continue;
			case 3u:
				\u206f\u200c\u206a\u202a\u202e\u202a\u200f\u200b\u200e\u200c\u202c\u202e\u202b\u206a\u200c\u206b\u206d\u206c\u200b\u202c\u202c\u200f\u206c\u200c\u206e\u200c\u202b\u206e\u206e\u202b\u200e\u200d\u206d\u206a\u202a\u200b\u200e\u200b\u206d\u200d\u202e(item, Definition.itemid);
				item.amount = \u206b\u206a\u200b\u200f\u202d\u206e\u202c\u206f\u206d\u206c\u202a\u202c\u202e\u202a\u202c\u206e\u202a\u202e\u202d\u202c\u200b\u200f\u206d\u200d\u202e\u206a\u206e\u202c\u206a\u200c\u200e\u206b\u200b\u206a\u200c\u206d\u206c\u202e\u200b\u202e\u202e(Minimum, Maximum);
				num = ((int)num2 * -1639456932) ^ 0x537EB428;
				continue;
			case 4u:
				return null;
			default:
				return item;
			}
			break;
		}
		goto IL_000e;
		IL_0056:
		int num3;
		if (Blueprint)
		{
			num = 1049795311;
			num3 = num;
		}
		else
		{
			num = 2114225411;
			num3 = num;
		}
		goto IL_0013;
	}

	static bool \u206f\u206c\u200d\u206d\u206c\u202b\u206f\u202c\u202c\u206a\u206f\u206c\u200d\u202c\u202c\u202c\u206f\u200c\u200d\u202a\u202b\u206c\u206f\u200c\u200f\u206e\u202d\u206a\u200b\u200c\u200d\u206a\u200d\u200c\u200c\u206e\u206d\u200b\u200d\u206d\u202e(Object P_0, Object P_1)
	{
		return P_0 == P_1;
	}

	static ItemDefinition \u200d\u206d\u206a\u200d\u200e\u202a\u202e\u200c\u200c\u200b\u200d\u206b\u202c\u206f\u200b\u206d\u202d\u202d\u200f\u200e\u202e\u202e\u206f\u206c\u200c\u200b\u202c\u206e\u200c\u202e\u206a\u206e\u206a\u202d\u206a\u202e\u200f\u206a\u200f\u202b\u202e(string P_0)
	{
		return ItemManager.FindItemDefinition(P_0);
	}

	static Item \u206c\u206f\u202b\u200d\u202c\u206b\u202b\u206e\u202c\u206c\u200d\u200d\u200b\u200c\u202e\u200f\u202b\u202d\u202c\u206a\u206f\u206e\u200c\u200c\u202a\u200f\u206b\u200d\u200d\u200f\u202d\u200c\u200b\u206f\u206e\u206e\u200d\u200e\u206e\u206b\u202e(ItemDefinition P_0, int P_1, ulong P_2, bool P_3)
	{
		return ItemManager.Create(P_0, P_1, P_2, P_3);
	}

	static void \u206f\u200c\u206a\u202a\u202e\u202a\u200f\u200b\u200e\u200c\u202c\u202e\u202b\u206a\u200c\u206b\u206d\u206c\u200b\u202c\u202c\u200f\u206c\u200c\u206e\u200c\u202b\u206e\u206e\u202b\u200e\u200d\u206d\u206a\u202a\u200b\u200e\u200b\u206d\u200d\u202e(Item P_0, int P_1)
	{
		P_0.blueprintTarget = P_1;
	}

	static int \u206b\u206a\u200b\u200f\u202d\u206e\u202c\u206f\u206d\u206c\u202a\u202c\u202e\u202a\u202c\u206e\u202a\u202e\u202d\u202c\u200b\u200f\u206d\u200d\u202e\u206a\u206e\u202c\u206a\u200c\u200e\u206b\u200b\u206a\u200c\u206d\u206c\u202e\u200b\u202e\u202e(int P_0, int P_1)
	{
		return Random.Range(P_0, P_1);
	}

	static float \u206c\u206c\u202b\u202c\u202d\u206b\u202e\u206b\u200c\u202c\u200c\u206a\u200b\u200f\u206f\u200f\u202b\u202c\u206d\u206a\u206f\u200e\u206d\u206e\u200b\u202e\u206c\u206b\u206b\u200f\u200c\u200e\u202a\u202c\u202c\u202e\u200c\u206a\u206d\u200d\u202e(float P_0, float P_1)
	{
		return Random.Range(P_0, P_1);
	}

	static void \u206a\u206f\u202d\u206b\u202e\u206e\u206c\u200e\u200f\u206f\u206e\u206d\u206a\u206a\u202a\u206d\u202a\u206f\u200d\u200e\u206c\u202c\u202c\u202c\u202c\u206b\u200c\u200c\u206e\u200b\u200e\u202e\u200e\u202b\u206c\u206f\u200d\u206c\u202a\u206b\u202e(Item P_0, float P_1)
	{
		P_0.conditionNormalized = P_1;
	}

	static void \u200b\u202d\u202c\u200f\u206a\u206a\u206d\u200e\u206d\u206d\u202e\u200d\u200c\u206c\u202a\u200c\u206d\u206b\u206a\u200c\u206d\u202a\u206d\u200f\u200d\u200f\u206f\u202e\u200c\u206d\u206a\u202b\u200c\u202a\u206d\u206e\u200b\u200e\u202b\u202d\u202e(Item P_0)
	{
		P_0.OnVirginSpawn();
	}
}
