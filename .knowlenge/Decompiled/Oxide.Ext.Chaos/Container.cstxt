using System.Collections.Generic;
using System.Linq;
using Facepunch;
using Newtonsoft.Json;
using Oxide.Ext.Chaos.Loot;
using UnityEngine;

public class Container
{
	[JsonProperty(PropertyName = "Minimum amount of items")]
	public int Minimum { get; set; }

	[JsonProperty(PropertyName = "Maximum amount of items")]
	public int Maximum { get; set; }

	[JsonProperty(PropertyName = "Items")]
	public Oxide.Ext.Chaos.Loot.Item[] Items { get; set; }

	public void Populate(ItemContainer container)
	{
		if (container == null)
		{
			goto IL_0006;
		}
		goto IL_0181;
		IL_0006:
		int num = -1745603367;
		goto IL_000b;
		IL_000b:
		int num8 = default(int);
		int num7 = default(int);
		List<Oxide.Ext.Chaos.Loot.Item> obj = default(List<Oxide.Ext.Chaos.Loot.Item>);
		Item item3 = default(Item);
		Oxide.Ext.Chaos.Loot.Item item2 = default(Oxide.Ext.Chaos.Loot.Item);
		int num3 = default(int);
		int num4 = default(int);
		int num13 = default(int);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -182347467)) % 24)
			{
			case 10u:
				break;
			default:
				return;
			case 19u:
				goto IL_0081;
			case 8u:
				num8++;
				num = -634769978;
				continue;
			case 22u:
				goto IL_00ab;
			case 2u:
				num7--;
				num = -846797141;
				continue;
			case 0u:
				num = (int)(num2 * 992114594) ^ -1130507896;
				continue;
			case 21u:
				goto IL_00e7;
			case 20u:
				obj.AddRange(Items);
				num = (int)(num2 * 1124065662) ^ -1025707312;
				continue;
			case 11u:
				num7 = obj.Count - 1;
				num = ((int)num2 * -356251122) ^ 0x534B2451;
				continue;
			case 5u:
				num8 = 0;
				num = ((int)num2 * -630342069) ^ -1529611286;
				continue;
			case 23u:
				\u202b\u206b\u200c\u200f\u206a\u206d\u200f\u200d\u202a\u206a\u206d\u206b\u200d\u200f\u202e\u200b\u202e\u206b\u200b\u206e\u200e\u200d\u202e\u206f\u206c\u202e\u206a\u206a\u206b\u206a\u200c\u202a\u200b\u202a\u200c\u202b\u206f\u200c\u202a\u206d\u202e(item3, 0f);
				num = (int)(num2 * 1557459300) ^ -166727991;
				continue;
			case 9u:
				_ = item2.Required;
				num = -2003111915;
				continue;
			case 15u:
				goto IL_0181;
			case 7u:
				item2 = obj[num7];
				num = -195340141;
				continue;
			case 16u:
			{
				item3 = item2.Create();
				int num11;
				int num12;
				if (item3 == null)
				{
					num11 = -1189344227;
					num12 = num11;
				}
				else
				{
					num11 = -1233632114;
					num12 = num11;
				}
				num = num11 ^ (int)(num2 * 885260561);
				continue;
			}
			case 12u:
				return;
			case 3u:
			{
				int num9;
				int num10;
				if (\u206d\u200d\u206b\u200f\u200b\u206c\u202c\u200f\u202e\u200b\u202d\u200c\u200e\u206b\u202c\u206a\u200c\u206e\u202e\u200c\u206d\u202a\u202c\u206b\u200e\u206a\u200e\u206a\u200d\u200b\u200c\u202a\u202b\u202a\u200e\u206d\u202c\u206d\u200d\u202b\u202e(item3, container, -1, true, false, (BasePlayer)null, true))
				{
					num9 = 1065045175;
					num10 = num9;
				}
				else
				{
					num9 = 928817617;
					num10 = num9;
				}
				num = num9 ^ ((int)num2 * -1955276695);
				continue;
			}
			case 1u:
				num3 = obj.Sum((Oxide.Ext.Chaos.Loot.Item item) => Mathf.Max(1, item.Weight));
				num4 = \u202a\u206f\u202e\u206a\u200d\u200b\u202e\u206d\u202e\u202c\u206e\u206d\u202c\u206f\u202a\u200b\u206f\u202b\u206a\u206c\u200b\u202e\u202e\u206b\u202e\u202b\u206d\u206b\u202b\u202d\u202e\u202b\u202b\u200d\u200e\u200b\u206b\u202c\u202e\u200f\u202e(0, num3);
				num = -861163154;
				continue;
			case 17u:
				obj.Remove(item2);
				num = (int)((num2 * 1395719604) ^ 0x2BD81189);
				continue;
			case 6u:
				obj = Pool.GetList<Oxide.Ext.Chaos.Loot.Item>();
				num = ((int)num2 * -1493994539) ^ -245978722;
				continue;
			case 14u:
			{
				num3 -= Mathf.Max(1, item2.Weight);
				int num5;
				int num6;
				if (num4 < num3)
				{
					num5 = -595330425;
					num6 = num5;
				}
				else
				{
					num5 = -1900768404;
					num6 = num5;
				}
				num = num5 ^ (int)(num2 * 542303924);
				continue;
			}
			case 4u:
				Pool.FreeList(ref obj);
				num = (int)((num2 * 1201417341) ^ 0x1E188C73);
				continue;
			case 13u:
				obj.AddRange(Items);
				num = ((int)num2 * -2101148970) ^ -439458378;
				continue;
			case 18u:
				return;
			}
			break;
			IL_00e7:
			int num14;
			if (num8 < num13)
			{
				num = -191503164;
				num14 = num;
			}
			else
			{
				num = -632274055;
				num14 = num;
			}
			continue;
			IL_00ab:
			int num15;
			if (num7 >= 0)
			{
				num = -383713502;
				num15 = num;
			}
			else
			{
				num = -634769978;
				num15 = num;
			}
			continue;
			IL_0081:
			int num16;
			if (obj.Count != 0)
			{
				num = -842770808;
				num16 = num;
			}
			else
			{
				num = -1936615967;
				num16 = num;
			}
		}
		goto IL_0006;
		IL_0181:
		Clear(container);
		num13 = \u202a\u206f\u202e\u206a\u200d\u200b\u202e\u206d\u202e\u202c\u206e\u206d\u202c\u206f\u202a\u200b\u206f\u202b\u206a\u206c\u200b\u202e\u202e\u206b\u202e\u202b\u206d\u206b\u202b\u202d\u202e\u202b\u202b\u200d\u200e\u200b\u206b\u202c\u202e\u200f\u202e(Minimum, Maximum);
		num = -372444437;
		goto IL_000b;
	}

	private void Clear(ItemContainer container)
	{
		if (container == null)
		{
			return;
		}
		while (true)
		{
			int num = -1215600911;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1670622646)) % 6)
				{
				case 4u:
					break;
				default:
					return;
				case 3u:
				{
					int num4;
					int num5;
					if (container.itemList == null)
					{
						num4 = -2119532987;
						num5 = num4;
					}
					else
					{
						num4 = -821665750;
						num5 = num4;
					}
					num = num4 ^ (int)(num2 * 1556855920);
					continue;
				}
				case 0u:
				{
					int num3;
					if (container.itemList.Count > 0)
					{
						num = -1403801077;
						num3 = num;
					}
					else
					{
						num = -492232726;
						num3 = num;
					}
					continue;
				}
				case 5u:
					return;
				case 1u:
				{
					Item item = container.itemList[0];
					\u200d\u202e\u202c\u202e\u206d\u206e\u206e\u206a\u206c\u202a\u206c\u202a\u206c\u200b\u206b\u200e\u206c\u200c\u200c\u202a\u206e\u202a\u206f\u206e\u200e\u200d\u200d\u206e\u202a\u202b\u206e\u200d\u202d\u206f\u202d\u200e\u200b\u200e\u202e\u202e\u202e(item);
					\u202b\u206b\u200c\u200f\u206a\u206d\u200f\u200d\u202a\u206a\u206d\u206b\u200d\u200f\u202e\u200b\u202e\u206b\u200b\u206e\u200e\u200d\u202e\u206f\u206c\u202e\u206a\u206a\u206b\u206a\u200c\u202a\u200b\u202a\u200c\u202b\u206f\u200c\u202a\u206d\u202e(item, 0f);
					num = -886110726;
					continue;
				}
				case 2u:
					return;
				}
				break;
			}
		}
	}

	static int \u202a\u206f\u202e\u206a\u200d\u200b\u202e\u206d\u202e\u202c\u206e\u206d\u202c\u206f\u202a\u200b\u206f\u202b\u206a\u206c\u200b\u202e\u202e\u206b\u202e\u202b\u206d\u206b\u202b\u202d\u202e\u202b\u202b\u200d\u200e\u200b\u206b\u202c\u202e\u200f\u202e(int P_0, int P_1)
	{
		return Random.Range(P_0, P_1);
	}

	static bool \u206d\u200d\u206b\u200f\u200b\u206c\u202c\u200f\u202e\u200b\u202d\u200c\u200e\u206b\u202c\u206a\u200c\u206e\u202e\u200c\u206d\u202a\u202c\u206b\u200e\u206a\u200e\u206a\u200d\u200b\u200c\u202a\u202b\u202a\u200e\u206d\u202c\u206d\u200d\u202b\u202e(Item P_0, ItemContainer P_1, int P_2, bool P_3, bool P_4, BasePlayer P_5, bool P_6)
	{
		return P_0.MoveToContainer(P_1, P_2, P_3, P_4, P_5, P_6);
	}

	static void \u202b\u206b\u200c\u200f\u206a\u206d\u200f\u200d\u202a\u206a\u206d\u206b\u200d\u200f\u202e\u200b\u202e\u206b\u200b\u206e\u200e\u200d\u202e\u206f\u206c\u202e\u206a\u206a\u206b\u206a\u200c\u202a\u200b\u202a\u200c\u202b\u206f\u200c\u202a\u206d\u202e(Item P_0, float P_1)
	{
		P_0.Remove(P_1);
	}

	static void \u200d\u202e\u202c\u202e\u206d\u206e\u206e\u206a\u206c\u202a\u206c\u202a\u206c\u200b\u206b\u200e\u206c\u200c\u200c\u202a\u206e\u202a\u206f\u206e\u200e\u200d\u200d\u206e\u202a\u202b\u206e\u200d\u202d\u206f\u202d\u200e\u200b\u200e\u202e\u202e\u202e(Item P_0)
	{
		P_0.RemoveFromContainer();
	}
}
