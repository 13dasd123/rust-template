using Oxide.Ext.Chaos.UIFramework;
using Oxide.Game.Rust.Cui;
using UnityEngine.UI;

public class ImageContainer : BaseContainer
{
	private ImageComponent m_Component;

	protected void Initialize(BaseContainer parent, Style style, Anchor anchor, Offset offset)
	{
		Initialize(\u206a\u200b\u200e\u202c\u206f\u206b\u202a\u200c\u206d\u202d\u200d\u202b\u200f\u206e\u202d\u206a\u200b\u200e\u202a\u206b\u200f\u200e\u206b\u202e\u202b\u202a\u200b\u202e\u206a\u200f\u200d\u206f\u206f\u200f\u202e\u206b\u206a\u202c\u206c\u206a\u202e(), parent, anchor, offset);
		while (true)
		{
			int num = 1606639147;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x2106EF6A)) % 4)
				{
				case 2u:
					break;
				default:
					return;
				case 1u:
				{
					base.Element.Components.Add(m_Component = UIComponentPool.Get<ImageComponent>());
					int num3;
					int num4;
					if (style != null)
					{
						num3 = 375143223;
						num4 = num3;
					}
					else
					{
						num3 = 136213372;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -430827230);
					continue;
				}
				case 3u:
					WithStyle(style);
					num = ((int)num2 * -1500236817) ^ 0x26C84CF;
					continue;
				case 0u:
					return;
				}
				break;
			}
		}
	}

	protected void Initialize(string name, Layer layer, Style style, Anchor anchor, Offset offset)
	{
		Initialize(name, layer, anchor, offset);
		while (true)
		{
			int num = 1706870198;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x3E0C0264)) % 4)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
				{
					base.Element.Components.Add(m_Component = UIComponentPool.Get<ImageComponent>());
					int num3;
					int num4;
					if (style == null)
					{
						num3 = -650543753;
						num4 = num3;
					}
					else
					{
						num3 = -1220353407;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 926074133);
					continue;
				}
				case 3u:
					WithStyle(style);
					num = (int)((num2 * 2099228645) ^ 0x8E48D36);
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
	}

	public new static ImageContainer Create(BaseContainer parent)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, null, Anchor.FullStretch, Offset.Default);
		return imageContainer;
	}

	public new static ImageContainer Create(BaseContainer parent, Anchor anchor)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, null, anchor, Offset.Default);
		return imageContainer;
	}

	public new static ImageContainer Create(BaseContainer parent, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, null, Anchor.FullStretch, offset);
		return imageContainer;
	}

	public new static ImageContainer Create(BaseContainer parent, Anchor anchor, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, null, anchor, offset);
		return imageContainer;
	}

	public static ImageContainer Create(BaseContainer parent, Style style)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, style, Anchor.FullStretch, Offset.Default);
		return imageContainer;
	}

	public static ImageContainer Create(BaseContainer parent, Style style, Anchor anchor)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, style, anchor, Offset.Default);
		return imageContainer;
	}

	public static ImageContainer Create(BaseContainer parent, Style style, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, style, Anchor.FullStretch, offset);
		return imageContainer;
	}

	public static ImageContainer Create(BaseContainer parent, Style style, Anchor anchor, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(parent, style, anchor, offset);
		return imageContainer;
	}

	public new static ImageContainer Create(string name, Layer layer, Anchor anchor)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(name, layer, null, anchor, Offset.Default);
		return imageContainer;
	}

	public new static ImageContainer Create(string name, Layer layer, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(name, layer, null, Anchor.FullStretch, offset);
		return imageContainer;
	}

	public new static ImageContainer Create(string name, Layer layer, Anchor anchor, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(name, layer, null, anchor, offset);
		return imageContainer;
	}

	public static ImageContainer Create(string name, Layer layer, Style style)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(name, layer, style, Anchor.FullStretch, Offset.Default);
		return imageContainer;
	}

	public static ImageContainer Create(string name, Layer layer, Style style, Anchor anchor)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(name, layer, style, anchor, Offset.Default);
		return imageContainer;
	}

	public static ImageContainer Create(string name, Layer layer, Style style, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(name, layer, style, Anchor.FullStretch, offset);
		return imageContainer;
	}

	public static ImageContainer Create(string name, Layer layer, Style style, Anchor anchor, Offset offset)
	{
		ImageContainer imageContainer = UIContainerPool.Get<ImageContainer>();
		imageContainer.Initialize(name, layer, style, anchor, offset);
		return imageContainer;
	}

	public ImageContainer WithSprite(string sprite)
	{
		m_Component.Sprite = sprite;
		return this;
	}

	public ImageContainer WithMaterial(string material)
	{
		m_Component.Material = material;
		return this;
	}

	public ImageContainer WithColor(Color color)
	{
		m_Component.Color = color;
		return this;
	}

	public ImageContainer WithPNG(string png)
	{
		m_Component.PNG = png;
		return this;
	}

	public ImageContainer WithIcon(int itemId, ulong skinId = 0uL)
	{
		m_Component.ItemID = itemId;
		m_Component.SkinID = skinId;
		return this;
	}

	public ImageContainer WithImageType(Image.Type imageType)
	{
		m_Component.ImageType = imageType;
		return this;
	}

	public ImageContainer WithFadeIn(float fadeIn)
	{
		m_Component.FadeIn = fadeIn;
		return this;
	}

	public ImageContainer WithStyle(Style style)
	{
		if (style != null)
		{
			while (true)
			{
				int num = -1731932608;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ -703296427)) % 3)
					{
					case 2u:
						break;
					case 1u:
						m_Component.WithStyle(style);
						num = ((int)num2 * -519655294) ^ -598084153;
						continue;
					default:
						goto end_IL_0003;
					}
					break;
				}
				continue;
				end_IL_0003:
				break;
			}
		}
		return this;
	}

	public override void OnEnterPool()
	{
		if (m_Component != null)
		{
			ImageComponent t = m_Component;
			UIComponentPool.Free(ref t);
			m_Component = null;
		}
		base.OnEnterPool();
	}

	static string \u206a\u200b\u200e\u202c\u206f\u206b\u202a\u200c\u206d\u202d\u200d\u202b\u200f\u206e\u202d\u206a\u200b\u200e\u202a\u206b\u200f\u200e\u206b\u202e\u202b\u202a\u200b\u202e\u206a\u200f\u200d\u206f\u206f\u200f\u202e\u206b\u206a\u202c\u206c\u206a\u202e()
	{
		return CuiHelper.GetGuid();
	}
}
