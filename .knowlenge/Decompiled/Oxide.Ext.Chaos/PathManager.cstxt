using Oxide.Ext.Chaos.AStar;
using Oxide.Plugins;
using UnityEngine;

public class PathManager
{
	private static readonly Hash<IPathFinder, Oxide.Ext.Chaos.AStar.PathFinder> _pathFinders = new Hash<IPathFinder, Oxide.Ext.Chaos.AStar.PathFinder>();

	public static Oxide.Ext.Chaos.AStar.PathFinder RegisterPathFinder(IPathFinder plugin, PathFinderConfig config)
	{
		if (_pathFinders.TryGetValue(plugin, out var value))
		{
			value.Destroy();
		}
		value = (_pathFinders[plugin] = new GameObject(plugin.Name).AddComponent<Oxide.Ext.Chaos.AStar.PathFinder>());
		value.Initialize(plugin, config);
		return value;
	}

	public static void Unload(IPathFinder iPathFinder)
	{
		if (_pathFinders.TryGetValue(iPathFinder, out var value))
		{
			value.Destroy();
			_pathFinders.Remove(iPathFinder);
		}
	}

	internal static void OnShutdown()
	{
		foreach (Oxide.Ext.Chaos.AStar.PathFinder value in _pathFinders.Values)
		{
			value.Destroy();
		}
		_pathFinders.Clear();
	}
}
