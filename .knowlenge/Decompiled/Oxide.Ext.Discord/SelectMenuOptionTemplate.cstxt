using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Libraries;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class SelectMenuOptionTemplate
{
	[JsonProperty("Label")]
	public string Label { get; set; } = string.Empty;

	[JsonProperty("Value")]
	public string Value { get; set; } = string.Empty;

	[JsonProperty("Description")]
	public string Description { get; set; } = string.Empty;

	[JsonProperty("Emoji")]
	public EmojiTemplate Emoji { get; set; }

	[JsonProperty("default")]
	public bool Default { get; set; }

	[JsonConstructor]
	public SelectMenuOptionTemplate()
	{
		Emoji = new EmojiTemplate();
	}

	public SelectMenuOptionTemplate(string label, string value, string description = "", EmojiTemplate emoji = null, bool @default = false)
	{
		Label = label;
		Value = value;
		Description = description;
		Emoji = emoji ?? new EmojiTemplate();
		Default = @default;
	}

	public SelectMenuOption ToOption(PlaceholderData data)
	{
		DiscordPlaceholders instance = BaseDiscordLibrary<DiscordPlaceholders>.Instance;
		data?.IncrementDepth();
		SelectMenuOption result = new SelectMenuOption
		{
			Label = instance.ProcessPlaceholders(Label, data),
			Value = instance.ProcessPlaceholders(Value, data),
			Description = instance.ProcessPlaceholders(Description, data),
			Emoji = Emoji.ToEmoji(),
			Default = Default
		};
		data?.DecrementDepth();
		data?.AutoDispose();
		return result;
	}
}
