using Oxide.Core.Plugins;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Libraries;
using Oxide.Ext.Discord.Plugins;

public static class ApplicationCommandPlaceholders
{
	public static Snowflake Id(DiscordApplicationCommand command)
	{
		return command.Id;
	}

	public static string Name(DiscordApplicationCommand command)
	{
		return command.Name;
	}

	public static string Mention(DiscordApplicationCommand command)
	{
		return command.Mention;
	}

	public static string MentionCustom(PlaceholderState state, DiscordApplicationCommand command)
	{
		return command.MentionCustom(state.Format);
	}

	internal static void RegisterPlaceholders()
	{
		RegisterPlaceholders(DiscordExtensionCore.Instance, DefaultKeys.AppCommand, new PlaceholderDataKey("DiscordApplicationCommand"));
	}

	public static void RegisterPlaceholders(Plugin plugin, Oxide.Ext.Discord.Libraries.AppCommandKeys keys, PlaceholderDataKey dataKey)
	{
		DiscordPlaceholders instance = BaseDiscordLibrary<DiscordPlaceholders>.Instance;
		instance.RegisterPlaceholder<DiscordApplicationCommand, Snowflake>(plugin, keys.Id, dataKey, Id);
		instance.RegisterPlaceholder<DiscordApplicationCommand, string>(plugin, keys.Name, dataKey, Name);
		instance.RegisterPlaceholder<DiscordApplicationCommand, string>(plugin, keys.Mention, dataKey, Mention);
		instance.RegisterPlaceholder<DiscordApplicationCommand, string>(plugin, keys.MentionCustom, dataKey, MentionCustom);
	}
}
