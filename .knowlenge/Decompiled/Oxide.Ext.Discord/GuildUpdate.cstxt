using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;
using Oxide.Ext.Discord.Interfaces;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class GuildUpdate : IDiscordValidation
{
	[JsonProperty("name")]
	public string Name { get; set; }

	[Obsolete("Deprecated in Discord API")]
	[JsonProperty("region")]
	public string Region { get; set; }

	[JsonProperty("verification_level")]
	public GuildVerificationLevel? VerificationLevel { get; set; }

	[JsonProperty("default_message_notifications")]
	public DefaultNotificationLevel? DefaultMessageNotifications { get; set; }

	[JsonProperty("explicit_content_filter")]
	public ExplicitContentFilterLevel? ExplicitContentFilter { get; set; }

	[JsonProperty("afk_channel_id")]
	public Snowflake? AfkChannelId { get; set; }

	[JsonProperty("afk_timeout")]
	public int? AfkTimeout { get; set; }

	[JsonProperty("icon")]
	public DiscordImageData? Icon { get; set; }

	[JsonProperty("owner_id")]
	public Snowflake? OwnerId { get; set; }

	[JsonProperty("splash")]
	public DiscordImageData? Splash { get; set; }

	[JsonProperty("discovery_splash")]
	public DiscordImageData? DiscoverySplash { get; set; }

	[JsonProperty("banner")]
	public DiscordImageData? Banner { get; set; }

	[JsonProperty("system_channel_id")]
	public Snowflake? SystemChannelId { get; set; }

	[JsonProperty("system_channel_flags")]
	public SystemChannelFlags? SystemChannelFlags { get; set; }

	[JsonProperty("rules_channel_id")]
	public SystemChannelFlags? RulesChannelId { get; set; }

	[JsonProperty("public_updates_channel_id")]
	public SystemChannelFlags? PublicUpdatesChannelId { get; set; }

	[JsonProperty("preferred_locale")]
	public string PreferredLocale { get; set; }

	[JsonProperty("features")]
	public List<GuildFeatures> Features { get; set; }

	[JsonProperty("description")]
	public string Description { get; set; }

	[JsonProperty("premium_progress_bar_enabled")]
	public bool? PremiumProgressBarEnabled { get; set; }

	[JsonProperty("safety_alerts_channel_id")]
	public SystemChannelFlags? SafetyAlertsChannelId { get; set; }

	public void Validate()
	{
		InvalidGuildException.ThrowIfInvalidName(Name, allowNullOrEmpty: true);
		InvalidImageDataException.ThrowIfInvalidImageData(Icon);
		InvalidImageDataException.ThrowIfInvalidImageData(Splash);
		InvalidImageDataException.ThrowIfInvalidImageData(DiscoverySplash);
		InvalidImageDataException.ThrowIfInvalidImageData(Banner);
		InvalidSnowflakeException.ThrowIfInvalid(AfkChannelId, requireValue: false);
		InvalidSnowflakeException.ThrowIfInvalid(SystemChannelId, requireValue: false);
	}
}
