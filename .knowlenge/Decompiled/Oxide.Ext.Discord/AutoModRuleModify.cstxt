using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Interfaces;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class AutoModRuleModify : IDiscordValidation
{
	[JsonProperty("name")]
	public string Name { get; set; }

	[JsonProperty("event_type")]
	public AutoModEventType EventType { get; set; }

	[JsonProperty("trigger_metadata")]
	public AutoModTriggerMetadata TriggerMetadata { get; set; }

	[JsonProperty("actions")]
	public List<AutoModAction> Actions { get; set; }

	[JsonProperty("enabled")]
	public bool Enabled { get; set; }

	[JsonProperty("exempt_roles")]
	public List<Snowflake> ExemptRoles { get; set; }

	[JsonProperty("exempt_channels")]
	public List<Snowflake> ExemptChannels { get; set; }

	[JsonIgnore]
	public AutoModTriggerType TriggerType { get; private set; }

	public AutoModRuleModify(AutoModTriggerType triggerType)
	{
		TriggerType = triggerType;
	}

	public void Validate()
	{
		TriggerMetadata?.Validate(TriggerType);
	}
}
