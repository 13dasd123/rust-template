using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;

public class EmojiTemplate
{
	[JsonProperty("Emoji Name Or ID")]
	public string Emoji { get; set; } = string.Empty;

	[JsonProperty("For Custom Emojis Is The Emoji Animated")]
	public bool Animated { get; set; }

	[JsonConstructor]
	public EmojiTemplate()
	{
	}

	public EmojiTemplate(string emoji)
	{
		Emoji = emoji;
	}

	public EmojiTemplate(Snowflake emojiId, bool animated = false)
	{
		Emoji = emojiId.ToString();
		Animated = animated;
	}

	public DiscordEmoji ToEmoji()
	{
		if (string.IsNullOrEmpty(Emoji))
		{
			return null;
		}
		if (Snowflake.TryParse(Emoji, out var snowflake))
		{
			return new DiscordEmoji
			{
				EmojiId = snowflake,
				Animated = Animated
			};
		}
		InvalidEmojiException.ThrowIfInvalidEmojiString(Emoji);
		return new DiscordEmoji
		{
			Name = Emoji
		};
	}
}
