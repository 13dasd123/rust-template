using System;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Json;
using Oxide.Ext.Discord.Libraries;

[JsonConverter(typeof(TemplateVersionConverter))]
public readonly struct TemplateVersion : IComparable<TemplateVersion>, IEquatable<TemplateVersion>
{
	public readonly ushort Major;

	public readonly ushort Minor;

	public readonly ushort Revision;

	public TemplateVersion(ushort major, ushort minor, ushort revision)
	{
		Major = major;
		Minor = minor;
		Revision = revision;
	}

	public int CompareTo(TemplateVersion other)
	{
		int num = Major.CompareTo(other.Major);
		if (num != 0)
		{
			return num;
		}
		int num2 = Minor.CompareTo(other.Minor);
		if (num2 != 0)
		{
			return num2;
		}
		return Revision.CompareTo(other.Revision);
	}

	public static bool operator <(TemplateVersion left, TemplateVersion right)
	{
		return left.CompareTo(right) < 0;
	}

	public static bool operator <=(TemplateVersion left, TemplateVersion right)
	{
		return left.CompareTo(right) <= 0;
	}

	public static bool operator >(TemplateVersion left, TemplateVersion right)
	{
		return left.CompareTo(right) > 0;
	}

	public static bool operator >=(TemplateVersion left, TemplateVersion right)
	{
		return left.CompareTo(right) >= 0;
	}

	public override string ToString()
	{
		return $"{Major}.{Minor}.{Revision}";
	}

	public bool Equals(TemplateVersion other)
	{
		return Major == other.Major && Minor == other.Minor && Revision == other.Revision;
	}

	public override bool Equals(object obj)
	{
		return obj is TemplateVersion other && Equals(other);
	}

	public override int GetHashCode()
	{
		return HashCode.Combine(Major, Minor, Revision);
	}
}
