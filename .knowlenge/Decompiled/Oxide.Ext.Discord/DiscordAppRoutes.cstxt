using System;
using Oxide.Ext.Discord.Helpers;
using Oxide.Ext.Discord.Interfaces;

public static class DiscordAppRoutes
{
	public static class General
	{
		public const string Apps = "discord://-/apps";

		public const string GuildDiscovery = "discord://-/guild-discovery";

		public const string CreateGuild = "discord://-/guilds/create";

		public static string Gift(string code)
		{
			return "discord://-/gifts/" + code;
		}

		public static string ServerInvite(string code)
		{
			return "discord://-/invite/" + code;
		}

		public static string Settings(SettingsPage page)
		{
			if (1 == 0)
			{
			}
			string text = page switch
			{
				SettingsPage.Account => "account", 
				SettingsPage.ProfileCustomization => "profile-customization", 
				SettingsPage.PrivacyAndSafety => "privacy-and-safety", 
				SettingsPage.AuthorizedApps => "authorized-apps", 
				SettingsPage.Connections => "connections", 
				SettingsPage.Premium => "premium", 
				SettingsPage.PremiumGuildSubscriptions => "premium-guild-subscription", 
				SettingsPage.Subscriptions => "subscriptions", 
				SettingsPage.Inventory => "inventory", 
				SettingsPage.Billing => "billing", 
				SettingsPage.Appearance => "appearance", 
				SettingsPage.Accessibility => "accessibility", 
				SettingsPage.Voice => "voice", 
				SettingsPage.Text => "text", 
				SettingsPage.Notifications => "notifications", 
				SettingsPage.Keybinds => "keybinds", 
				SettingsPage.Locale => "locale", 
				SettingsPage.Windows => "windows", 
				SettingsPage.Linux => "linux", 
				SettingsPage.StreamerMode => "streamer-mode", 
				SettingsPage.Advanced => "advanced", 
				SettingsPage.ActivityStatus => "activity-status", 
				SettingsPage.Overlay => "overlay", 
				SettingsPage.HypesquadOnline => "hypesquad-online", 
				SettingsPage.Changelogs => "changelogs", 
				SettingsPage.Experiments => "experiments", 
				SettingsPage.DeveloperOptions => "developer-options", 
				SettingsPage.HotspotOptions => "hotspot-options", 
				SettingsPage.DismissibleContentOptions => "dismissible-content-options", 
				SettingsPage.FamilyCenter => "family-center", 
				SettingsPage.Sessions => "sessions", 
				SettingsPage.FriendRequests => "friend-requests", 
				SettingsPage.RegisteredGames => "registered-games", 
				_ => throw new ArgumentOutOfRangeException("page", page, null), 
			};
			if (1 == 0)
			{
			}
			string text2 = text;
			return "discord://-/" + text2;
		}
	}

	public static class DMs
	{
		public static string Channel(IDiscordKey channelId)
		{
			return "discord://-/channels/@me/" + channelId.ToString();
		}

		public static string Message(IDiscordKey channelId, IDiscordKey messageId)
		{
			return "discord://-/channels/@me/" + channelId.ToString() + "/" + messageId.ToString();
		}
	}

	public static class Guilds
	{
		public const string Favorites = "discord://-/channels/@favorites";

		public static string FavoritesChannel(IDiscordKey channelId)
		{
			return "discord://-/channels/@favorites/" + channelId.ToString();
		}

		public static string Guild(IDiscordKey guildId)
		{
			return "discord://-/channels/" + guildId.ToString();
		}

		public static string Channel(IDiscordKey guildId, IDiscordKey channelId)
		{
			return "discord://-/channels/" + guildId.ToString() + "/" + channelId.ToString();
		}

		public static string BrowseChannel(IDiscordKey guildId)
		{
			return "discord://-/channels/" + guildId.ToString() + "/channel-browser";
		}

		public static string ServerGuide(IDiscordKey guildId)
		{
			return "discord://-/channels/" + guildId.ToString() + "/@home";
		}

		public static string Event(IDiscordKey guildId, IDiscordKey eventId)
		{
			return string.Format("{0}/events/{1}/{2}", "discord://-", guildId.ToString(), eventId);
		}

		public static string Message(IDiscordKey guildId, IDiscordKey channelId, IDiscordKey messageId)
		{
			return "discord://-/channels/" + guildId.ToString() + "/" + channelId.ToString() + "/" + messageId.ToString();
		}

		public static string MembershipScreening(IDiscordKey guildId)
		{
			return "discord://-/member-verification/" + guildId.ToString();
		}

		public static string RoleSubscriptions(IDiscordKey guildId)
		{
			return "discord://-/guild-role-subscriptions/" + guildId.ToString();
		}
	}

	private const string BaseUrl = "discord://-";

	public const string MessageRequests = "discord://-/message-requests";

	public static string User(IDiscordKey userId)
	{
		return "discord://-/users/" + userId.ToString();
	}
}
