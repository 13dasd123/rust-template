using System;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Builders;
using Oxide.Ext.Discord.Entities;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class GuildPruneBegin : GuildPruneGet
{
	[JsonProperty("compute_prune_count")]
	public bool ComputePruneCount { get; set; }

	[Obsolete("This field is deprecated and may be removed in a future update")]
	[JsonProperty("reason")]
	public string Reason { get; set; }

	public override string ToQueryString()
	{
		Validate();
		QueryStringBuilder queryStringBuilder = default(QueryStringBuilder);
		queryStringBuilder.Add("days", base.Days.ToString());
		queryStringBuilder.Add("compute_prune_count", ComputePruneCount.ToString());
		if (base.IncludeRoles != null)
		{
			queryStringBuilder.AddList("include_roles", base.IncludeRoles, ",");
		}
		if (!string.IsNullOrEmpty(Reason))
		{
			queryStringBuilder.Add("reason", Reason);
		}
		return queryStringBuilder.ToString();
	}
}
