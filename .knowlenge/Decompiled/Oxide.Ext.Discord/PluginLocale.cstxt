using System;
using Oxide.Core.Plugins;
using Oxide.Ext.Discord.Extensions;
using Oxide.Ext.Discord.Libraries;
using Oxide.Ext.Discord.Plugins;

internal readonly struct PluginLocale : IEquatable<PluginLocale>
{
	internal readonly PluginId PluginId;

	private readonly ServerLocale _language;

	public PluginLocale(Plugin plugin, ServerLocale language)
	{
		if (!language.IsValid)
		{
			throw new ArgumentNullException("language");
		}
		if (plugin == null)
		{
			throw new ArgumentNullException("plugin");
		}
		PluginId = plugin.Id();
		_language = language;
	}

	public override string ToString()
	{
		return $"Plugin: {PluginId.ToString()} Language: {_language}";
	}

	public bool Equals(PluginLocale other)
	{
		return PluginId.Equals(other.PluginId) && _language.Equals(other._language);
	}

	public override bool Equals(object obj)
	{
		return obj is PluginLocale other && Equals(other);
	}

	public override int GetHashCode()
	{
		return HashCode.Combine(PluginId, _language);
	}
}
