using System;
using Oxide.Ext.Discord.Libraries;
using Oxide.Ext.Discord.Types;

internal sealed class EventTimerInstance : BaseTimerInstance
{
	private Func<float, bool> _predicate;

	private float _timeStarted;

	private bool _state;

	public static EventTimerInstance Create(Func<float, bool> predicate, float timeStarted, bool state)
	{
		EventTimerInstance eventTimerInstance = DiscordPool.Internal.Get<EventTimerInstance>();
		eventTimerInstance.Init(predicate, timeStarted, state);
		return eventTimerInstance;
	}

	private void Init(Func<float, bool> predicate, float timeStarted, bool state)
	{
		Init();
		_predicate = predicate;
		_timeStarted = timeStarted;
		_state = state;
	}

	public override void Update(float currentTime)
	{
		float arg = currentTime - _timeStarted;
		try
		{
			if (_predicate(arg) == _state)
			{
				Resolve();
			}
		}
		catch (Exception ex)
		{
			Reject(ex);
		}
	}
}
