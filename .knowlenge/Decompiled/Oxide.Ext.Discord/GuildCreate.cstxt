using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;
using Oxide.Ext.Discord.Interfaces;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class GuildCreate : IDiscordValidation
{
	[JsonProperty("name")]
	public string Name { get; set; }

	[JsonProperty("icon")]
	public DiscordImageData? Icon { get; set; }

	[JsonProperty("verification_level")]
	public GuildVerificationLevel? VerificationLevel { get; set; }

	[JsonProperty("default_message_notifications")]
	public DefaultNotificationLevel? DefaultMessageNotifications { get; set; }

	[JsonProperty("explicit_content_filter")]
	public ExplicitContentFilterLevel? ExplicitContentFilter { get; set; }

	[JsonProperty("roles")]
	public List<DiscordRole> Roles { get; set; }

	[JsonProperty("channels")]
	public List<DiscordChannel> Channels { get; set; }

	[JsonProperty("afk_channel_id")]
	public Snowflake? AfkChannelId { get; set; }

	[JsonProperty("afk_timeout")]
	public int? AfkTimeout { get; set; }

	[JsonProperty("system_channel_id")]
	public Snowflake? SystemChannelId { get; set; }

	[JsonProperty("system_channel_flags")]
	public SystemChannelFlags? SystemChannelFlags { get; set; }

	public void Validate()
	{
		InvalidGuildException.ThrowIfInvalidName(Name, allowNullOrEmpty: false);
		InvalidImageDataException.ThrowIfInvalidImageData(Icon);
	}
}
