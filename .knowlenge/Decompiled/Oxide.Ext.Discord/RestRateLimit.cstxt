using System;
using Oxide.Ext.Discord.Interfaces;
using Oxide.Ext.Discord.Logging;
using Oxide.Ext.Discord.Types;

public class RestRateLimit : BaseRateLimit
{
	private DateTimeOffset _retryAfter;

	public RestRateLimit(ILogger logger)
		: base(50, 1000L, logger)
	{
	}

	public void ReachedRateLimit(DateTimeOffset retryAfter)
	{
		NumRequests = MaxRequests;
		_retryAfter = retryAfter;
	}

	protected override void OnRateLimitReset()
	{
		if (NumRequests > 0)
		{
			Logger.Debug("RestRateLimit.OnRateLimitReset Num Requests: {0} Reached Rate Limit: {1}", NumRequests, base.HasReachedRateLimit);
		}
	}

	public override DateTimeOffset NextReset()
	{
		DateTimeOffset dateTimeOffset = base.NextReset();
		return (dateTimeOffset > _retryAfter) ? dateTimeOffset : _retryAfter;
	}

	public void FiredRequest()
	{
		FiredRequestInternal();
	}
}
