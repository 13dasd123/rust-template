using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;
using Oxide.Ext.Discord.Interfaces;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class ChannelInvite : IDiscordValidation
{
	[JsonProperty("max_age")]
	public int? MaxAge { get; set; }

	[JsonProperty("max_uses")]
	public int? MaxUses { get; set; }

	[JsonProperty("temporary")]
	public bool? Temporary { get; set; }

	[JsonProperty("unique")]
	public bool? Unique { get; set; }

	[JsonProperty("target_user_type")]
	public TargetUserType? TargetUserType { get; set; }

	[JsonProperty("target_user_id")]
	public Snowflake? TargetUser { get; set; }

	[JsonProperty("target_application_id")]
	public Snowflake? TargetApplicationId { get; set; }

	public void Validate()
	{
		InvalidChannelInviteException.ThrowIfInvalidMaxAge(MaxAge);
		InvalidChannelInviteException.ThrowIfInvalidMaxUses(MaxUses);
		InvalidChannelInviteException.ThrowIfInvalidTargetUser(TargetUser);
	}
}
