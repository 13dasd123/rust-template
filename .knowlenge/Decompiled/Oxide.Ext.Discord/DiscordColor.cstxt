using System;
using System.Globalization;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;
using Oxide.Ext.Discord.Json;

[JsonConverter(typeof(DiscordColorConverter))]
public readonly struct DiscordColor : IEquatable<DiscordColor>
{
	public static readonly DiscordColor Default = new DiscordColor(0u);

	public static readonly DiscordColor Teal = new DiscordColor(1752220u);

	public static readonly DiscordColor DarkTeal = new DiscordColor(1146986u);

	public static readonly DiscordColor Green = new DiscordColor(3066993u);

	public static readonly DiscordColor DarkGreen = new DiscordColor(2067276u);

	public static readonly DiscordColor Blue = new DiscordColor(3447003u);

	public static readonly DiscordColor DarkBlue = new DiscordColor(2123412u);

	public static readonly DiscordColor Purple = new DiscordColor(10181046u);

	public static readonly DiscordColor DarkPurple = new DiscordColor(7419530u);

	public static readonly DiscordColor Magenta = new DiscordColor(15277667u);

	public static readonly DiscordColor DarkMagenta = new DiscordColor(11342935u);

	public static readonly DiscordColor Gold = new DiscordColor(15844367u);

	public static readonly DiscordColor LightOrange = new DiscordColor(12745742u);

	public static readonly DiscordColor Orange = new DiscordColor(15105570u);

	public static readonly DiscordColor DarkOrange = new DiscordColor(11027200u);

	public static readonly DiscordColor Red = new DiscordColor(15158332u);

	public static readonly DiscordColor DarkRed = new DiscordColor(10038562u);

	public static readonly DiscordColor LightGrey = new DiscordColor(9936031u);

	public static readonly DiscordColor LighterGrey = new DiscordColor(9807270u);

	public static readonly DiscordColor DarkGrey = new DiscordColor(6323595u);

	public static readonly DiscordColor DarkerGrey = new DiscordColor(5533306u);

	public static readonly DiscordColor Success = new DiscordColor(5763719u);

	public static readonly DiscordColor Warning = new DiscordColor(16705372u);

	public static readonly DiscordColor Danger = new DiscordColor(15548997u);

	public static readonly DiscordColor BlurpleOld = new DiscordColor(7506394u);

	public static readonly DiscordColor Blurple = new DiscordColor(5793266u);

	public static readonly DiscordColor Fuchsia = new DiscordColor(15418782u);

	public readonly uint Color;

	public DiscordColor(uint color)
	{
		InvalidDiscordColorException.ThrowIfInvalidColor(color);
		Color = color;
	}

	public DiscordColor(string color)
		: this(uint.Parse(color.TrimStart('#'), NumberStyles.AllowHexSpecifier))
	{
	}

	public DiscordColor(byte red, byte green, byte blue)
	{
		Color = (uint)((red << 16) + (green << 8) + blue);
	}

	public DiscordColor(int red, int green, int blue)
	{
		InvalidDiscordColorException.ThrowIfOutOfColorRange("red", red);
		InvalidDiscordColorException.ThrowIfOutOfColorRange("green", green);
		InvalidDiscordColorException.ThrowIfOutOfColorRange("blue", blue);
		Color = (uint)((red << 16) + (green << 8) + blue);
	}

	public DiscordColor(uint red, uint green, uint blue)
	{
		InvalidDiscordColorException.ThrowIfOutOfColorRange("red", red);
		InvalidDiscordColorException.ThrowIfOutOfColorRange("green", green);
		InvalidDiscordColorException.ThrowIfOutOfColorRange("blue", blue);
		Color = (red << 16) + (green << 8) + blue;
	}

	public DiscordColor(float red, float green, float blue)
	{
		InvalidDiscordColorException.ThrowIfOutOfColorRange("red", red);
		InvalidDiscordColorException.ThrowIfOutOfColorRange("green", green);
		InvalidDiscordColorException.ThrowIfOutOfColorRange("blue", blue);
		Color = ((uint)(red * 255f) << 16) + ((uint)(green * 255f) << 8) + (uint)(blue * 255f);
	}

	public DiscordColor(double red, double green, double blue)
		: this((float)red, (float)green, (float)blue)
	{
	}

	public override string ToString()
	{
		return Color.ToString();
	}

	public string ToHex()
	{
		return "#" + Color.ToString("X6");
	}

	public bool Equals(DiscordColor other)
	{
		return Color == other.Color;
	}

	public override bool Equals(object obj)
	{
		return obj is DiscordColor other && Equals(other);
	}

	public override int GetHashCode()
	{
		return (int)Color;
	}
}
