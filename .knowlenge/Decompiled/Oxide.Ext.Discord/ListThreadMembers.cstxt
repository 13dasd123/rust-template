using System;
using Oxide.Ext.Discord.Builders;
using Oxide.Ext.Discord.Cache;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Interfaces;
using Oxide.Ext.Discord.Types;

public class ListThreadMembers : IDiscordQueryString
{
	public bool WithMember { get; set; }

	public Snowflake? After { get; set; }

	public int? Limit { get; set; }

	public string ToQueryString()
	{
		QueryStringBuilder queryStringBuilder = default(QueryStringBuilder);
		if (WithMember)
		{
			queryStringBuilder.Add("with_member", Singleton<StringCache<bool>>.Instance.ToString(WithMember));
		}
		if (After.HasValue)
		{
			queryStringBuilder.Add("after", After.Value.ToString());
		}
		if (Limit.HasValue)
		{
			queryStringBuilder.Add("limit", Singleton<StringCache<int>>.Instance.ToString(Math.Clamp(Limit.Value, 1, 100)));
		}
		return queryStringBuilder.ToString();
	}
}
