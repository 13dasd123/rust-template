using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Clients;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Interfaces;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class AutoModRule
{
	[JsonProperty("id")]
	public Snowflake Id { get; set; }

	[JsonProperty("guild_id")]
	public Snowflake GuildId { get; set; }

	[JsonProperty("name")]
	public string Name { get; set; }

	[JsonProperty("creator_id")]
	public Snowflake CreatorId { get; set; }

	[JsonProperty("event_type")]
	public AutoModEventType EventType { get; set; }

	[JsonProperty("trigger_type")]
	public AutoModTriggerType TriggerType { get; set; }

	[JsonProperty("trigger_metadata")]
	public AutoModTriggerMetadata TriggerMetadata { get; set; }

	[JsonProperty("actions")]
	public List<AutoModAction> Actions { get; set; }

	[JsonProperty("enabled")]
	public bool Enabled { get; set; }

	[JsonProperty("exempt_roles")]
	public List<Snowflake> ExemptRoles { get; set; }

	[JsonProperty("exempt_channels")]
	public List<Snowflake> ExemptChannels { get; set; }

	public static IPromise<List<AutoModRule>> GetAll(DiscordClient client, Snowflake guildId)
	{
		return client.Bot.Rest.Get<List<AutoModRule>>(client, $"guilds/{guildId}/auto-moderation/rules", null);
	}

	public static IPromise<AutoModRule> Get(DiscordClient client, Snowflake guildId, Snowflake ruleId)
	{
		return client.Bot.Rest.Get<AutoModRule>(client, $"guilds/{guildId}/auto-moderation/rules/{ruleId}", null);
	}

	public static IPromise<AutoModRule> Create(DiscordClient client, Snowflake guildId, AutoModRuleCreate create)
	{
		return client.Bot.Rest.Post<AutoModRule>(client, $"guilds/{guildId}/auto-moderation/rules", create, null);
	}

	public IPromise<AutoModRule> Edit(DiscordClient client, AutoModRuleModify modify)
	{
		return client.Bot.Rest.Patch<AutoModRule>(client, $"guilds/{GuildId}/auto-moderation/rules/{Id}", modify, null);
	}

	public IPromise Delete(DiscordClient client)
	{
		return client.Bot.Rest.Delete(client, $"guilds/{GuildId}/auto-moderation/rules/{Id}", null);
	}
}
