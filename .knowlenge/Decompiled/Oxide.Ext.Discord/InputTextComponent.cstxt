using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class InputTextComponent : BaseInteractableComponent
{
	[JsonProperty("style")]
	public InputTextStyles Style { get; set; }

	[JsonProperty("label")]
	public string Label { get; set; }

	[JsonProperty("min_length")]
	public int? MinLength { get; set; }

	[JsonProperty("max_length")]
	public int? MaxLength { get; set; }

	[JsonProperty("required")]
	public bool? Required { get; set; }

	[JsonProperty("value")]
	public string Value { get; set; }

	[JsonProperty("placeholder")]
	public string Placeholder { get; set; }

	public InputTextComponent()
	{
		base.Type = MessageComponentType.InputText;
	}

	public override void Validate()
	{
		base.Validate();
		InvalidMessageComponentException.ThrowIfInvalidTextInputLabel(Label);
		InvalidMessageComponentException.ThrowIfInvalidTextInputValue(Value);
		InvalidMessageComponentException.ThrowIfInvalidTextInputLength(MinLength, MaxLength);
	}
}
