using System;

internal ref struct StringTokenizer
{
	private ReadOnlySpan<char> _remaining;

	private readonly ReadOnlySpan<char> _token;

	private readonly int _maxLength;

	public int Index { get; private set; }

	public ReadOnlySpan<char> Current { get; private set; }

	public StringTokenizer(string str, string token)
		: this(str, token, str.Length)
	{
	}

	public StringTokenizer(string str, string token, int maxLength)
	{
		_remaining = str;
		_token = token;
		_maxLength = maxLength;
		Index = -1;
		Current = default(ReadOnlySpan<char>);
	}

	public bool MoveNext()
	{
		if (_remaining.Length == 0)
		{
			return false;
		}
		int num = _remaining.IndexOf(_token);
		if (num == -1 || num > _maxLength)
		{
			num = _remaining.Length;
		}
		if (num == 0)
		{
			_remaining = _remaining.Slice(1);
			return MoveNext();
		}
		Current = _remaining.Slice(0, num);
		_remaining = _remaining.Slice(Math.Min(_remaining.Length, num + 1));
		Index++;
		return true;
	}
}
