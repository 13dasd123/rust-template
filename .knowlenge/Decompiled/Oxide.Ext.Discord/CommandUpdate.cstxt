using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Json;
using Oxide.Plugins;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class CommandUpdate
{
	[JsonProperty("name")]
	public string Name { get; set; }

	[JsonProperty("name_localizations")]
	public Hash<string, string> NameLocalizations { get; set; }

	[JsonProperty("description")]
	public string Description { get; set; }

	[JsonProperty("description_localizations")]
	public Hash<string, string> DescriptionLocalizations { get; set; }

	[JsonProperty("options")]
	public List<CommandOption> Options { get; set; }

	[JsonProperty("default_member_permissions")]
	[JsonConverter(typeof(PermissionFlagsStringConverter))]
	public PermissionFlags DefaultMemberPermissions { get; set; }

	[Obsolete("Deprecated (use Contexts instead)")]
	[JsonProperty("dm_permission")]
	public bool? DmPermission { get; set; }

	[JsonProperty("default_permission")]
	public bool? DefaultPermissions { get; set; }

	[JsonProperty("integration_types")]
	public List<ApplicationIntegrationType> IntegrationTypes { get; set; }

	[JsonProperty("contexts")]
	public List<InteractionContextTypes> Contexts { get; set; }

	[JsonProperty("nsfw")]
	public bool? Nsfw { get; set; }
}
