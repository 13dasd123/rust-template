using System;
using System.Threading;
using System.Threading.Tasks;
using Oxide.Core;

public static class DateTimeOffsetExt
{
	public static ValueTask DelayUntil(this DateTimeOffset time, CancellationToken token = default(CancellationToken))
	{
		return DelayUntil(time, Oxide.Core.Random.Range(25, 40), token);
	}

	public static async ValueTask DelayUntil(this DateTimeOffset time, int additionalMs, CancellationToken token = default(CancellationToken))
	{
		TimeSpan duration = ((time >= DateTimeOffset.UtcNow) ? (time - DateTimeOffset.UtcNow) : TimeSpan.Zero);
		await Task.Delay(duration + TimeSpan.FromMilliseconds(additionalMs), token).ConfigureAwait(continueOnCapturedContext: false);
	}
}
