using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class AutoModTriggerMetadata
{
	[JsonProperty("keyword_filter")]
	public List<string> KeywordFilter { get; set; }

	[JsonProperty("regex_patterns")]
	public List<string> RegexPatterns { get; set; }

	[JsonProperty("presets")]
	public List<AutoModKeywordPresetType> Presets { get; set; }

	[JsonProperty("allow_list")]
	public List<string> AllowList { get; set; }

	[JsonProperty("mention_total_limit")]
	public int MentionTotalLimit { get; set; }

	[JsonProperty("mention_raid_protection_enabled")]
	public bool MentionRaidProtectionEnabled { get; set; }

	internal void Validate(AutoModTriggerType type)
	{
		AutoModTriggerMetadataException.ThrowIfKeywordFilterInvalid(KeywordFilter);
		AutoModTriggerMetadataException.ThrowIfRegexPatternsInvalid(RegexPatterns);
		AutoModTriggerMetadataException.ThrowIfAllowListInvalid(RegexPatterns, type);
		AutoModTriggerMetadataException.ThrowIfInvalidMentionTotalLimit(MentionTotalLimit);
	}
}
