using System;
using Oxide.Core.Libraries.Covalence;
using Oxide.Ext.Discord.Builders;
using Oxide.Ext.Discord.Plugins;

public class PlayerNameFormatter
{
	private readonly PlayerDisplayNameMode _mode;

	private readonly Func<IPlayer, string> _customNameFunc;

	public static readonly PlayerNameFormatter Default = Create(PlayerDisplayNameMode.Default);

	public static readonly PlayerNameFormatter ClanName = Create(PlayerDisplayNameMode.Clan);

	public static readonly PlayerNameFormatter PlayerId = Create(PlayerDisplayNameMode.PlayerId);

	public static readonly PlayerNameFormatter All = Create(PlayerDisplayNameMode.All);

	private PlayerNameFormatter(PlayerDisplayNameMode mode, Func<IPlayer, string> customNameFunc)
	{
		_mode = mode;
		_customNameFunc = customNameFunc;
	}

	private static PlayerNameFormatter Create(PlayerDisplayNameMode mode)
	{
		return new PlayerNameFormatter(mode, null);
	}

	public static PlayerNameFormatter Create(Func<IPlayer, string> customNameFunc)
	{
		return new PlayerNameFormatter(PlayerDisplayNameMode.Default, customNameFunc);
	}

	public string Format(IPlayer player)
	{
		return (_customNameFunc != null) ? _customNameFunc(player) : DiscordExtensionCore.Instance.GetPlayerName(player, _mode);
	}
}
