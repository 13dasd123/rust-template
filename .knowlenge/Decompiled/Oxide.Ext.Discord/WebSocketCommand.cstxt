using Oxide.Ext.Discord.Clients;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Interfaces;
using Oxide.Ext.Discord.Libraries;
using Oxide.Ext.Discord.Logging;
using Oxide.Ext.Discord.Types;

public class WebSocketCommand : BasePoolable, IDebugLoggable
{
	public DiscordClient Client;

	public CommandPayload Payload;

	internal static WebSocketCommand CreateCommand(DiscordClient client, GatewayCommandCode code, object payload)
	{
		WebSocketCommand webSocketCommand = DiscordPool.Internal.Get<WebSocketCommand>();
		webSocketCommand.Init(client, code, payload);
		return webSocketCommand;
	}

	private void Init(DiscordClient client, GatewayCommandCode code, object payload)
	{
		Client = client;
		Payload = CommandPayload.CreatePayload(code, payload);
	}

	protected override void EnterPool()
	{
		Payload?.Dispose();
		Client = null;
		Payload = null;
	}

	public void LogDebug(DebugLogger logger)
	{
		logger.AppendField("Plugin", Client.PluginName);
		logger.AppendFieldEnum("Code", Payload.OpCode);
	}
}
