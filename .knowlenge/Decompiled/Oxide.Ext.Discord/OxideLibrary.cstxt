using System.Linq;
using Oxide.Core;
using Oxide.Core.Libraries;
using Oxide.Core.Libraries.Covalence;
using Oxide.Ext.Discord.Cache;
using Oxide.Ext.Discord.Types;
using Oxide.Plugins;

internal sealed class OxideLibrary : Singleton<OxideLibrary>
{
	internal readonly Covalence Covalence = Interface.Oxide.GetLibrary<Covalence>();

	internal readonly Permission Permission = Interface.Oxide.GetLibrary<Permission>();

	internal readonly Lang Lang = Interface.Oxide.GetLibrary<Lang>();

	internal readonly Plugins Plugins = Interface.Oxide.GetLibrary<Plugins>();

	internal readonly CSharpPluginLoader PluginLoader = Interface.Oxide.GetPluginLoaders().OfType<CSharpPluginLoader>().FirstOrDefault();

	private OxideLibrary()
	{
	}
}
