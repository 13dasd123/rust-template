using System;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Oxide.Ext.Discord.Entities;

public class RoleTagsConverter : JsonConverter
{
	public override bool CanWrite => false;

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		throw new JsonSerializationException("RoleTagsConverter does not support writing.");
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		JObject jObject = JObject.Load(reader);
		return new RoleTags
		{
			BotId = jObject["bot_id"]?.ToObject<Snowflake?>(serializer),
			IntegrationId = jObject["integration_id"]?.ToObject<Snowflake?>(serializer),
			SubscriptionListingId = jObject["subscription_listing_id"]?.ToObject<Snowflake?>(serializer),
			PremiumSubscriber = (jObject["premium_subscriber"] != null),
			AvailableForPurchase = (jObject["available_for_purchase"] != null),
			GuildConnections = (jObject["guild_connections"] != null)
		};
	}

	public override bool CanConvert(Type objectType)
	{
		return typeof(RoleTags) == objectType;
	}
}
