using Newtonsoft.Json;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class ButtonComponent : BaseInteractableComponent
{
	[JsonProperty("style")]
	public ButtonStyle Style { get; set; }

	[JsonProperty("label")]
	public string Label { get; set; }

	[JsonProperty("emoji")]
	public DiscordEmoji Emoji { get; set; }

	[JsonProperty("sku_id")]
	public Snowflake? SkuId { get; set; }

	[JsonProperty("url")]
	public string Url { get; set; }

	[JsonProperty("disabled")]
	public bool? Disabled { get; set; }

	public ButtonComponent()
	{
		base.Type = MessageComponentType.Button;
	}

	public override void Validate()
	{
		base.Validate();
		InvalidMessageComponentException.ThrowIfInvalidButtonLabel(Label);
		if (Style == ButtonStyle.Link)
		{
			InvalidMessageComponentException.ThrowIfInvalidButtonUrl(Url);
		}
	}
}
