using System;
using Oxide.Core.Plugins;
using Oxide.Ext.Discord;
using Oxide.Ext.Discord.Callbacks;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Extensions;
using Oxide.Ext.Discord.Libraries;
using Oxide.Ext.Discord.Logging;

internal class SubscriptionCallback : BaseNextTickCallback
{
	private DiscordMessage _message;

	private Action<DiscordMessage> _callback;

	private Plugin _plugin;

	public static void Start(Plugin plugin, DiscordMessage message, Action<DiscordMessage> callback)
	{
		SubscriptionCallback subscriptionCallback = DiscordPool.Internal.Get<SubscriptionCallback>();
		subscriptionCallback.Init(plugin, message, callback);
		subscriptionCallback.Run();
	}

	private void Init(Plugin plugin, DiscordMessage message, Action<DiscordMessage> callback)
	{
		_message = message;
		_callback = callback;
		_plugin = plugin;
	}

	protected override void HandleCallback()
	{
		Plugin plugin = _plugin;
		if (plugin == null || !plugin.IsLoaded)
		{
			return;
		}
		try
		{
			_plugin.TrackStart();
			_callback(_message);
		}
		catch (Exception exception)
		{
			DiscordExtension.GlobalLogger.Exception("An exception occured for discord subscription in channel {0} for plugin {1}", _message.ChannelId, _plugin.FullName(), exception);
		}
		finally
		{
			_plugin.TrackEnd();
		}
	}

	protected override void EnterPool()
	{
		_plugin = null;
		_message = null;
		_callback = null;
	}
}
