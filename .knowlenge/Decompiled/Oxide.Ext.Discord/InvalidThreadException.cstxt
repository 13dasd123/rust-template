using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;

public class InvalidThreadException : BaseDiscordException
{
	private InvalidThreadException(string message)
		: base(message)
	{
	}

	internal static void ThrowIfInvalidAutoArchiveDuration(int? autoArchiveDuration)
	{
		if (autoArchiveDuration.HasValue)
		{
			switch (autoArchiveDuration.Value)
			{
			case 60:
			case 1440:
			case 4320:
			case 10080:
				return;
			}
			throw new InvalidThreadException("AutoArchiveDuration must be one of 60, 1440, 4320, or 10080");
		}
	}

	internal static void ThrowIfInvalidChannelType(ChannelType type)
	{
		ChannelType channelType = type;
		ChannelType channelType2 = channelType;
		if (channelType2 - 10 <= ChannelType.GuildVoice)
		{
			return;
		}
		throw new InvalidThreadException("Type must be one of GuildNewsThread, GuildPublicThread, or GuildPrivateThread");
	}

	internal static void ThrowIfInvalidForumCreateMessage(MessageCreate create)
	{
		if (create == null)
		{
			throw new InvalidThreadException("Message cannot be null for ThreadForumCreate");
		}
	}
}
