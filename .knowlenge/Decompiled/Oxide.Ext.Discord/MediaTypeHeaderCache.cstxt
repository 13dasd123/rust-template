using System.Net.Http.Headers;
using Oxide.Ext.Discord.Cache;
using Oxide.Ext.Discord.Constants;
using Oxide.Ext.Discord.Types;
using Oxide.Plugins;

internal sealed class MediaTypeHeaderCache : Singleton<MediaTypeHeaderCache>
{
	private readonly Hash<string, MediaTypeHeaderValue> _cache = new Hash<string, MediaTypeHeaderValue>();

	private const string JsonHeader = "application/json";

	private MediaTypeHeaderCache()
	{
		MediaTypeHeaderValue mediaTypeHeaderValue = MediaTypeHeaderValue.Parse("application/json");
		mediaTypeHeaderValue.CharSet = Singleton<DiscordEncoding>.Instance.Encoding.WebName;
		_cache["application/json"] = mediaTypeHeaderValue;
	}

	public MediaTypeHeaderValue Get(string value)
	{
		MediaTypeHeaderValue mediaTypeHeaderValue = _cache[value];
		if (mediaTypeHeaderValue == null)
		{
			mediaTypeHeaderValue = MediaTypeHeaderValue.Parse(value);
			_cache[value] = mediaTypeHeaderValue;
		}
		return mediaTypeHeaderValue;
	}
}
