using System;

internal ref struct ReverseStringTokenizer
{
	private ReadOnlySpan<char> _remaining;

	private readonly ReadOnlySpan<char> _token;

	public ReadOnlySpan<char> Current { get; private set; }

	public ReverseStringTokenizer(string str, string token)
	{
		_remaining = str;
		_token = token;
		Current = default(ReadOnlySpan<char>);
	}

	public bool MoveNext()
	{
		if (_remaining.Length == 0)
		{
			return false;
		}
		int num = _remaining.LastIndexOf(_token);
		if (num < 0)
		{
			Current = _remaining;
			_remaining = default(ReadOnlySpan<char>);
			return true;
		}
		int num2 = _remaining.Length - num;
		if (num2 <= 1)
		{
			_remaining = _remaining.Slice(0, num);
			return MoveNext();
		}
		Current = _remaining.Slice(num + 1, num2 - 1);
		_remaining = _remaining.Slice(0, Math.Min(num, _remaining.Length));
		return true;
	}
}
