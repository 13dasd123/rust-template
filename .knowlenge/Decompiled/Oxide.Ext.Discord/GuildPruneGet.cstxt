using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Builders;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;
using Oxide.Ext.Discord.Interfaces;

[JsonObject(MemberSerialization = MemberSerialization.OptIn)]
public class GuildPruneGet : IDiscordQueryString, IDiscordValidation
{
	[JsonProperty("days")]
	public int Days { get; set; } = 7;

	[JsonProperty("include_roles")]
	public List<Snowflake> IncludeRoles { get; set; }

	public virtual string ToQueryString()
	{
		Validate();
		QueryStringBuilder queryStringBuilder = default(QueryStringBuilder);
		queryStringBuilder.Add("days", Days.ToString());
		if (IncludeRoles != null)
		{
			queryStringBuilder.AddList("include_roles", IncludeRoles, ",");
		}
		return queryStringBuilder.ToString();
	}

	public void Validate()
	{
		InvalidGuildPruneException.ThrowIfInvalidDays(Days);
	}
}
