using System.Collections.Generic;
using Oxide.Ext.Discord.Builders;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Exceptions;

public class InteractionModalBuilder
{
	private readonly InteractionModalMessage _message;

	public InteractionModalBuilder(DiscordInteraction interaction)
		: this(interaction, new InteractionModalMessage())
	{
	}

	public InteractionModalBuilder(DiscordInteraction interaction, InteractionModalMessage message)
	{
		InteractionResponseBuilderException.ThrowIfInteractionIsAutoComplete(interaction.Type);
		InteractionResponseBuilderException.ThrowIfInteractionIsModalSubmit(interaction.Type);
		_message = message;
		InteractionModalMessage message2 = _message;
		if (message2.Components == null)
		{
			List<ActionRowComponent> list2 = (message2.Components = new List<ActionRowComponent>());
		}
	}

	public InteractionModalBuilder AddModalCustomId(string customId)
	{
		InvalidMessageComponentException.ThrowIfInvalidCustomId(customId);
		_message.CustomId = customId;
		return this;
	}

	public InteractionModalBuilder AddModalTitle(string title)
	{
		InvalidMessageComponentException.ThrowIfInvalidModalTitle(title);
		_message.Title = title;
		return this;
	}

	public InteractionModalBuilder AddInputText(string customId, string label, InputTextStyles style, string value = null, bool? required = null, string placeholder = null, int? minLength = null, int? maxLength = null)
	{
		InvalidMessageComponentException.ThrowIfInvalidCustomId(customId);
		InvalidMessageComponentException.ThrowIfInvalidTextInputLabel(label);
		InvalidMessageComponentException.ThrowIfInvalidTextInputValue(value);
		InvalidMessageComponentException.ThrowIfInvalidTextInputLength(minLength, maxLength);
		InvalidMessageComponentException.ThrowIfInvalidMaxActionRows(_message.Components.Count);
		_message.Components.Add(new ActionRowComponent
		{
			Components = { (BaseComponent)new InputTextComponent
			{
				CustomId = customId,
				Label = label,
				Style = style,
				Value = value,
				Required = required,
				Placeholder = placeholder,
				MinLength = minLength,
				MaxLength = maxLength
			} }
		});
		return this;
	}

	public InteractionModalMessage Build()
	{
		return _message;
	}
}
