using System;
using Newtonsoft.Json;
using Oxide.Ext.Discord.Cache;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Types;

public class PermissionFlagsStringConverter : JsonConverter
{
	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		if (value == null)
		{
			writer.WriteValue("0");
		}
		else
		{
			writer.WriteValue(Singleton<EnumCache<PermissionFlags>>.Instance.ToNumber((PermissionFlags)value));
		}
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		if (reader.TokenType == JsonToken.Null)
		{
			return PermissionFlags.None;
		}
		ulong num = ulong.Parse(reader.Value.ToString());
		return (PermissionFlags)num;
	}

	public override bool CanConvert(Type objectType)
	{
		return typeof(PermissionFlags) == objectType;
	}
}
