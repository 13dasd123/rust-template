using Oxide.Core.Plugins;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Libraries;
using Oxide.Ext.Discord.Plugins;

public static class GuildPlaceholders
{
	public static Snowflake Id(DiscordGuild guild)
	{
		return guild.Id;
	}

	public static string Name(DiscordGuild guild)
	{
		return guild.Name;
	}

	public static string Description(DiscordGuild guild)
	{
		return guild.Description;
	}

	public static string Icon(DiscordGuild guild)
	{
		return guild.IconUrl;
	}

	public static string Banner(DiscordGuild guild)
	{
		return guild.BannerUrl;
	}

	public static int MemberCount(DiscordGuild guild)
	{
		return guild.Members.Count;
	}

	internal static void RegisterPlaceholders()
	{
		RegisterPlaceholders(DiscordExtensionCore.Instance, DefaultKeys.Guild, new PlaceholderDataKey("DiscordGuild"));
	}

	public static void RegisterPlaceholders(Plugin plugin, GuildKeys keys, PlaceholderDataKey dataKey)
	{
		DiscordPlaceholders instance = BaseDiscordLibrary<DiscordPlaceholders>.Instance;
		instance.RegisterPlaceholder<DiscordGuild, Snowflake>(plugin, keys.Id, dataKey, Id);
		instance.RegisterPlaceholder<DiscordGuild, string>(plugin, keys.Name, dataKey, Name);
		instance.RegisterPlaceholder<DiscordGuild, string>(plugin, keys.Description, dataKey, Description);
		instance.RegisterPlaceholder<DiscordGuild, string>(plugin, keys.Icon, dataKey, Icon);
		instance.RegisterPlaceholder<DiscordGuild, string>(plugin, keys.Banner, dataKey, Banner);
		instance.RegisterPlaceholder<DiscordGuild, int>(plugin, keys.MemberCount, dataKey, MemberCount);
	}
}
