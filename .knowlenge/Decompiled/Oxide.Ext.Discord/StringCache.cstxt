using System.Collections.Generic;
using Oxide.Ext.Discord.Cache;
using Oxide.Ext.Discord.Types;

public sealed class StringCache<T> : Singleton<StringCache<T>>
{
	private readonly Dictionary<T, string> _cachedStrings = new Dictionary<T, string>();

	private readonly Dictionary<T, string> _loweredStrings = new Dictionary<T, string>();

	private StringCache()
	{
	}

	public string ToString(T value)
	{
		if (!_cachedStrings.TryGetValue(value, out var value2))
		{
			value2 = value.ToString();
			_cachedStrings[value] = value2;
		}
		return value2;
	}

	public string ToLower(T value)
	{
		if (!_loweredStrings.TryGetValue(value, out var value2))
		{
			value2 = value.ToString().ToLower();
			_loweredStrings[value] = value2;
		}
		return value2;
	}
}
