using System.Text.RegularExpressions;
using Oxide.Ext.Discord.Exceptions;

public class ApplicationRoleConnectionMetadataException : BaseDiscordException
{
	private static readonly Regex KeyRegex = new Regex("^\\w+$", RegexOptions.Compiled);

	private ApplicationRoleConnectionMetadataException(string message)
		: base(message)
	{
	}

	internal static void ThrowIfInvalidKeyException(string key)
	{
		if (string.IsNullOrEmpty(key))
		{
			throw new ApplicationRoleConnectionMetadataException("ApplicationRoleConnectionMetadata.Key cannot be null or empty");
		}
		if (key.Length > 50)
		{
			throw new ApplicationRoleConnectionMetadataException(string.Format("{0}.{1} cannot be more than {2} characters", "ApplicationRoleConnectionMetadata", "Key", 50));
		}
		if (!KeyRegex.IsMatch(key))
		{
			throw new ApplicationRoleConnectionMetadataException("ApplicationRoleConnectionMetadata.Key can only be the following characters a-z, 0-9, or _");
		}
	}

	internal static void ThrowIfInvalidNameException(string name)
	{
		if (string.IsNullOrEmpty(name))
		{
			throw new ApplicationRoleConnectionMetadataException("ApplicationRoleConnectionMetadata.Name cannot be null or empty");
		}
		if (name.Length > 100)
		{
			throw new ApplicationRoleConnectionMetadataException(string.Format("{0}.{1} cannot be more than {2} characters", "ApplicationRoleConnectionMetadata", "Name", 100));
		}
	}

	internal static void ThrowIfInvalidDescriptionException(string name)
	{
		if (string.IsNullOrEmpty(name))
		{
			throw new ApplicationRoleConnectionMetadataException("ApplicationRoleConnectionMetadata.Description cannot be null or empty");
		}
		if (name.Length > 200)
		{
			throw new ApplicationRoleConnectionMetadataException(string.Format("{0}.{1} cannot be more than {2} characters", "ApplicationRoleConnectionMetadata", "Description", 200));
		}
	}
}
