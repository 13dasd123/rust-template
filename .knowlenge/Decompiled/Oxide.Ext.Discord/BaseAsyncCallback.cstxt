using System;
using System.Threading.Tasks;
using Oxide.Ext.Discord;
using Oxide.Ext.Discord.Extensions;
using Oxide.Ext.Discord.Logging;
using Oxide.Ext.Discord.Types;

public abstract class BaseAsyncCallback : BasePoolable
{
	private readonly Func<ValueTask> _callback;

	protected BaseAsyncCallback()
	{
		_callback = CallbackInternal;
	}

	protected abstract ValueTask HandleCallback();

	protected abstract string GetExceptionMessage();

	protected void Run()
	{
		Task.Run(_callback);
	}

	private async ValueTask CallbackInternal()
	{
		try
		{
			await HandleCallback().ConfigureAwait(continueOnCapturedContext: false);
		}
		catch (Exception ex)
		{
			Exception ex2 = ex;
			DiscordExtension.GlobalLogger.Exception("{0}.CallbackInternal had exception. Callback Data: {1}", GetType().GetRealTypeName(), GetExceptionMessage(), ex2);
		}
		finally
		{
			Dispose();
		}
	}
}
