using System;
using Oxide.Ext.Discord.Extensions;
using Oxide.Ext.Discord.Types;

public abstract class BasePoolable : IDisposable
{
	private bool _shouldPool;

	internal bool Disposed;

	private IPool<BasePoolable> _pool;

	internal DiscordPluginPool PluginPool { get; private set; }

	internal void OnInit(DiscordPluginPool pluginPool, IPool<BasePoolable> pool)
	{
		PluginPool = pluginPool;
		_pool = pool;
	}

	internal void EnterPoolInternal()
	{
		EnterPool();
		_shouldPool = false;
		Disposed = true;
	}

	internal void LeavePoolInternal()
	{
		_shouldPool = true;
		Disposed = false;
		LeavePool();
	}

	protected virtual void EnterPool()
	{
	}

	protected virtual void LeavePool()
	{
	}

	public void Dispose()
	{
		if (_shouldPool)
		{
			if (Disposed)
			{
				throw new ObjectDisposedException(GetType().GetRealTypeName());
			}
			_pool.Free(this);
		}
	}
}
