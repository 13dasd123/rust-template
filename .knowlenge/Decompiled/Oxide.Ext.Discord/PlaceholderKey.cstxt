using System;
using Oxide.Ext.Discord.Interfaces;
using Oxide.Ext.Discord.Libraries;

public readonly struct PlaceholderKey : IComparable<PlaceholderKey>, IEquatable<PlaceholderKey>, IDiscordKey
{
	public readonly string Placeholder;

	public bool IsValid => !string.IsNullOrEmpty(Placeholder);

	public PlaceholderKey(string placeholder)
	{
		Placeholder = placeholder;
	}

	public PlaceholderKey(string prefix, string key, string format = null)
	{
		Placeholder = (string.IsNullOrEmpty(format) ? (prefix.ToLower() + "." + key) : (prefix.ToLower() + "." + key + ":" + format));
	}

	public string WithFormat(string format)
	{
		return "{" + Placeholder + ":" + format + "}";
	}

	public override string ToString()
	{
		return "{" + Placeholder + "}";
	}

	public int CompareTo(PlaceholderKey other)
	{
		return string.Compare(Placeholder, other.Placeholder, StringComparison.OrdinalIgnoreCase);
	}

	public static implicit operator string(PlaceholderKey key)
	{
		return key.ToString();
	}

	public bool Equals(PlaceholderKey other)
	{
		return Placeholder == other.Placeholder;
	}

	public override bool Equals(object obj)
	{
		return obj is PlaceholderKey other && Equals(other);
	}

	public override int GetHashCode()
	{
		return (Placeholder != null) ? Placeholder.GetHashCode() : 0;
	}
}
