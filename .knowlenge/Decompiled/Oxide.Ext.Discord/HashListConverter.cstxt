using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Interfaces;
using Oxide.Plugins;

public class HashListConverter<TValue> : JsonConverter where TValue : class, ISnowflakeEntity
{
	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		Hash<Snowflake, TValue> hash = new Hash<Snowflake, TValue>();
		foreach (JToken item in JArray.Load(reader))
		{
			TValue val = item.ToObject<TValue>();
			hash[val.Id] = val;
		}
		return hash;
	}

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		Hash<Snowflake, TValue> hash = (Hash<Snowflake, TValue>)value;
		writer.WriteStartArray();
		foreach (TValue value2 in hash.Values)
		{
			serializer.Serialize(writer, value2);
		}
		writer.WriteEndArray();
	}

	public override bool CanConvert(Type objectType)
	{
		return objectType == typeof(List<TValue>) || objectType == typeof(Hash<Snowflake, TValue>);
	}
}
