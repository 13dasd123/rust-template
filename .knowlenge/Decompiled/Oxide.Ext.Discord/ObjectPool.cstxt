using Oxide.Ext.Discord.Types;

internal class ObjectPool<T> : BasePool<BasePoolable, ObjectPool<T>> where T : BasePoolable, new()
{
	protected override PoolSize GetPoolSize(PoolSettings settings)
	{
		return settings.ObjectPoolSize;
	}

	protected override BasePoolable CreateNew()
	{
		T val = new T();
		val.OnInit(PluginPool, this);
		return val;
	}

	protected override void OnGetItem(BasePoolable item)
	{
		item.LeavePoolInternal();
	}

	protected override bool OnFreeItem(ref BasePoolable item)
	{
		if (item.Disposed)
		{
			return false;
		}
		item.EnterPoolInternal();
		return true;
	}
}
