using System;
using Oxide.Core.Plugins;
using Oxide.Ext.Discord.Extensions;
using Oxide.Ext.Discord.Interfaces;
using Oxide.Ext.Discord.Logging;
using Oxide.Ext.Discord.Plugins;

public readonly struct PluginId : IDebugLoggable, IEquatable<PluginId>
{
	public readonly int Id;

	public bool IsValid => Id != 0;

	internal bool IsExtensionPlugin => IsValid && this == DiscordExtensionCore.Instance.PluginId;

	internal PluginId(Plugin plugin)
	{
		if (plugin == null)
		{
			throw new ArgumentNullException("plugin");
		}
		Id = plugin.Name.GetHashCode();
	}

	internal PluginId(string id)
	{
		if (id == null)
		{
			throw new ArgumentNullException("id");
		}
		Id = id.GetHashCode();
	}

	public override string ToString()
	{
		return this.PluginName();
	}

	public void LogDebug(DebugLogger logger)
	{
		logger.AppendField("ID", Id);
		logger.AppendField("Name", this.PluginName());
	}

	public bool Equals(PluginId other)
	{
		return Id == other.Id;
	}

	public override bool Equals(object obj)
	{
		return obj is PluginId other && Equals(other);
	}

	public override int GetHashCode()
	{
		return Id;
	}

	public static bool operator !=(PluginId left, PluginId right)
	{
		return !(left == right);
	}

	public static bool operator ==(PluginId left, PluginId right)
	{
		return left.Equals(right);
	}
}
