using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Oxide.Ext.Discord.Clients;
using Oxide.Ext.Discord.Entities;
using Oxide.Ext.Discord.Json;
using Oxide.Ext.Discord.Types;
using Oxide.Ext.Discord.WebSockets;

[JsonConverter(typeof(EventPayloadConverter))]
public class EventPayload : BasePoolable
{
	public GatewayEventCode OpCode { get; internal set; }

	public DiscordDispatchCode DispatchCode { get; internal set; }

	public object Data { get; private set; }

	public int? Sequence { get; internal set; }

	public bool ShouldResume { get; internal set; }

	internal JToken JsonData { get; set; }

	public T GetData<T>(BotClient client)
	{
		return JsonData.ToObject<T>(client.JsonSerializer);
	}

	protected override void EnterPool()
	{
		OpCode = GatewayEventCode.Dispatch;
		DispatchCode = DiscordDispatchCode.Unknown;
		Data = null;
		Sequence = null;
	}
}
