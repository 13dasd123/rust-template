using System;
using System.Diagnostics;
using Facepunch;
using UnityEngine;

public class TimeWarning : IDisposable
{
	public static bool Enabled;

	public static bool EnableScopeCalls;

	public static Action<string> OnBegin;

	public static Action OnEnd;

	private Stopwatch stopwatch = new Stopwatch();

	private string warningName;

	private double warningMS;

	private int gcCount;

	private bool disposed;

	public static void BeginSample(string name)
	{
		if (OnBegin != null)
		{
			OnBegin(name);
		}
	}

	public static void EndSample()
	{
		if (OnEnd != null)
		{
			OnEnd();
		}
	}

	public static TimeWarning New(string name, float maxSeconds = 0.1f)
	{
		if (!Enabled && !EnableScopeCalls)
		{
			return null;
		}
		TimeWarning timeWarning = Pool.Get<TimeWarning>();
		timeWarning.Start(name, maxSeconds);
		return timeWarning;
	}

	public static TimeWarning New(string name, long maxMilliseconds)
	{
		if (!Enabled && !EnableScopeCalls)
		{
			return null;
		}
		TimeWarning timeWarning = Pool.Get<TimeWarning>();
		timeWarning.Start(name, maxMilliseconds);
		return timeWarning;
	}

	private void Start(string name, float maxSeconds = 0.1f)
	{
		if (Enabled)
		{
			warningName = name;
			warningMS = maxSeconds * 1000f;
			stopwatch.Reset();
			stopwatch.Start();
			gcCount = GC.CollectionCount(0);
		}
		disposed = false;
		if (OnBegin != null)
		{
			OnBegin(name);
		}
	}

	private void Start(string name, long maxMilliseconds)
	{
		if (Enabled)
		{
			warningName = name;
			warningMS = maxMilliseconds;
			stopwatch.Reset();
			stopwatch.Start();
			gcCount = GC.CollectionCount(0);
		}
		disposed = false;
		if (OnBegin != null)
		{
			OnBegin(name);
		}
	}

	void IDisposable.Dispose()
	{
		if (!disposed)
		{
			disposed = true;
			if (OnEnd != null)
			{
				OnEnd();
			}
			if (Enabled && stopwatch.Elapsed.TotalMilliseconds > warningMS)
			{
				bool flag = gcCount != GC.CollectionCount(0);
				UnityEngine.Debug.LogWarningFormat("TimeWarning: {0} took {1:0.00} seconds ({2:0} ms){3}", warningName, stopwatch.Elapsed.TotalSeconds, stopwatch.Elapsed.TotalMilliseconds, flag ? " [GARBAGE COLLECT]" : "");
			}
			TimeWarning obj = this;
			Pool.Free(ref obj);
		}
	}
}
