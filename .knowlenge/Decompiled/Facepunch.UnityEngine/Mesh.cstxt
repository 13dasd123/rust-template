using System.IO;
using System.Text;
using UnityEngine;

public static class Mesh
{
	public static void Export(this Mesh mesh, string filename)
	{
		//IL_001a: Unknown result type (might be due to invalid IL or missing references)
		//IL_001f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0026: Unknown result type (might be due to invalid IL or missing references)
		//IL_0031: Unknown result type (might be due to invalid IL or missing references)
		//IL_003c: Unknown result type (might be due to invalid IL or missing references)
		//IL_006b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0070: Unknown result type (might be due to invalid IL or missing references)
		//IL_0078: Unknown result type (might be due to invalid IL or missing references)
		//IL_0084: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b8: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00cc: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d8: Unknown result type (might be due to invalid IL or missing references)
		StringBuilder stringBuilder = new StringBuilder();
		_ = mesh.vertices;
		Vector3[] vertices = mesh.vertices;
		foreach (Vector3 val in vertices)
		{
			stringBuilder.AppendLine($"v {val.x} {val.y} {val.z}");
		}
		Vector2[] uv = mesh.uv;
		foreach (Vector2 val2 in uv)
		{
			stringBuilder.AppendLine($"vt {val2.x} {val2.y}");
		}
		vertices = mesh.normals;
		foreach (Vector3 val3 in vertices)
		{
			stringBuilder.AppendLine($"vn {val3.x} {val3.y} {val3.z}");
		}
		for (int j = 0; j < mesh.subMeshCount; j++)
		{
			int[] indices = mesh.GetIndices(j);
			for (int k = 0; k < indices.Length; k += 3)
			{
				stringBuilder.AppendLine($"f {indices[k] + 1}/{indices[k] + 1}/{indices[k] + 1} {indices[k + 1] + 1}/{indices[k + 1] + 1}/{indices[k + 1] + 1} {indices[k + 2] + 1}/{indices[k + 2] + 1}/{indices[k + 2] + 1}");
			}
		}
		if (File.Exists(filename))
		{
			File.Delete(filename);
		}
		File.WriteAllText(filename, stringBuilder.ToString());
	}
}
