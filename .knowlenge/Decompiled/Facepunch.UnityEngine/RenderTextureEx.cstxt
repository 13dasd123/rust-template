using System;
using UnityEngine;

public static class RenderTextureEx
{
	private static Material _alphaBlending;

	public static Material AlphaBlending
	{
		get
		{
			//IL_0016: Unknown result type (might be due to invalid IL or missing references)
			//IL_0020: Expected O, but got Unknown
			if (!Object.op_Implicit((Object)(object)_alphaBlending))
			{
				_alphaBlending = new Material(Shader.Find("Hidden/BlitAlphaBlend"));
			}
			return _alphaBlending;
		}
	}

	public static void Blit(this RenderTexture t, Texture tex)
	{
		Graphics.Blit(tex, t);
	}

	public static void BlitWithAlphaBlending(this RenderTexture t, Texture tex)
	{
		Graphics.Blit(tex, t, AlphaBlending, 0);
	}

	public static void ToTexture(this RenderTexture t, Texture texture)
	{
		//IL_0056: Unknown result type (might be due to invalid IL or missing references)
		if (texture.width != ((Texture)t).width)
		{
			throw new Exception("width should match!");
		}
		if (texture.height != ((Texture)t).height)
		{
			throw new Exception("height should match!");
		}
		Graphics.SetRenderTarget(t);
		((Texture2D)((texture is Texture2D) ? texture : null)).ReadPixels(new Rect(0f, 0f, (float)texture.width, (float)texture.height), 0, 0);
		Graphics.SetRenderTarget((RenderTexture)null);
	}
}
