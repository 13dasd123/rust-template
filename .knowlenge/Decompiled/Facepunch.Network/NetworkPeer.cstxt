using System.IO;
using Facepunch;
using Network;

public abstract class NetworkPeer
{
	public enum StatTypeLong
	{
		BytesSent,
		BytesSent_LastSecond,
		BytesReceived,
		BytesReceived_LastSecond,
		MessagesInSendBuffer,
		BytesInSendBuffer,
		MessagesInResendBuffer,
		BytesInResendBuffer,
		PacketLossAverage,
		PacketLossLastSecond,
		ThrottleBytes
	}

	public Write write;

	public INetworkCryptocraphy cryptography;

	public NetRead read { get; } = new NetRead();

	protected Message StartMessage(Message.Type type, Connection connection)
	{
		Message message = Pool.Get<Message>();
		message.peer = this;
		message.type = type;
		message.connection = connection;
		return message;
	}

	public void Decrypt(Connection connection, NetRead read)
	{
		if (read.Length > 1 && cryptography != null && cryptography.IsEnabledIncoming(connection))
		{
			MemoryStream streamForDecryption = read.GetStreamForDecryption();
			cryptography.Decrypt(connection, streamForDecryption, 1);
			read.SetLength(streamForDecryption.Length);
		}
	}

	public abstract string GetDebug(Connection connection);

	public abstract ulong GetStat(Connection connection, StatTypeLong type);
}
