using Rust.UI;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

public class RustWrapper : RustControl
{
	public RustText Text;

	public RectTransform Canvas;

	protected override void ApplyStyle(StyleColorSet s)
	{
		//IL_001c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0037: Unknown result type (might be due to invalid IL or missing references)
		base.ApplyStyle(s);
		if ((Object)(object)Text != (Object)null)
		{
			((Graphic)Text).color = s.Fg;
		}
		Image component = ((Component)this).GetComponent<Image>();
		if (Object.op_Implicit((Object)(object)component))
		{
			((Graphic)component).color = s.Bg;
		}
	}

	public void Add(UIBehaviour ui)
	{
		((Component)ui).transform.SetParent(((Component)Canvas).transform, false);
		if (ui is RustControl rustControl)
		{
			rustControl.FormField = this;
		}
	}

	public void AddFlex()
	{
		Add((UIBehaviour)(object)Make.Flex());
	}
}
