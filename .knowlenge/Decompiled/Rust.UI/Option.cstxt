using System;
using Rust.UI;

[Serializable]
public struct Option
{
	public Icons Icon;

	public string Value;

	public Phrase Label;

	public bool Default;

	public Option(string token, string english, string value = null, bool isdefault = false, Icons icon = Icons.None)
	{
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0015: Expected O, but got Unknown
		Icon = icon;
		Label = new Phrase(token, english);
		Value = value ?? token ?? english;
		Default = isdefault;
	}

	public Option(Phrase phrase, string value, bool isdefault = false, Icons icon = Icons.None)
	{
		Icon = icon;
		Label = phrase;
		Value = value;
		Default = isdefault;
	}

	public Option(Icons icon, string value = null, bool isdefault = false)
	{
		//IL_0012: Unknown result type (might be due to invalid IL or missing references)
		//IL_001c: Expected O, but got Unknown
		Icon = icon;
		Label = new Phrase("", "");
		Value = value;
		Default = isdefault;
	}
}
