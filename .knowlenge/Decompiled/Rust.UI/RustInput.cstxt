using System;
using Rust.UI;
using TMPro;
using UnityEngine;
using UnityEngine.Events;
using UnityEngine.EventSystems;
using UnityEngine.UI;

public class RustInput : RustControl
{
	[Serializable]
	public class ChangedEvent : UnityEvent<string>
	{
	}

	public TMP_InputField InputField;

	public Image Background;

	public ChangedEvent OnValueChanged;

	public ChangedEvent OnEndEdit;

	public ChangedEvent OnSubmit;

	public RustText Placeholder => InputField.placeholder as RustText;

	public bool IsFocused => InputField.isFocused;

	public string Value => Text;

	public string Text
	{
		get
		{
			return InputField.text;
		}
		set
		{
			InputField.text = value;
		}
	}

	public override StyleColorSet CurrentStyleCollection
	{
		get
		{
			StyleColorSet currentStyleCollection = base.CurrentStyleCollection;
			if (IsFocused)
			{
				currentStyleCollection.Apply(Styles.Pressed);
			}
			if (IsDisabled)
			{
				currentStyleCollection.Apply(Styles.Disabled);
			}
			return currentStyleCollection;
		}
	}

	protected override void Awake()
	{
		((UnityEvent<string>)(object)InputField.onValueChanged).AddListener((UnityAction<string>)delegate(string x)
		{
			((UnityEvent<string>)OnValueChanged).Invoke(x);
		});
		((UnityEvent<string>)(object)InputField.onEndEdit).AddListener((UnityAction<string>)delegate(string x)
		{
			((UnityEvent<string>)OnEndEdit).Invoke(x);
		});
		((UnityEvent<string>)(object)InputField.onSubmit).AddListener((UnityAction<string>)delegate(string x)
		{
			((UnityEvent<string>)OnSubmit).Invoke(x);
		});
		((UnityEvent<string>)(object)InputField.onSelect).AddListener((UnityAction<string>)delegate
		{
			ApplyStyles();
		});
		((UnityEvent<string>)(object)InputField.onDeselect).AddListener((UnityAction<string>)delegate
		{
			ApplyStyles();
		});
		((UIBehaviour)this).Awake();
	}

	protected override void ApplyStyle(StyleColorSet s)
	{
		//IL_001b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0043: Unknown result type (might be due to invalid IL or missing references)
		//IL_0070: Unknown result type (might be due to invalid IL or missing references)
		base.ApplyStyle(s);
		if (Object.op_Implicit((Object)(object)Background))
		{
			((Graphic)Background).color = s.Bg;
		}
		if (Object.op_Implicit((Object)(object)InputField.textComponent))
		{
			((Graphic)InputField.textComponent).color = s.Fg;
		}
		if (Object.op_Implicit((Object)(object)InputField.placeholder))
		{
			((Graphic)(InputField.placeholder as RustText)).color = s.Icon;
		}
	}
}
