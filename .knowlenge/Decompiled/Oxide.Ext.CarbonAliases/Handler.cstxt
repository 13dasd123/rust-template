using System;
using Oxide.Game.Rust.Cui;

public class Handler
{
	public enum FontTypes
	{
		Arial,
		RobotoCondensedBold,
		RobotoCondensedRegular,
		PermanentMarker,
		DroidSansMono
	}

	public class UpdatePool : CuiElementContainer, IDisposable
	{
		internal bool _hasDisposed;

		public void Add(Pair<string, CuiElement> pair)
		{
			if (pair.Element != null && pair.Element.Update)
			{
				Add(pair.Element);
			}
		}

		public void Add(Pair<string, CuiElement, CuiElement> pair)
		{
			if (pair.Element1 != null)
			{
				if (!pair.Element1.Update)
				{
					return;
				}
				Add(pair.Element1);
			}
			if (pair.Element2 != null && pair.Element2.Update)
			{
				Add(pair.Element2);
			}
		}

		public void Send(BasePlayer player)
		{
			CuiHelper.AddUi(player, this);
			Dispose();
		}

		public void Dispose()
		{
			if (!_hasDisposed)
			{
				Clear();
				_hasDisposed = true;
			}
		}
	}

	internal string Identifier { get; set; }

	internal int _currentId { get; set; }

	public Handler()
	{
		Identifier = "PleaseSwitchToCarbon";
	}

	internal string AppendId()
	{
		_currentId++;
		return $"{Identifier}_{_currentId}";
	}

	public void Send(CuiElementContainer container, BasePlayer player)
	{
		CuiHelper.AddUi(player, container);
	}

	public void SendUpdate(Pair<string, CuiElement> pair, BasePlayer player)
	{
		CuiElementContainer elements = new CuiElementContainer { pair.Element };
		CuiHelper.AddUi(player, elements);
	}

	public void Destroy(string name, BasePlayer player)
	{
		CuiHelper.DestroyUi(player, name);
	}
}
