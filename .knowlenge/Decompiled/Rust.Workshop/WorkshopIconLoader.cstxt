using System.Collections;
using System.Collections.Generic;
using System.IO;
using Facepunch.Steamworks;
using Rust;
using UnityEngine;

public class WorkshopIconLoader : MonoBehaviour
{
	private static Dictionary<ulong, Sprite> Cache = new Dictionary<ulong, Sprite>();

	public static Sprite Find(ulong workshopId)
	{
		Sprite value = null;
		if (Cache.TryGetValue(workshopId, out value))
		{
			return value;
		}
		Texture2D texture2D = new Texture2D(512, 512, TextureFormat.ARGB32, mipmap: true, linear: false);
		texture2D.name = workshopId.ToString();
		value = Sprite.Create(texture2D, new Rect(0f, 0f, 512f, 512f), Vector3.zero);
		Cache.Remove(workshopId);
		Cache.Add(workshopId, value);
		Global.Runner.StartCoroutine(Load(texture2D, workshopId));
		return value;
	}

	internal static IEnumerator Load(Texture2D texture, ulong workshopId)
	{
		Workshop.Item SourceItem = Global.SteamClient.Workshop.GetItem(workshopId);
		if (!SourceItem.Installed)
		{
			SourceItem.Download();
		}
		while (!SourceItem.Installed)
		{
			yield return null;
		}
		string path = SourceItem.Directory.FullName + "/icon.png";
		if (File.Exists(path))
		{
			texture.name = path;
			byte[] data = File.ReadAllBytes(path);
			texture.LoadImage(data);
		}
	}
}
