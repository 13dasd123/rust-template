using System.Linq;
using Facepunch.Steamworks;
using Rust.UI;
using Rust.Workshop;
using UnityEngine;
using UnityEngine.UI;

internal class WorkshopItemButton : MonoBehaviour
{
	public Text Name;

	public Text Description;

	public HttpImage Icon;

	public GameObject OldIndicator;

	public GameObject Incompatible;

	public GameObject ItemDownloaded;

	public GameObject ItemDownloadPending;

	public GameObject ItemDownloading;

	private Workshop.Item Item;

	protected WorkshopInterface Interface => GetComponentInParent<WorkshopInterface>();

	internal void Init(Workshop.Item item)
	{
		Item = item;
		if ((bool)Name)
		{
			Name.text = Item.Title;
		}
		if ((bool)Description)
		{
			Description.text = Item.Description;
		}
		if (OldIndicator != null)
		{
			OldIndicator.SetActive(item.Tags.Contains("version2"));
		}
		if (Incompatible != null)
		{
			bool active = !item.Tags.Contains("version3") && !item.Tags.Contains("version2");
			Incompatible.SetActive(active);
		}
		if (Icon != null)
		{
			Icon.Load(item.PreviewImageUrl);
		}
		Update();
	}

	public void Update()
	{
		if (Item != null)
		{
			if ((bool)ItemDownloaded)
			{
				ItemDownloaded.SetActive(Item.Installed);
			}
			if ((bool)ItemDownloadPending)
			{
				ItemDownloadPending.SetActive(Item.Downloading);
			}
			if ((bool)ItemDownloading)
			{
				ItemDownloading.SetActive(Item.Downloading);
			}
		}
	}

	public void OpenWebpage()
	{
		Application.OpenURL(Item.Url);
	}

	public void StartEditing()
	{
		Interface.StartEditing(Item);
	}

	public void StartViewing()
	{
		Interface.StartViewing(Item);
	}
}
