using Facepunch.Extend;
using Facepunch.Steamworks;
using Rust.Workshop;
using UnityEngine;
using UnityEngine.UI;

public class WorkshopView : MonoBehaviour
{
	public Text Title;

	public Text AuthorName;

	public Text VoteInfo;

	public Button VoteUp;

	public Button VoteDown;

	private Workshop.Item item;

	protected WorkshopInterface Interface => GetComponentInParent<WorkshopInterface>();

	protected WorkshopItemEditor Editor => Interface.Editor;

	public void Update()
	{
		if (item != null && string.IsNullOrEmpty(AuthorName.text))
		{
			AuthorName.text = item.OwnerName.Truncate(32).ToUpper();
		}
	}

	public void UpdateFrom(Workshop.Item item)
	{
		this.item = item;
		Title.text = item.Title.Truncate(24).ToUpper();
		AuthorName.text = item.OwnerName.Truncate(32).ToUpper();
	}

	public void OnVoteUp()
	{
		if (item != null)
		{
			item.VoteUp();
			UpdateFrom(item);
		}
	}

	public void OnVoteDown()
	{
		if (item != null)
		{
			item.VoteDown();
			UpdateFrom(item);
		}
	}

	public void OpenWeb()
	{
		if (item != null)
		{
			Application.OpenURL(item.Url);
		}
	}

	internal void Clear()
	{
		item = null;
		Title.text = string.Empty;
		AuthorName.text = string.Empty;
	}
}
