using Facepunch.Extend;
using Rust.Workshop;
using Steamworks.Ugc;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

public class WorkshopView : MonoBehaviour
{
	public TextMeshProUGUI Title;

	public TextMeshProUGUI AuthorName;

	public TextMeshProUGUI VoteInfo;

	public Button VoteUp;

	public Button VoteDown;

	private Item? item;

	protected WorkshopInterface Interface => GetComponentInParent<WorkshopInterface>();

	protected WorkshopItemEditor Editor => Interface.Editor;

	public void Update()
	{
		if (item.HasValue && string.IsNullOrEmpty(AuthorName.text))
		{
			AuthorName.text = item.Value.Owner.Name.Truncate(32).ToUpper();
		}
	}

	public void UpdateFrom(Item item)
	{
		this.item = item;
		Title.text = item.Title.Truncate(24).ToUpper();
		AuthorName.text = item.Owner.Name.Truncate(32).ToUpper();
	}

	public void OnVoteUp()
	{
		if (item.HasValue)
		{
			item?.Vote(up: true);
			UpdateFrom(item.Value);
		}
	}

	public void OnVoteDown()
	{
		if (item.HasValue)
		{
			item?.Vote(up: false);
			UpdateFrom(item.Value);
		}
	}

	public void OpenWeb()
	{
		if (item.HasValue)
		{
			Application.OpenURL(item?.Url);
		}
	}

	internal void Clear()
	{
		item = null;
		Title.text = "";
		AuthorName.text = "";
	}
}
