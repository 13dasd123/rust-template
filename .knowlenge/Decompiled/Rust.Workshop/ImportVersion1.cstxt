using System;
using System.Collections;
using Facepunch.Extend;
using Facepunch.Steamworks;
using Facepunch.Utility;
using Rust.Workshop;
using Rust.Workshop.Import;
using UnityEngine;

internal class ImportVersion1 : SingletonComponent<ImportVersion1>
{
	protected WorkshopInterface Interface => GetComponentInParent<WorkshopInterface>();

	internal void DoImport(Workshop.Item item, Skin skin, Action onImportFinished)
	{
		StartCoroutine(RunImport(item, skin, onImportFinished));
	}

	private IEnumerator RunImport(Workshop.Item item, Skin skin, Action onImportFinished)
	{
		Interface.LoadingBar.Active = true;
		Interface.LoadingBar.Text = "Downloading..";
		Interface.LoadingBar.SubText = "";
		Interface.LoadingBar.Progress = 0f;
		if (!item.Installed)
		{
			item.Download();
			while (item.Downloading)
			{
				Interface.LoadingBar.Progress = (float)item.DownloadProgress;
				Interface.LoadingBar.SubText = $"{item.BytesDownloaded.FormatBytes()} / {item.BytesTotalDownload.FormatBytes()}";
				yield return null;
			}
			Interface.LoadingBar.SubText = "";
			Interface.LoadingBar.Text = "Installing..";
			while (!item.Installed)
			{
				Interface.LoadingBar.Text = "Installing";
				yield return null;
			}
		}
		Os.OpenFolder(item.Directory.FullName);
		Interface.LoadingBar.Text = "Unable To Import";
		Interface.LoadingBar.SubText = "Sorry, you need to convert and import this item manually.";
		yield return new WaitForSeconds(5f);
		Interface.LoadingBar.Active = false;
		onImportFinished();
	}
}
