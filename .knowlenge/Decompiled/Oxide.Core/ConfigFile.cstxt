using System;
using System.IO;
using Newtonsoft.Json;
using Oxide.Core.Configuration;

public abstract class ConfigFile
{
	[JsonIgnore]
	public string Filename { get; private set; }

	protected ConfigFile(string filename)
	{
		Filename = filename;
	}

	public static T Load<T>(string filename) where T : ConfigFile
	{
		T obj = (T)Activator.CreateInstance(typeof(T), filename);
		obj.Load();
		return obj;
	}

	public virtual void Load(string filename = null)
	{
		JsonConvert.PopulateObject(File.ReadAllText(filename ?? Filename), this);
	}

	public virtual void Save(string filename = null)
	{
		string contents = JsonConvert.SerializeObject(this, Formatting.Indented);
		File.WriteAllText(filename ?? Filename, contents);
	}
}
