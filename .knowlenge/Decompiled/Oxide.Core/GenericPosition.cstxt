using Oxide.Core.Libraries.Covalence;

public class GenericPosition
{
	public readonly float X;

	public readonly float Y;

	public readonly float Z;

	public GenericPosition()
	{
	}

	public GenericPosition(float x, float y, float z)
	{
		X = x;
		Y = y;
		Z = z;
	}

	public override bool Equals(object obj)
	{
		if (!(obj is GenericPosition))
		{
			return false;
		}
		GenericPosition genericPosition = (GenericPosition)obj;
		if (X.Equals(genericPosition.X) && Y.Equals(genericPosition.Y))
		{
			return Z.Equals(genericPosition.Z);
		}
		return false;
	}

	public override int GetHashCode()
	{
		return X.GetHashCode() ^ (Y.GetHashCode() << 2) ^ (Z.GetHashCode() >> 2);
	}

	public override string ToString()
	{
		return $"({X}, {Y}, {Z})";
	}
}
