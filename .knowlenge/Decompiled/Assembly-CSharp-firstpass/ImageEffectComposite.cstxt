using System;
using System.Collections.Generic;
using UnityEngine;

public class ImageEffectComposite : MonoBehaviour
{
	public RenderTextureFormat format;

	public RenderTextureReadWrite readWrite = RenderTextureReadWrite.sRGB;

	private List<ImageEffectLayer> layers = new List<ImageEffectLayer>(32);

	private Comparison<ImageEffectLayer> layerSort = (ImageEffectLayer x, ImageEffectLayer y) => x.SortOrder.CompareTo(y.SortOrder);

	private List<IImageEffect> effects = new List<IImageEffect>(32);

	private bool sorted;

	public void Add(ImageEffectLayer effect)
	{
		layers.Add(effect);
		sorted = false;
	}

	public void Remove(ImageEffectLayer effect)
	{
		layers.Remove(effect);
	}

	[ImageEffectTransformsToLDR]
	private void OnRenderImage(RenderTexture src, RenderTexture dst)
	{
		if (!sorted)
		{
			layers.Sort(layerSort);
			sorted = true;
		}
		effects.Clear();
		foreach (ImageEffectLayer layer in layers)
		{
			if (!layer.layerEnabled)
			{
				continue;
			}
			IImageEffect[] array = layer.Effects;
			foreach (IImageEffect imageEffect in array)
			{
				if (imageEffect.IsActive())
				{
					effects.Add(imageEffect);
				}
			}
		}
		if (effects.Count > 0)
		{
			int width = ((!(dst == null)) ? dst.width : src.width);
			int height = ((!(dst == null)) ? dst.height : src.height);
			if (effects.Count == 1)
			{
				effects[0].OnRenderImage(src, dst);
				return;
			}
			RenderTexture renderTexture = RenderTexture.GetTemporary(src.width, src.height, 0, format, readWrite);
			RenderTexture renderTexture2 = RenderTexture.GetTemporary(width, height, 0, format, readWrite);
			for (int j = 0; j < effects.Count; j++)
			{
				IImageEffect imageEffect2 = effects[j];
				if (j == 0)
				{
					imageEffect2.OnRenderImage(src, renderTexture2);
				}
				else if (j == effects.Count - 1)
				{
					imageEffect2.OnRenderImage(renderTexture, dst);
				}
				else
				{
					imageEffect2.OnRenderImage(renderTexture, renderTexture2);
				}
				RenderTexture renderTexture3 = renderTexture;
				renderTexture = renderTexture2;
				renderTexture2 = renderTexture3;
			}
			RenderTexture.ReleaseTemporary(renderTexture);
			RenderTexture.ReleaseTemporary(renderTexture2);
		}
		else
		{
			Graphics.Blit(src, dst);
		}
	}
}
