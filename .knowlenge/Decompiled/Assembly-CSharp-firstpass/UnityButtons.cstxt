using System;
using Facepunch;
using UnityEngine;

public static class UnityButtons
{
	private static bool isRegistered;

	public static void Register()
	{
		//IL_0038: Unknown result type (might be due to invalid IL or missing references)
		//IL_003d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0044: Unknown result type (might be due to invalid IL or missing references)
		//IL_0047: Unknown result type (might be due to invalid IL or missing references)
		//IL_004d: Invalid comparison between Unknown and I4
		//IL_005e: Unknown result type (might be due to invalid IL or missing references)
		//IL_005f: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b2: Unknown result type (might be due to invalid IL or missing references)
		if (isRegistered)
		{
			Debug.LogError((object)"UnityButtons.Register called twice!");
			return;
		}
		isRegistered = true;
		foreach (KeyCode value in Enum.GetValues(typeof(KeyCode)))
		{
			KeyCode val = value;
			if ((int)val == 0 || (int)val >= 330)
			{
				continue;
			}
			string text = ((object)(KeyCode)(ref val)/*cast due to .constrained prefix*/).ToString();
			KeyCode localKey = val;
			bool isFKey = text.Length == 2 && text.StartsWith("F");
			bool isMouseButton = text.StartsWith("mouse", StringComparison.CurrentCultureIgnoreCase);
			if (text.StartsWith("Alpha"))
			{
				text = text.Replace("Alpha", "");
			}
			Input.AddButton(text, val, (Func<bool>)delegate
			{
				//IL_0001: Unknown result type (might be due to invalid IL or missing references)
				//IL_0027: Unknown result type (might be due to invalid IL or missing references)
				if (!Input.GetKey(localKey))
				{
					return false;
				}
				if (!isMouseButton && !isFKey && !KeyBinding.IsOpen && (NeedsKeyboard.AnyActive(localKey) || HudMenuInput.AnyActive()))
				{
					return false;
				}
				return (!isMouseButton || !NeedsMouseButtons.AnyActive()) ? true : false;
			}, (Action)null, false);
		}
		float wheelValue = 0f;
		float lastWheelValue = 0f;
		Input.AddButton("MouseWheelUp", (KeyCode)0, (Func<bool>)delegate
		{
			if (lastWheelValue > 0f)
			{
				wheelValue = 0f;
			}
			lastWheelValue = wheelValue;
			wheelValue = 0f;
			return lastWheelValue > 0f;
		}, (Action)delegate
		{
			if (Cursor.visible)
			{
				wheelValue = 0f;
			}
			else
			{
				wheelValue = Mathf.Max(wheelValue, Input.GetAxis("Mouse ScrollWheel"));
			}
		}, false);
		float wheelValue2 = 0f;
		float lastWheelValue2 = 0f;
		Input.AddButton("MouseWheelDown", (KeyCode)0, (Func<bool>)delegate
		{
			if (lastWheelValue2 > 0f)
			{
				wheelValue2 = 0f;
			}
			lastWheelValue2 = wheelValue2;
			wheelValue2 = 0f;
			return lastWheelValue2 > 0f;
		}, (Action)delegate
		{
			if (Cursor.visible)
			{
				wheelValue2 = 0f;
			}
			else
			{
				wheelValue2 = Mathf.Max(wheelValue2, Input.GetAxis("Mouse ScrollWheel") * -1f);
			}
		}, false);
	}
}
