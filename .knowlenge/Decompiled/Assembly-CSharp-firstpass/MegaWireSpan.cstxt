using System.Collections.Generic;
using UnityEngine;

[ExecuteInEditMode]
[RequireComponent(typeof(MeshFilter))]
[RequireComponent(typeof(MeshRenderer))]
public class MegaWireSpan : MonoBehaviour
{
	public bool visible = true;

	public bool on = true;

	public Transform start;

	public Transform end;

	public List<MegaWireConnection> connections = new List<MegaWireConnection>();

	public Mesh mesh;

	public float WireLength;

	public bool AllowUpdates = true;

	public bool buildmesh;

	public float time;

	public Matrix4x4 startTm;

	public Matrix4x4 endTm;

	public int vcount;

	public Vector3[] verts;

	public Vector2[] uvs;

	public int[] tris;

	public Vector3[] norms;

	private void OnBecameVisible()
	{
		visible = true;
	}

	private void OnBecameInvisible()
	{
		visible = false;
	}

	public void Init(MegaWire wire)
	{
		if ((bool)start && (bool)end)
		{
			WireLength = Vector3.Distance(start.position, end.position);
			for (int i = 0; i < connections.Count; i++)
			{
				connections[i].Init(wire);
			}
		}
	}

	public void UpdateSpan(MegaWire wire, float ts)
	{
		for (int i = 0; i < connections.Count; i++)
		{
			connections[i].Update(wire, ts);
		}
	}

	public void MoveMasses(MegaWire wire)
	{
		for (int i = 0; i < connections.Count; i++)
		{
			connections[i].MoveMasses(wire);
		}
	}

	public void BuildMesh(MegaWire wire)
	{
		wire.strandedMesher.BuildMesh(wire, this);
	}
}
