using UnityEngine;

public abstract class TOD_Particle : MonoBehaviour
{
	private ParticleSystem particleComponent;

	protected float GetEmission()
	{
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		if (Object.op_Implicit((Object)(object)particleComponent))
		{
			EmissionModule emission = particleComponent.emission;
			return ((EmissionModule)(ref emission)).rateOverTimeMultiplier;
		}
		return 0f;
	}

	protected void SetEmission(float value)
	{
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		if (Object.op_Implicit((Object)(object)particleComponent))
		{
			EmissionModule emission = particleComponent.emission;
			((EmissionModule)(ref emission)).rateOverTimeMultiplier = value;
		}
	}

	protected void Awake()
	{
		particleComponent = ((Component)this).GetComponent<ParticleSystem>();
	}
}
