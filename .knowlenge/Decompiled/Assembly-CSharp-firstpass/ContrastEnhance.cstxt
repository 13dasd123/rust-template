using UnityEngine;
using UnityStandardAssets.ImageEffects;

[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("Image Effects/Color Adjustments/Contrast Enhance (Unsharp Mask)")]
internal class ContrastEnhance : PostEffectsBase
{
	public float intensity = 0.5f;

	public float threshold;

	private Material separableBlurMaterial;

	private Material contrastCompositeMaterial;

	public float blurSpread = 1f;

	public Shader separableBlurShader;

	public Shader contrastCompositeShader;

	public override bool CheckResources()
	{
		CheckSupport(needDepth: false);
		contrastCompositeMaterial = CheckShaderAndCreateMaterial(contrastCompositeShader, contrastCompositeMaterial);
		separableBlurMaterial = CheckShaderAndCreateMaterial(separableBlurShader, separableBlurMaterial);
		if (!isSupported)
		{
			ReportAutoDisable();
		}
		return isSupported;
	}

	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
		//IL_0079: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d1: Unknown result type (might be due to invalid IL or missing references)
		if (!CheckResources())
		{
			Graphics.Blit((Texture)(object)source, destination);
			return;
		}
		int width = ((Texture)source).width;
		int height = ((Texture)source).height;
		RenderTexture temporary = RenderTexture.GetTemporary(width / 2, height / 2, 0);
		Graphics.Blit((Texture)(object)source, temporary);
		RenderTexture temporary2 = RenderTexture.GetTemporary(width / 4, height / 4, 0);
		Graphics.Blit((Texture)(object)temporary, temporary2);
		RenderTexture.ReleaseTemporary(temporary);
		separableBlurMaterial.SetVector("offsets", new Vector4(0f, blurSpread * 1f / (float)((Texture)temporary2).height, 0f, 0f));
		RenderTexture temporary3 = RenderTexture.GetTemporary(width / 4, height / 4, 0);
		Graphics.Blit((Texture)(object)temporary2, temporary3, separableBlurMaterial);
		RenderTexture.ReleaseTemporary(temporary2);
		separableBlurMaterial.SetVector("offsets", new Vector4(blurSpread * 1f / (float)((Texture)temporary2).width, 0f, 0f, 0f));
		temporary2 = RenderTexture.GetTemporary(width / 4, height / 4, 0);
		Graphics.Blit((Texture)(object)temporary3, temporary2, separableBlurMaterial);
		RenderTexture.ReleaseTemporary(temporary3);
		contrastCompositeMaterial.SetTexture("_MainTexBlurred", (Texture)(object)temporary2);
		contrastCompositeMaterial.SetFloat("intensity", intensity);
		contrastCompositeMaterial.SetFloat("threshhold", threshold);
		Graphics.Blit((Texture)(object)source, destination, contrastCompositeMaterial);
		RenderTexture.ReleaseTemporary(temporary2);
	}
}
