using UnityEngine;

[AddComponentMenu("Facepunch/Skeleton Skin LOD")]
[RequireComponent(typeof(LODGroup))]
[ExecuteInEditMode]
public class SkeletonSkinLod : MonoBehaviour
{
	private static LOD[] emptyLOD = (LOD[])(object)new LOD[1];

	public LODGroup LODGroup;

	[Range(0f, 1f)]
	public float LodRange0 = 0.15f;

	[Range(0f, 1f)]
	public float LodRange1 = 0.05f;

	[Range(0f, 1f)]
	public float LodRange2 = 0.02f;

	[Range(0f, 1f)]
	public float LodRange3 = 0.003f;

	private LOD[] LODs;

	private void Awake()
	{
		SetUpLODArray();
	}

	private void SetUpLODArray()
	{
		//IL_0029: Unknown result type (might be due to invalid IL or missing references)
		//IL_002e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0047: Unknown result type (might be due to invalid IL or missing references)
		//IL_004c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0065: Unknown result type (might be due to invalid IL or missing references)
		//IL_006a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0083: Unknown result type (might be due to invalid IL or missing references)
		//IL_0088: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a7: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ac: Unknown result type (might be due to invalid IL or missing references)
		if (LODs == null)
		{
			LODs = (LOD[])(object)new LOD[5];
			LODs[0] = new LOD(LodRange0, (Renderer[])(object)new Renderer[32]);
			LODs[1] = new LOD(LodRange1, (Renderer[])(object)new Renderer[32]);
			LODs[2] = new LOD(LodRange2, (Renderer[])(object)new Renderer[32]);
			LODs[3] = new LOD(LodRange3, (Renderer[])(object)new Renderer[32]);
			LODs[4] = new LOD(LodRange3 * 0.5f, (Renderer[])(object)new Renderer[32]);
		}
	}

	public void AddRenderer(int lod, Renderer r)
	{
		if (lod == -1)
		{
			return;
		}
		if (LODs == null)
		{
			SetUpLODArray();
		}
		for (int i = 0; i < 32 && !((Object)(object)LODs[lod].renderers[i] == (Object)(object)r); i++)
		{
			if ((Object)(object)LODs[lod].renderers[i] == (Object)null)
			{
				LODs[lod].renderers[i] = r;
				if (lod == 4)
				{
					LODs[4].screenRelativeTransitionHeight = LodRange3 * 0.5f;
					LODs[3].screenRelativeTransitionHeight = LodRange2 * 0.5f;
				}
				break;
			}
		}
	}

	public void Clear()
	{
		if ((Object)(object)LODGroup == (Object)null || LODs == null)
		{
			return;
		}
		if (LODs == null)
		{
			SetUpLODArray();
		}
		for (int i = 0; i < LODs.Length; i++)
		{
			for (int j = 0; j < 32; j++)
			{
				LODs[i].renderers[j] = null;
			}
		}
		LODGroup.SetLODs(emptyLOD);
		LODs[4].screenRelativeTransitionHeight = LodRange3 * 0.999f;
		LODs[3].screenRelativeTransitionHeight = LodRange3;
	}

	public void Rebuild()
	{
		if (!((Object)(object)LODGroup == (Object)null))
		{
			if (LODs == null)
			{
				SetUpLODArray();
			}
			LODGroup.SetLODs(LODs);
		}
	}
}
