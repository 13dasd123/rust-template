using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using Facepunch.Nexus;
using Facepunch.Nexus.Connector;
using Facepunch.Nexus.Logging;
using Facepunch.Nexus.Models;
using Facepunch.Nexus.Time;

public class NexusClan : Object
{
	[StructLayout(3)]
	[CompilerGenerated]
	private struct <AcceptInvite>d__56 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string playerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_010b: Expected O, but got Unknown
			//IL_0067: Unknown result type (might be due to invalid IL or missing references)
			//IL_006c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0074: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0032: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Unknown result type (might be due to invalid IL or missing references)
			//IL_008d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0097: Invalid comparison between Unknown and I4
			//IL_004c: Unknown result type (might be due to invalid IL or missing references)
			//IL_004e: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a2: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ac: Invalid comparison between Unknown and I4
			//IL_00b4: Unknown result type (might be due to invalid IL or missing references)
			//IL_00be: Invalid comparison between Unknown and I4
			//IL_00c7: Unknown result type (might be due to invalid IL or missing references)
			//IL_00d1: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.AcceptInvite(nexusClan.ClanId, playerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <AcceptInvite>d__56>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 409)
				{
					result2 = NexusClanResultCode.AlreadyInAClan;
				}
				else if ((int)result.StatusCode == 417)
				{
					result2 = NexusClanResultCode.ClanIsFull;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <AddLog>d__50 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string eventKey;

		public string arg1;

		public string arg2;

		public string arg3;

		public string arg4;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_00c4: Expected O, but got Unknown
			//IL_007c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0081: Unknown result type (might be due to invalid IL or missing references)
			//IL_0089: Unknown result type (might be due to invalid IL or missing references)
			//IL_0041: Unknown result type (might be due to invalid IL or missing references)
			//IL_0046: Unknown result type (might be due to invalid IL or missing references)
			//IL_004a: Unknown result type (might be due to invalid IL or missing references)
			//IL_004f: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a2: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ac: Invalid comparison between Unknown and I4
			//IL_0064: Unknown result type (might be due to invalid IL or missing references)
			//IL_0066: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.AddClanLog(nexusClan.ClanId, eventKey, arg1, arg2, arg3, arg4).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <AddLog>d__50>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
					num = (<>1__state = -1);
				}
				ApiResult result = val.GetResult();
				result2 = (((int)result.StatusCode != 404) ? (result.IsSuccess ? NexusClanResultCode.Success : NexusClanResultCode.Fail) : NexusClanResultCode.NotFound);
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <CancelInvite>d__55 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string playerId;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_00e8: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a5: Unknown result type (might be due to invalid IL or missing references)
			//IL_00af: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.CancelInvite(nexusClan.ClanId, playerId, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <CancelInvite>d__55>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <CreateRole>d__59 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public ClanRoleParameters parameters;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_00fa: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a5: Unknown result type (might be due to invalid IL or missing references)
			//IL_00af: Invalid comparison between Unknown and I4
			//IL_00b7: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c1: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.CreateRole(nexusClan.ClanId, parameters, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <CreateRole>d__59>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 409)
				{
					result2 = NexusClanResultCode.DuplicateName;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <DeleteRole>d__61 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public int roleId;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_010f: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a8: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b2: Invalid comparison between Unknown and I4
			//IL_00ba: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c4: Invalid comparison between Unknown and I4
			//IL_00cc: Unknown result type (might be due to invalid IL or missing references)
			//IL_00d6: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.DeleteRole(nexusClan.ClanId, roleId, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <DeleteRole>d__61>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 409)
				{
					result2 = NexusClanResultCode.CannotDeleteLeader;
				}
				else if ((int)result.StatusCode == 417)
				{
					result2 = NexusClanResultCode.RoleNotEmpty;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <Disband>d__63 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_00c9: Expected O, but got Unknown
			//IL_0067: Unknown result type (might be due to invalid IL or missing references)
			//IL_006c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0074: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0032: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Unknown result type (might be due to invalid IL or missing references)
			//IL_008d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0097: Invalid comparison between Unknown and I4
			//IL_004c: Unknown result type (might be due to invalid IL or missing references)
			//IL_004e: Unknown result type (might be due to invalid IL or missing references)
			//IL_009f: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a9: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.DisbandClan(nexusClan.ClanId, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <Disband>d__63>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
					num = (<>1__state = -1);
				}
				ApiResult result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <GetLogs>d__49 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResult<List<ClanLogEntry>>> <>t__builder;

		public NexusClan <>4__this;

		public string byPlayerId;

		public int limit;

		private ConfiguredTaskAwaiter<ApiResult<List<ClanLogEntry>>> <>u__1;

		private void MoveNext()
		{
			//IL_00e9: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_00aa: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b4: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResult<List<ClanLogEntry>> result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<List<ClanLogEntry>>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.GetClanLogs(nexusClan.ClanId, byPlayerId, limit).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<List<ClanLogEntry>>>, <GetLogs>d__49>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<List<ClanLogEntry>>>);
					num = (<>1__state = -1);
				}
				ApiResult<List<ClanLogEntry>> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = new NexusClanResult<List<ClanLogEntry>>(NexusClanResultCode.NotFound);
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = new NexusClanResult<List<ClanLogEntry>>(NexusClanResultCode.NoPermission);
				}
				else if (!result.IsSuccess)
				{
					result2 = new NexusClanResult<List<ClanLogEntry>>(NexusClanResultCode.Fail);
				}
				else
				{
					result.EnsureSuccessfulWithResponse();
					result2 = new NexusClanResult<List<ClanLogEntry>>(result.Response);
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <GetScoreEvents>d__51 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResult<List<ClanScoreEventEntry>>> <>t__builder;

		public NexusClan <>4__this;

		public string byPlayerId;

		public int limit;

		private ConfiguredTaskAwaiter<ApiResult<List<ClanScoreEventEntry>>> <>u__1;

		private void MoveNext()
		{
			//IL_00e9: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_00aa: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b4: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResult<List<ClanScoreEventEntry>> result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<List<ClanScoreEventEntry>>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.GetClanScoreEvents(nexusClan.ClanId, byPlayerId, limit).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<List<ClanScoreEventEntry>>>, <GetScoreEvents>d__51>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<List<ClanScoreEventEntry>>>);
					num = (<>1__state = -1);
				}
				ApiResult<List<ClanScoreEventEntry>> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = new NexusClanResult<List<ClanScoreEventEntry>>(NexusClanResultCode.NotFound);
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = new NexusClanResult<List<ClanScoreEventEntry>>(NexusClanResultCode.NoPermission);
				}
				else if (!result.IsSuccess)
				{
					result2 = new NexusClanResult<List<ClanScoreEventEntry>>(NexusClanResultCode.Fail);
				}
				else
				{
					result.EnsureSuccessfulWithResponse();
					result2 = new NexusClanResult<List<ClanScoreEventEntry>>(result.Response);
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <Invite>d__54 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string playerId;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_0111: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a8: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b2: Invalid comparison between Unknown and I4
			//IL_00ba: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c4: Invalid comparison between Unknown and I4
			//IL_00cd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00d7: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.CreateInvite(nexusClan.ClanId, playerId, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <Invite>d__54>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 409)
				{
					result2 = NexusClanResultCode.AlreadyInAClan;
				}
				else if ((int)result.StatusCode == 417)
				{
					result2 = NexusClanResultCode.ClanIsFull;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <Kick>d__57 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string playerId;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_00fb: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a5: Unknown result type (might be due to invalid IL or missing references)
			//IL_00af: Invalid comparison between Unknown and I4
			//IL_00b7: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c1: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.Kick(nexusClan.ClanId, playerId, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <Kick>d__57>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 409)
				{
					result2 = NexusClanResultCode.CannotKickLeader;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <Refresh>d__43 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public NexusClan <>4__this;

		private TaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_00ef: Expected O, but got Unknown
			//IL_0068: Unknown result type (might be due to invalid IL or missing references)
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0075: Unknown result type (might be due to invalid IL or missing references)
			//IL_0033: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_008e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0098: Invalid comparison between Unknown and I4
			//IL_004d: Unknown result type (might be due to invalid IL or missing references)
			//IL_004f: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			try
			{
				TaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					nexusClan._lastRefreshed = nexusClan._clockProvider.Timestamp;
					val = nexusClan._zoneConnector.GetClan(nexusClan.ClanId).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<ClanDetails>>, <Refresh>d__43>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					nexusClan._logger.LogWarn(String.Format("Clan ID {0} was not found during a refresh, removing from cache", (object)nexusClan.ClanId));
					nexusClan._client.RemoveClan(nexusClan.ClanId);
				}
				else
				{
					result.EnsureSuccessfulWithResponse();
					ClanDetails details = result.Response;
					nexusClan._client.UpsertClan(in details);
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <RefreshInBackground>d__42 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncVoidMethodBuilder <>t__builder;

		public NexusClan <>4__this;

		private TaskAwaiter <>u__1;

		private void MoveNext()
		{
			//IL_006f: Expected O, but got Unknown
			//IL_0096: Expected O, but got Unknown
			//IL_004a: Unknown result type (might be due to invalid IL or missing references)
			//IL_004f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0056: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0033: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			try
			{
				try
				{
					TaskAwaiter val;
					if (num != 0)
					{
						val = nexusClan.Refresh().GetAwaiter();
						if (!((TaskAwaiter)(ref val)).IsCompleted)
						{
							num = (<>1__state = 0);
							<>u__1 = val;
							((AsyncVoidMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<TaskAwaiter, <RefreshInBackground>d__42>(ref val, ref this);
							return;
						}
					}
					else
					{
						val = <>u__1;
						<>u__1 = default(TaskAwaiter);
						num = (<>1__state = -1);
					}
					((TaskAwaiter)(ref val)).GetResult();
				}
				catch (Exception val2)
				{
					Exception exception = val2;
					nexusClan._logger.LogError(String.Format("Failed to refresh clan ID {0}", (object)nexusClan.ClanId), exception);
				}
			}
			catch (Exception val3)
			{
				Exception exception2 = val3;
				<>1__state = -2;
				((AsyncVoidMethodBuilder)(ref <>t__builder)).SetException(exception2);
				return;
			}
			<>1__state = -2;
			((AsyncVoidMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncVoidMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SetPlayerRole>d__58 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string playerId;

		public int newRoleId;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_0101: Expected O, but got Unknown
			//IL_0073: Unknown result type (might be due to invalid IL or missing references)
			//IL_0078: Unknown result type (might be due to invalid IL or missing references)
			//IL_0080: Unknown result type (might be due to invalid IL or missing references)
			//IL_0035: Unknown result type (might be due to invalid IL or missing references)
			//IL_003a: Unknown result type (might be due to invalid IL or missing references)
			//IL_003e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0043: Unknown result type (might be due to invalid IL or missing references)
			//IL_0099: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a3: Invalid comparison between Unknown and I4
			//IL_0058: Unknown result type (might be due to invalid IL or missing references)
			//IL_005a: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ab: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b5: Invalid comparison between Unknown and I4
			//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c7: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.SetPlayerRole(nexusClan.ClanId, playerId, newRoleId, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <SetPlayerRole>d__58>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 417)
				{
					result2 = NexusClanResultCode.CannotDemoteLeader;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SwapRoleRanks>d__62 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public int roleIdA;

		public int roleIdB;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_0100: Expected O, but got Unknown
			//IL_0073: Unknown result type (might be due to invalid IL or missing references)
			//IL_0078: Unknown result type (might be due to invalid IL or missing references)
			//IL_0080: Unknown result type (might be due to invalid IL or missing references)
			//IL_0035: Unknown result type (might be due to invalid IL or missing references)
			//IL_003a: Unknown result type (might be due to invalid IL or missing references)
			//IL_003e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0043: Unknown result type (might be due to invalid IL or missing references)
			//IL_0099: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a3: Invalid comparison between Unknown and I4
			//IL_0058: Unknown result type (might be due to invalid IL or missing references)
			//IL_005a: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ab: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b5: Invalid comparison between Unknown and I4
			//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c7: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.SwapRoleRanks(nexusClan.ClanId, roleIdA, roleIdB, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <SwapRoleRanks>d__62>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 417)
				{
					result2 = NexusClanResultCode.CannotSwapLeader;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <UpdateLastSeen>d__53 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string playerId;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_00ac: Expected O, but got Unknown
			//IL_0064: Unknown result type (might be due to invalid IL or missing references)
			//IL_0069: Unknown result type (might be due to invalid IL or missing references)
			//IL_0071: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0032: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Unknown result type (might be due to invalid IL or missing references)
			//IL_008a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0094: Invalid comparison between Unknown and I4
			//IL_004c: Unknown result type (might be due to invalid IL or missing references)
			//IL_004e: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.UpdateLastSeen(nexusClan.ClanId, playerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <UpdateLastSeen>d__53>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
					num = (<>1__state = -1);
				}
				ApiResult result = val.GetResult();
				result2 = (((int)result.StatusCode != 404) ? (result.IsSuccess ? NexusClanResultCode.Success : NexusClanResultCode.Fail) : NexusClanResultCode.NotFound);
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <UpdatePlayerVariables>d__48 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public string playerId;

		public ClanVariablesUpdate update;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_00d6: Expected O, but got Unknown
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Invalid comparison between Unknown and I4
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.UpdatePlayerClanVariables(nexusClan.ClanId, playerId, update).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <UpdatePlayerVariables>d__48>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <UpdateRole>d__60 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public int roleId;

		public ClanRoleParameters parameters;

		public string byPlayerId;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_0100: Expected O, but got Unknown
			//IL_0073: Unknown result type (might be due to invalid IL or missing references)
			//IL_0078: Unknown result type (might be due to invalid IL or missing references)
			//IL_0080: Unknown result type (might be due to invalid IL or missing references)
			//IL_0035: Unknown result type (might be due to invalid IL or missing references)
			//IL_003a: Unknown result type (might be due to invalid IL or missing references)
			//IL_003e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0043: Unknown result type (might be due to invalid IL or missing references)
			//IL_0099: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a3: Invalid comparison between Unknown and I4
			//IL_0058: Unknown result type (might be due to invalid IL or missing references)
			//IL_005a: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ab: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b5: Invalid comparison between Unknown and I4
			//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c7: Invalid comparison between Unknown and I4
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.UpdateRole(nexusClan.ClanId, roleId, parameters, byPlayerId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <UpdateRole>d__60>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if ((int)result.StatusCode == 403)
				{
					result2 = NexusClanResultCode.NoPermission;
				}
				else if ((int)result.StatusCode == 409)
				{
					result2 = NexusClanResultCode.DuplicateName;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <UpdateVariables>d__47 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<NexusClanResultCode> <>t__builder;

		public NexusClan <>4__this;

		public ClanVariablesUpdate update;

		private ConfiguredTaskAwaiter<ApiResult<ClanDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_00d0: Expected O, but got Unknown
			//IL_0067: Unknown result type (might be due to invalid IL or missing references)
			//IL_006c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0074: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0032: Unknown result type (might be due to invalid IL or missing references)
			//IL_0037: Unknown result type (might be due to invalid IL or missing references)
			//IL_008d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0097: Invalid comparison between Unknown and I4
			//IL_004c: Unknown result type (might be due to invalid IL or missing references)
			//IL_004e: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusClan nexusClan = <>4__this;
			NexusClanResultCode result2;
			try
			{
				ConfiguredTaskAwaiter<ApiResult<ClanDetails>> val;
				if (num != 0)
				{
					val = nexusClan._zoneConnector.UpdateClanVariables(nexusClan.ClanId, update).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult<ClanDetails>>, <UpdateVariables>d__47>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult<ClanDetails>>);
					num = (<>1__state = -1);
				}
				ApiResult<ClanDetails> result = val.GetResult();
				if ((int)result.StatusCode == 404)
				{
					result2 = NexusClanResultCode.NotFound;
				}
				else if (!result.IsSuccess)
				{
					result2 = NexusClanResultCode.Fail;
				}
				else
				{
					result.EnsureSuccessful();
					if (result.TryGetResponse(out var response))
					{
						nexusClan._client.UpsertClan(in response);
					}
					result2 = NexusClanResultCode.Success;
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	private const double RefreshInterval = 300.0;

	private readonly NexusZoneClient _client;

	private readonly INexusZoneConnector _zoneConnector;

	private readonly IClockProvider _clockProvider;

	private readonly INexusLogger _logger;

	private readonly VariableContainer _variables;

	private double _lastRefreshed;

	[field: CompilerGenerated]
	public long ClanId
	{
		[CompilerGenerated]
		get;
	}

	[field: CompilerGenerated]
	public string Name
	{
		[CompilerGenerated]
		get;
		[CompilerGenerated]
		private set;
	}

	[field: CompilerGenerated]
	public long Created
	{
		[CompilerGenerated]
		get;
		[CompilerGenerated]
		private set;
	}

	[field: CompilerGenerated]
	public string Creator
	{
		[CompilerGenerated]
		get;
		[CompilerGenerated]
		private set;
	}

	[field: CompilerGenerated]
	public long Score
	{
		[CompilerGenerated]
		get;
		[CompilerGenerated]
		private set;
	}

	[field: CompilerGenerated]
	public List<NexusClanRole> Roles
	{
		[CompilerGenerated]
		get;
	}

	[field: CompilerGenerated]
	public List<NexusClanMember> Members
	{
		[CompilerGenerated]
		get;
	}

	[field: CompilerGenerated]
	public int MaxMemberCount
	{
		[CompilerGenerated]
		get;
		[CompilerGenerated]
		private set;
	}

	[field: CompilerGenerated]
	public List<ClanInvite> Invites
	{
		[CompilerGenerated]
		get;
	}

	public IEnumerable<KeyValuePair<string, Variable>> Variables => _variables;

	internal NexusClan(NexusZoneClient client, INexusZoneConnector zoneConnector, IClockProvider clockProvider, INexusLogger logger, long clanId)
	{
		//IL_003a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0050: Unknown result type (might be due to invalid IL or missing references)
		//IL_0066: Unknown result type (might be due to invalid IL or missing references)
		//IL_007d: Unknown result type (might be due to invalid IL or missing references)
		ClanId = clanId;
		Roles = new List<NexusClanRole>();
		Members = new List<NexusClanMember>();
		Invites = new List<ClanInvite>();
		_client = client ?? throw new ArgumentNullException("client");
		_zoneConnector = zoneConnector ?? throw new ArgumentNullException("zoneConnector");
		_clockProvider = clockProvider ?? throw new ArgumentNullException("clockProvider");
		_logger = logger ?? throw new ArgumentNullException("logger");
		_variables = new VariableContainer();
	}

	internal bool UpdateFromModel(in ClanDetails details)
	{
		//IL_001b: Unknown result type (might be due to invalid IL or missing references)
		if (details.ClanId != ClanId)
		{
			throw new InvalidOperationException("Cannot update NexusClan with details from a different clan ID!");
		}
		lock (this)
		{
			bool changed = false;
			Name = Util.Update<string>(in ILSpyHelper_AsRefReadOnly(Name), in ILSpyHelper_AsRefReadOnly(details.Name), ref changed);
			Created = Util.Update<long>(in ILSpyHelper_AsRefReadOnly(Created), in ILSpyHelper_AsRefReadOnly(details.Created), ref changed);
			Creator = Util.Update<string>(in ILSpyHelper_AsRefReadOnly(Creator), in ILSpyHelper_AsRefReadOnly(details.Creator), ref changed);
			Score = Util.Update<long>(in ILSpyHelper_AsRefReadOnly(Score), in ILSpyHelper_AsRefReadOnly(details.Score), ref changed);
			MaxMemberCount = Util.Update<int>(in ILSpyHelper_AsRefReadOnly(MaxMemberCount), in ILSpyHelper_AsRefReadOnly(details.MaxMemberCount), ref changed);
			changed |= _variables.UpdateFromModel(details.Variables);
			changed |= Roles.Resize<NexusClanRole>(details.Roles.Count);
			for (int i = 0; i < Roles.Count; i++)
			{
				NexusClanRole nexusClanRole = Roles[i];
				if (nexusClanRole != null)
				{
					changed |= nexusClanRole.UpdateFromModel(details.Roles[i]);
					continue;
				}
				Roles[i] = new NexusClanRole(details.Roles[i]);
				changed = true;
			}
			changed |= Members.Resize<NexusClanMember>(details.Members.Count);
			for (int j = 0; j < Members.Count; j++)
			{
				NexusClanMember nexusClanMember = Members[j];
				if (nexusClanMember != null)
				{
					changed |= nexusClanMember.UpdateFromModel(details.Members[j]);
					continue;
				}
				Members[j] = new NexusClanMember(details.Members[j]);
				changed = true;
			}
			changed |= Invites.Resize<ClanInvite>(details.Invites.Count);
			for (int k = 0; k < Invites.Count; k++)
			{
				bool changed2 = false;
				ClanInvite clanInvite = Invites[k];
				ClanInvite clanInvite2 = details.Invites[k];
				clanInvite.PlayerId = Util.Update<string>(in ILSpyHelper_AsRefReadOnly(clanInvite.PlayerId), in ILSpyHelper_AsRefReadOnly(clanInvite2.PlayerId), ref changed2);
				clanInvite.RecruiterPlayerId = Util.Update<string>(in ILSpyHelper_AsRefReadOnly(clanInvite.RecruiterPlayerId), in ILSpyHelper_AsRefReadOnly(clanInvite2.RecruiterPlayerId), ref changed2);
				clanInvite.Created = Util.Update<long>(in ILSpyHelper_AsRefReadOnly(clanInvite.Created), in ILSpyHelper_AsRefReadOnly(clanInvite2.Created), ref changed2);
				if (changed2)
				{
					Invites[k] = clanInvite;
					changed = true;
				}
			}
			_lastRefreshed = _clockProvider.Timestamp;
			return changed;
		}
		static ref readonly T ILSpyHelper_AsRefReadOnly<T>(in T temp)
		{
			//ILSpy generated this function to help ensure overload resolution can pick the overload using 'in'
			return ref temp;
		}
	}

	internal void RefreshIfNeeded()
	{
		if (_clockProvider.Timestamp - _lastRefreshed > 300.0)
		{
			RefreshInBackground();
		}
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	internal void RefreshInBackground()
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<RefreshInBackground>d__42 <RefreshInBackground>d__ = default(<RefreshInBackground>d__42);
		<RefreshInBackground>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
		<RefreshInBackground>d__.<>4__this = this;
		<RefreshInBackground>d__.<>1__state = -1;
		((AsyncVoidMethodBuilder)(ref <RefreshInBackground>d__.<>t__builder)).Start<<RefreshInBackground>d__42>(ref <RefreshInBackground>d__);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task Refresh()
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<Refresh>d__43 <Refresh>d__ = default(<Refresh>d__43);
		<Refresh>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<Refresh>d__.<>4__this = this;
		<Refresh>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <Refresh>d__.<>t__builder)).Start<<Refresh>d__43>(ref <Refresh>d__);
		return ((AsyncTaskMethodBuilder)(ref <Refresh>d__.<>t__builder)).Task;
	}

	public bool TryGetVariable(string key, out Variable variable)
	{
		return _variables.TryGet(key, out variable);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> UpdateVariables(ClanVariablesUpdate update)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<UpdateVariables>d__47 <UpdateVariables>d__ = default(<UpdateVariables>d__47);
		<UpdateVariables>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<UpdateVariables>d__.<>4__this = this;
		<UpdateVariables>d__.update = update;
		<UpdateVariables>d__.<>1__state = -1;
		<UpdateVariables>d__.<>t__builder.Start<<UpdateVariables>d__47>(ref <UpdateVariables>d__);
		return <UpdateVariables>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> UpdatePlayerVariables(string playerId, ClanVariablesUpdate update)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<UpdatePlayerVariables>d__48 <UpdatePlayerVariables>d__ = default(<UpdatePlayerVariables>d__48);
		<UpdatePlayerVariables>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<UpdatePlayerVariables>d__.<>4__this = this;
		<UpdatePlayerVariables>d__.playerId = playerId;
		<UpdatePlayerVariables>d__.update = update;
		<UpdatePlayerVariables>d__.<>1__state = -1;
		<UpdatePlayerVariables>d__.<>t__builder.Start<<UpdatePlayerVariables>d__48>(ref <UpdatePlayerVariables>d__);
		return <UpdatePlayerVariables>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResult<List<ClanLogEntry>>> GetLogs(string byPlayerId, int limit = 100)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<GetLogs>d__49 <GetLogs>d__ = default(<GetLogs>d__49);
		<GetLogs>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResult<List<ClanLogEntry>>>.Create();
		<GetLogs>d__.<>4__this = this;
		<GetLogs>d__.byPlayerId = byPlayerId;
		<GetLogs>d__.limit = limit;
		<GetLogs>d__.<>1__state = -1;
		<GetLogs>d__.<>t__builder.Start<<GetLogs>d__49>(ref <GetLogs>d__);
		return <GetLogs>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> AddLog(string eventKey, string arg1 = null, string arg2 = null, string arg3 = null, string arg4 = null)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<AddLog>d__50 <AddLog>d__ = default(<AddLog>d__50);
		<AddLog>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<AddLog>d__.<>4__this = this;
		<AddLog>d__.eventKey = eventKey;
		<AddLog>d__.arg1 = arg1;
		<AddLog>d__.arg2 = arg2;
		<AddLog>d__.arg3 = arg3;
		<AddLog>d__.arg4 = arg4;
		<AddLog>d__.<>1__state = -1;
		<AddLog>d__.<>t__builder.Start<<AddLog>d__50>(ref <AddLog>d__);
		return <AddLog>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResult<List<ClanScoreEventEntry>>> GetScoreEvents(string byPlayerId, int limit = 100)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<GetScoreEvents>d__51 <GetScoreEvents>d__ = default(<GetScoreEvents>d__51);
		<GetScoreEvents>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResult<List<ClanScoreEventEntry>>>.Create();
		<GetScoreEvents>d__.<>4__this = this;
		<GetScoreEvents>d__.byPlayerId = byPlayerId;
		<GetScoreEvents>d__.limit = limit;
		<GetScoreEvents>d__.<>1__state = -1;
		<GetScoreEvents>d__.<>t__builder.Start<<GetScoreEvents>d__51>(ref <GetScoreEvents>d__);
		return <GetScoreEvents>d__.<>t__builder.Task;
	}

	public void AddScoreEvent(NewClanScoreEventEntry entry)
	{
		//IL_0057: Unknown result type (might be due to invalid IL or missing references)
		NexusZoneClient client = _client;
		NewClanScoreEventBatchEntry entry2 = new NewClanScoreEventBatchEntry
		{
			ClanId = ClanId,
			Type = entry.Type,
			Score = entry.Score,
			Multiplier = entry.Multiplier,
			PlayerId = entry.PlayerId,
			OtherClanId = entry.OtherClanId,
			OtherPlayerId = entry.OtherPlayerId,
			Arg1 = entry.Arg1,
			Arg2 = entry.Arg2
		};
		client.EnqueueClanScoreEvent(in entry2);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> UpdateLastSeen(string playerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<UpdateLastSeen>d__53 <UpdateLastSeen>d__ = default(<UpdateLastSeen>d__53);
		<UpdateLastSeen>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<UpdateLastSeen>d__.<>4__this = this;
		<UpdateLastSeen>d__.playerId = playerId;
		<UpdateLastSeen>d__.<>1__state = -1;
		<UpdateLastSeen>d__.<>t__builder.Start<<UpdateLastSeen>d__53>(ref <UpdateLastSeen>d__);
		return <UpdateLastSeen>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> Invite(string playerId, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<Invite>d__54 <Invite>d__ = default(<Invite>d__54);
		<Invite>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<Invite>d__.<>4__this = this;
		<Invite>d__.playerId = playerId;
		<Invite>d__.byPlayerId = byPlayerId;
		<Invite>d__.<>1__state = -1;
		<Invite>d__.<>t__builder.Start<<Invite>d__54>(ref <Invite>d__);
		return <Invite>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> CancelInvite(string playerId, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<CancelInvite>d__55 <CancelInvite>d__ = default(<CancelInvite>d__55);
		<CancelInvite>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<CancelInvite>d__.<>4__this = this;
		<CancelInvite>d__.playerId = playerId;
		<CancelInvite>d__.byPlayerId = byPlayerId;
		<CancelInvite>d__.<>1__state = -1;
		<CancelInvite>d__.<>t__builder.Start<<CancelInvite>d__55>(ref <CancelInvite>d__);
		return <CancelInvite>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> AcceptInvite(string playerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<AcceptInvite>d__56 <AcceptInvite>d__ = default(<AcceptInvite>d__56);
		<AcceptInvite>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<AcceptInvite>d__.<>4__this = this;
		<AcceptInvite>d__.playerId = playerId;
		<AcceptInvite>d__.<>1__state = -1;
		<AcceptInvite>d__.<>t__builder.Start<<AcceptInvite>d__56>(ref <AcceptInvite>d__);
		return <AcceptInvite>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> Kick(string playerId, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<Kick>d__57 <Kick>d__ = default(<Kick>d__57);
		<Kick>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<Kick>d__.<>4__this = this;
		<Kick>d__.playerId = playerId;
		<Kick>d__.byPlayerId = byPlayerId;
		<Kick>d__.<>1__state = -1;
		<Kick>d__.<>t__builder.Start<<Kick>d__57>(ref <Kick>d__);
		return <Kick>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> SetPlayerRole(string playerId, int newRoleId, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<SetPlayerRole>d__58 <SetPlayerRole>d__ = default(<SetPlayerRole>d__58);
		<SetPlayerRole>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<SetPlayerRole>d__.<>4__this = this;
		<SetPlayerRole>d__.playerId = playerId;
		<SetPlayerRole>d__.newRoleId = newRoleId;
		<SetPlayerRole>d__.byPlayerId = byPlayerId;
		<SetPlayerRole>d__.<>1__state = -1;
		<SetPlayerRole>d__.<>t__builder.Start<<SetPlayerRole>d__58>(ref <SetPlayerRole>d__);
		return <SetPlayerRole>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> CreateRole(ClanRoleParameters parameters, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<CreateRole>d__59 <CreateRole>d__ = default(<CreateRole>d__59);
		<CreateRole>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<CreateRole>d__.<>4__this = this;
		<CreateRole>d__.parameters = parameters;
		<CreateRole>d__.byPlayerId = byPlayerId;
		<CreateRole>d__.<>1__state = -1;
		<CreateRole>d__.<>t__builder.Start<<CreateRole>d__59>(ref <CreateRole>d__);
		return <CreateRole>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> UpdateRole(int roleId, ClanRoleParameters parameters, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<UpdateRole>d__60 <UpdateRole>d__ = default(<UpdateRole>d__60);
		<UpdateRole>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<UpdateRole>d__.<>4__this = this;
		<UpdateRole>d__.roleId = roleId;
		<UpdateRole>d__.parameters = parameters;
		<UpdateRole>d__.byPlayerId = byPlayerId;
		<UpdateRole>d__.<>1__state = -1;
		<UpdateRole>d__.<>t__builder.Start<<UpdateRole>d__60>(ref <UpdateRole>d__);
		return <UpdateRole>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> DeleteRole(int roleId, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<DeleteRole>d__61 <DeleteRole>d__ = default(<DeleteRole>d__61);
		<DeleteRole>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<DeleteRole>d__.<>4__this = this;
		<DeleteRole>d__.roleId = roleId;
		<DeleteRole>d__.byPlayerId = byPlayerId;
		<DeleteRole>d__.<>1__state = -1;
		<DeleteRole>d__.<>t__builder.Start<<DeleteRole>d__61>(ref <DeleteRole>d__);
		return <DeleteRole>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> SwapRoleRanks(int roleIdA, int roleIdB, string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<SwapRoleRanks>d__62 <SwapRoleRanks>d__ = default(<SwapRoleRanks>d__62);
		<SwapRoleRanks>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<SwapRoleRanks>d__.<>4__this = this;
		<SwapRoleRanks>d__.roleIdA = roleIdA;
		<SwapRoleRanks>d__.roleIdB = roleIdB;
		<SwapRoleRanks>d__.byPlayerId = byPlayerId;
		<SwapRoleRanks>d__.<>1__state = -1;
		<SwapRoleRanks>d__.<>t__builder.Start<<SwapRoleRanks>d__62>(ref <SwapRoleRanks>d__);
		return <SwapRoleRanks>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<NexusClanResultCode> Disband(string byPlayerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<Disband>d__63 <Disband>d__ = default(<Disband>d__63);
		<Disband>d__.<>t__builder = AsyncTaskMethodBuilder<NexusClanResultCode>.Create();
		<Disband>d__.<>4__this = this;
		<Disband>d__.byPlayerId = byPlayerId;
		<Disband>d__.<>1__state = -1;
		<Disband>d__.<>t__builder.Start<<Disband>d__63>(ref <Disband>d__);
		return <Disband>d__.<>t__builder.Task;
	}
}
