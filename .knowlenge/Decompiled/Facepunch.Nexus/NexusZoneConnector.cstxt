using System;
using System.Buffers;
using System.Collections.Generic;
using System.Diagnostics;
using System.Net;
using System.Net.Http.Headers;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using Facepunch.Nexus;
using Facepunch.Nexus.Connector;
using Facepunch.Nexus.Logging;
using Facepunch.Nexus.Models;

internal class NexusZoneConnector : NexusConnector, INexusZoneConnector, INexusConnector
{
	private struct NewClanLogEntry : ValueType
	{
		[field: CompilerGenerated]
		public string EventKey
		{
			[CompilerGenerated]
			get;
			[CompilerGenerated]
			set;
		}

		[field: CompilerGenerated]
		public string Arg1
		{
			[CompilerGenerated]
			get;
			[CompilerGenerated]
			set;
		}

		[field: CompilerGenerated]
		public string Arg2
		{
			[CompilerGenerated]
			get;
			[CompilerGenerated]
			set;
		}

		[field: CompilerGenerated]
		public string Arg3
		{
			[CompilerGenerated]
			get;
			[CompilerGenerated]
			set;
		}

		[field: CompilerGenerated]
		public string Arg4
		{
			[CompilerGenerated]
			get;
			[CompilerGenerated]
			set;
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <Assign>d__17 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public string playerId;

		public NexusZoneConnector <>4__this;

		public string toZone;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_00d1: Expected O, but got Unknown
			//IL_00a3: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a8: Unknown result type (might be due to invalid IL or missing references)
			//IL_00af: Unknown result type (might be due to invalid IL or missing references)
			//IL_006a: Unknown result type (might be due to invalid IL or missing references)
			//IL_006f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0073: Unknown result type (might be due to invalid IL or missing references)
			//IL_0078: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_008c: Unknown result type (might be due to invalid IL or missing references)
			//IL_008d: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				ConfiguredTaskAwaiter<ApiResult> val;
				if (num != 0)
				{
					if (String.IsNullOrWhiteSpace(playerId))
					{
						throw new ArgumentNullException("playerId");
					}
					val = nexusZoneConnector.PostRequestWithoutResponse(String.Concat((string[])(object)new String[5] { nexusZoneConnector._assignEndpoint, "?playerId=", playerId, "&toZone=", toZone })).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <Assign>d__17>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
					num = (<>1__state = -1);
				}
				val.GetResult().EnsureSuccessful();
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <CheckUploadedMap>d__31 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<ZoneMapCheckResult> <>t__builder;

		public NexusZoneConnector <>4__this;

		private TaskAwaiter<ApiResult<ZoneMapCheckResult>> <>u__1;

		private void MoveNext()
		{
			//IL_0080: Expected O, but got Unknown
			//IL_0050: Unknown result type (might be due to invalid IL or missing references)
			//IL_0055: Unknown result type (might be due to invalid IL or missing references)
			//IL_005d: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003a: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			ZoneMapCheckResult response;
			try
			{
				TaskAwaiter<ApiResult<ZoneMapCheckResult>> val;
				if (num != 0)
				{
					val = nexusZoneConnector.GetRequest<ZoneMapCheckResult>(nexusZoneConnector._mapEndpoint).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<ZoneMapCheckResult>>, <CheckUploadedMap>d__31>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<ZoneMapCheckResult>>);
					num = (<>1__state = -1);
				}
				response = val.GetResult().Response;
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(response);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <CompleteTransfers>d__19 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public IEnumerable<string> playerIds;

		public NexusZoneConnector <>4__this;

		private TaskAwaiter<ApiResult<CompleteTransfersResponse>> <>u__1;

		private void MoveNext()
		{
			//IL_00a6: Expected O, but got Unknown
			//IL_0078: Unknown result type (might be due to invalid IL or missing references)
			//IL_007d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0084: Unknown result type (might be due to invalid IL or missing references)
			//IL_0048: Unknown result type (might be due to invalid IL or missing references)
			//IL_004d: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0061: Unknown result type (might be due to invalid IL or missing references)
			//IL_0062: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				TaskAwaiter<ApiResult<CompleteTransfersResponse>> val;
				if (num != 0)
				{
					if (playerIds == null)
					{
						throw new ArgumentNullException("playerIds");
					}
					val = nexusZoneConnector.PostRequest<CompleteTransfersRequest, CompleteTransfersResponse>(nexusZoneConnector._completeTransferEndpoint, new CompleteTransfersRequest
					{
						PlayerIds = playerIds
					}).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<CompleteTransfersResponse>>, <CompleteTransfers>d__19>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<CompleteTransfersResponse>>);
					num = (<>1__state = -1);
				}
				val.GetResult().EnsureSuccessfulWithResponse();
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <FindPlayersWithVariable>d__30 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<List<string>> <>t__builder;

		public string key;

		public string value;

		public NexusZoneConnector <>4__this;

		private TaskAwaiter<ApiResult<List<string>>> <>u__1;

		private void MoveNext()
		{
			//IL_0105: Expected O, but got Unknown
			//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
			//IL_00da: Unknown result type (might be due to invalid IL or missing references)
			//IL_00e2: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_0048: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a3: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a8: Unknown result type (might be due to invalid IL or missing references)
			//IL_0060: Unknown result type (might be due to invalid IL or missing references)
			//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00bf: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			List<string> response;
			try
			{
				TaskAwaiter<ApiResult<List<string>>> val;
				if (num != 0)
				{
					if (String.IsNullOrWhiteSpace(key))
					{
						throw new ArgumentNullException("key");
					}
					if (!key.StartsWith("id."))
					{
						throw new ArgumentException("Key must begin with 'id.'", "key");
					}
					if (String.IsNullOrWhiteSpace(value))
					{
						throw new ArgumentNullException("value");
					}
					val = nexusZoneConnector.GetRequest<List<string>>(String.Concat((string[])(object)new String[5] { nexusZoneConnector._findPlayersWithVariableEndpoint, "?key=", key, "&value=", value })).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<List<string>>>, <FindPlayersWithVariable>d__30>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<List<string>>>);
					num = (<>1__state = -1);
				}
				response = val.GetResult().Response;
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(response);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <GetPlayerDetails>d__15 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<ZonePlayerDetails> <>t__builder;

		public NexusZoneConnector <>4__this;

		public string playerId;

		private TaskAwaiter<ApiResult<ZonePlayerDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_008b: Expected O, but got Unknown
			//IL_005b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0060: Unknown result type (might be due to invalid IL or missing references)
			//IL_0068: Unknown result type (might be due to invalid IL or missing references)
			//IL_0029: Unknown result type (might be due to invalid IL or missing references)
			//IL_002e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0043: Unknown result type (might be due to invalid IL or missing references)
			//IL_0045: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			ZonePlayerDetails response;
			try
			{
				TaskAwaiter<ApiResult<ZonePlayerDetails>> val;
				if (num != 0)
				{
					val = nexusZoneConnector.GetRequest<ZonePlayerDetails>(String.Concat(nexusZoneConnector._getPlayerInfoEndpoint, playerId)).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<ZonePlayerDetails>>, <GetPlayerDetails>d__15>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<ZonePlayerDetails>>);
					num = (<>1__state = -1);
				}
				response = val.GetResult().Response;
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(response);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <GetZoneDetails>d__14 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<ZoneDetails> <>t__builder;

		public NexusZoneConnector <>4__this;

		private TaskAwaiter<ApiResult<ZoneDetails>> <>u__1;

		private void MoveNext()
		{
			//IL_0080: Expected O, but got Unknown
			//IL_0050: Unknown result type (might be due to invalid IL or missing references)
			//IL_0055: Unknown result type (might be due to invalid IL or missing references)
			//IL_005d: Unknown result type (might be due to invalid IL or missing references)
			//IL_001e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0038: Unknown result type (might be due to invalid IL or missing references)
			//IL_003a: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			ZoneDetails response;
			try
			{
				TaskAwaiter<ApiResult<ZoneDetails>> val;
				if (num != 0)
				{
					val = nexusZoneConnector.GetRequest<ZoneDetails>(nexusZoneConnector._getZoneInfoEndpoint).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<ZoneDetails>>, <GetZoneDetails>d__14>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<ZoneDetails>>);
					num = (<>1__state = -1);
				}
				response = val.GetResult().Response;
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(response);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <PlayerLogin>d__16 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder<ZonePlayerLogin> <>t__builder;

		public string playerId;

		public NexusZoneConnector <>4__this;

		private TaskAwaiter<ApiResult<ZonePlayerLogin>> <>u__1;

		private void MoveNext()
		{
			//IL_00a3: Expected O, but got Unknown
			//IL_0073: Unknown result type (might be due to invalid IL or missing references)
			//IL_0078: Unknown result type (might be due to invalid IL or missing references)
			//IL_0080: Unknown result type (might be due to invalid IL or missing references)
			//IL_0041: Unknown result type (might be due to invalid IL or missing references)
			//IL_0046: Unknown result type (might be due to invalid IL or missing references)
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_005b: Unknown result type (might be due to invalid IL or missing references)
			//IL_005d: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			ZonePlayerLogin response;
			try
			{
				TaskAwaiter<ApiResult<ZonePlayerLogin>> val;
				if (num != 0)
				{
					if (String.IsNullOrWhiteSpace(playerId))
					{
						throw new ArgumentNullException("playerId");
					}
					val = nexusZoneConnector.PostRequest<ZonePlayerLogin>(String.Concat(nexusZoneConnector._playerLoginEndpoint, playerId)).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<ZonePlayerLogin>>, <PlayerLogin>d__16>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<ZonePlayerLogin>>);
					num = (<>1__state = -1);
				}
				response = val.GetResult().Response;
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(response);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <RegisterTransfers>d__18 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public string toZone;

		public IEnumerable<string> playerIds;

		public NexusZoneConnector <>4__this;

		private TaskAwaiter<ApiResult<RegisterTransfersResponse>> <>u__1;

		private void MoveNext()
		{
			//IL_00ce: Expected O, but got Unknown
			//IL_00a0: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a5: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ac: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_0070: Unknown result type (might be due to invalid IL or missing references)
			//IL_0075: Unknown result type (might be due to invalid IL or missing references)
			//IL_0039: Unknown result type (might be due to invalid IL or missing references)
			//IL_0089: Unknown result type (might be due to invalid IL or missing references)
			//IL_008a: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				TaskAwaiter<ApiResult<RegisterTransfersResponse>> val;
				if (num != 0)
				{
					if (String.IsNullOrWhiteSpace(toZone))
					{
						throw new ArgumentNullException("toZone");
					}
					if (playerIds == null)
					{
						throw new ArgumentNullException("playerIds");
					}
					val = nexusZoneConnector.PostRequest<RegisterTransfersRequest, RegisterTransfersResponse>(nexusZoneConnector._registerTransferEndpoint, new RegisterTransfersRequest
					{
						PlayerIds = playerIds,
						ToZoneKey = toZone
					}).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult<RegisterTransfersResponse>>, <RegisterTransfers>d__18>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult<RegisterTransfersResponse>>);
					num = (<>1__state = -1);
				}
				val.GetResult().EnsureSuccessfulWithResponse();
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SendMessage>d__20 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public Guid id;

		public string message;

		public NexusZoneConnector <>4__this;

		public string toZone;

		public Nullable<int> ttl;

		public string contentType;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_0102: Expected O, but got Unknown
			//IL_00d4: Unknown result type (might be due to invalid IL or missing references)
			//IL_00d9: Unknown result type (might be due to invalid IL or missing references)
			//IL_00e0: Unknown result type (might be due to invalid IL or missing references)
			//IL_0015: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_002b: Unknown result type (might be due to invalid IL or missing references)
			//IL_006a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0078: Unknown result type (might be due to invalid IL or missing references)
			//IL_009b: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a0: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a4: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a9: Unknown result type (might be due to invalid IL or missing references)
			//IL_0043: Unknown result type (might be due to invalid IL or missing references)
			//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00be: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				ConfiguredTaskAwaiter<ApiResult> val;
				if (num != 0)
				{
					if (id == Guid.Empty)
					{
						throw new ArgumentNullException("id");
					}
					if (String.IsNullOrWhiteSpace(message))
					{
						throw new ArgumentNullException("message");
					}
					val = nexusZoneConnector.PostRequestRawWithoutResponse(String.Format("{0}?toZone={1}&id={2}&ttl={3}", (object[])(object)new Object[4]
					{
						(Object)nexusZoneConnector._messageEndpoint,
						(Object)toZone,
						(object)id,
						(object)ttl
					}), message, contentType).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <SendMessage>d__20>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
					num = (<>1__state = -1);
				}
				val.GetResult().EnsureSuccessful();
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SendMessage>d__21 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public Guid id;

		public System.Memory<byte> message;

		public NexusZoneConnector <>4__this;

		public string toZone;

		public Nullable<int> ttl;

		public string contentType;

		private byte[] <copyBuffer>5__2;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_0164: Expected O, but got Unknown
			//IL_0012: Unknown result type (might be due to invalid IL or missing references)
			//IL_0017: Unknown result type (might be due to invalid IL or missing references)
			//IL_0028: Unknown result type (might be due to invalid IL or missing references)
			//IL_011d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0122: Unknown result type (might be due to invalid IL or missing references)
			//IL_012a: Unknown result type (might be due to invalid IL or missing references)
			//IL_0087: Unknown result type (might be due to invalid IL or missing references)
			//IL_00b3: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c1: Unknown result type (might be due to invalid IL or missing references)
			//IL_00d1: Unknown result type (might be due to invalid IL or missing references)
			//IL_00df: Unknown result type (might be due to invalid IL or missing references)
			//IL_00e4: Unknown result type (might be due to invalid IL or missing references)
			//IL_00e8: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ed: Unknown result type (might be due to invalid IL or missing references)
			//IL_0040: Unknown result type (might be due to invalid IL or missing references)
			//IL_0102: Unknown result type (might be due to invalid IL or missing references)
			//IL_0104: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				if (num != 0)
				{
					if (id == Guid.Empty)
					{
						throw new ArgumentNullException("id");
					}
					if (message.IsEmpty)
					{
						throw new ArgumentNullException("message");
					}
					<copyBuffer>5__2 = ArrayPool<byte>.Shared.Rent(message.Length);
				}
				try
				{
					ConfiguredTaskAwaiter<ApiResult> val2;
					if (num != 0)
					{
						ArraySegment<byte> val = default(ArraySegment<byte>);
						val..ctor(<copyBuffer>5__2, 0, message.Length);
						message.CopyTo(System.Memory<byte>.op_Implicit(val));
						val2 = nexusZoneConnector.PostRequestRawWithoutResponse(String.Format("{0}?toZone={1}&id={2}&ttl={3}", (object[])(object)new Object[4]
						{
							(Object)nexusZoneConnector._messageEndpoint,
							(Object)toZone,
							(object)id,
							(object)ttl
						}), val, contentType).ConfigureAwait(false).GetAwaiter();
						if (!val2.IsCompleted)
						{
							num = (<>1__state = 0);
							<>u__1 = val2;
							((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <SendMessage>d__21>(ref val2, ref this);
							return;
						}
					}
					else
					{
						val2 = <>u__1;
						<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
						num = (<>1__state = -1);
					}
					val2.GetResult().EnsureSuccessful();
				}
				finally
				{
					if (num < 0)
					{
						ArrayPool<byte>.Shared.Return(<copyBuffer>5__2, false);
					}
				}
			}
			catch (Exception val3)
			{
				Exception exception = val3;
				<>1__state = -2;
				<copyBuffer>5__2 = null;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			<copyBuffer>5__2 = null;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SetVariableImpl>d__28 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public string key;

		public string value;

		public bool transient;

		public bool secret;

		public NexusZoneConnector <>4__this;

		public string endpoint;

		private VariableUpdate[] <updateArray>5__2;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_00ff: Expected O, but got Unknown
			//IL_00b8: Unknown result type (might be due to invalid IL or missing references)
			//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c5: Unknown result type (might be due to invalid IL or missing references)
			//IL_0042: Unknown result type (might be due to invalid IL or missing references)
			//IL_004d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_007f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0083: Unknown result type (might be due to invalid IL or missing references)
			//IL_0088: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Unknown result type (might be due to invalid IL or missing references)
			//IL_009f: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				if (num != 0)
				{
					<updateArray>5__2 = ArrayPool<VariableUpdate>.Shared.Rent(1);
				}
				try
				{
					ConfiguredTaskAwaiter<ApiResult> val;
					if (num != 0)
					{
						<updateArray>5__2[0] = new VariableUpdate(key, value, new Nullable<bool>(transient), new Nullable<bool>(secret));
						ArraySegment<VariableUpdate> requestBody = default(ArraySegment<VariableUpdate>);
						requestBody..ctor(<updateArray>5__2, 0, 1);
						val = nexusZoneConnector.PostRequestWithoutResponse<ArraySegment<VariableUpdate>>(endpoint, requestBody).ConfigureAwait(false).GetAwaiter();
						if (!val.IsCompleted)
						{
							num = (<>1__state = 0);
							<>u__1 = val;
							((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <SetVariableImpl>d__28>(ref val, ref this);
							return;
						}
					}
					else
					{
						val = <>u__1;
						<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
						num = (<>1__state = -1);
					}
					val.GetResult().EnsureSuccessful();
				}
				finally
				{
					if (num < 0)
					{
						ArrayPool<VariableUpdate>.Shared.Return(<updateArray>5__2, false);
					}
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<updateArray>5__2 = null;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			<updateArray>5__2 = null;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SetVariableImpl>d__29 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public string key;

		public System.Memory<byte> value;

		public bool transient;

		public bool secret;

		public NexusZoneConnector <>4__this;

		public string endpoint;

		private VariableUpdate[] <updateArray>5__2;

		private ConfiguredTaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_00ff: Expected O, but got Unknown
			//IL_00b8: Unknown result type (might be due to invalid IL or missing references)
			//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c5: Unknown result type (might be due to invalid IL or missing references)
			//IL_0042: Unknown result type (might be due to invalid IL or missing references)
			//IL_004d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_007a: Unknown result type (might be due to invalid IL or missing references)
			//IL_007f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0083: Unknown result type (might be due to invalid IL or missing references)
			//IL_0088: Unknown result type (might be due to invalid IL or missing references)
			//IL_009d: Unknown result type (might be due to invalid IL or missing references)
			//IL_009f: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				if (num != 0)
				{
					<updateArray>5__2 = ArrayPool<VariableUpdate>.Shared.Rent(1);
				}
				try
				{
					ConfiguredTaskAwaiter<ApiResult> val;
					if (num != 0)
					{
						<updateArray>5__2[0] = new VariableUpdate(key, value, new Nullable<bool>(transient), new Nullable<bool>(secret));
						ArraySegment<VariableUpdate> requestBody = default(ArraySegment<VariableUpdate>);
						requestBody..ctor(<updateArray>5__2, 0, 1);
						val = nexusZoneConnector.PostRequestWithoutResponse<ArraySegment<VariableUpdate>>(endpoint, requestBody).ConfigureAwait(false).GetAwaiter();
						if (!val.IsCompleted)
						{
							num = (<>1__state = 0);
							<>u__1 = val;
							((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<ApiResult>, <SetVariableImpl>d__29>(ref val, ref this);
							return;
						}
					}
					else
					{
						val = <>u__1;
						<>u__1 = default(ConfiguredTaskAwaiter<ApiResult>);
						num = (<>1__state = -1);
					}
					val.GetResult().EnsureSuccessful();
				}
				finally
				{
					if (num < 0)
					{
						ArrayPool<VariableUpdate>.Shared.Return(<updateArray>5__2, false);
					}
				}
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<updateArray>5__2 = null;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			<updateArray>5__2 = null;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <UploadMap>d__32 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public string key;

		public byte[] pngMapImage;

		public NexusZoneConnector <>4__this;

		private TaskAwaiter<ApiResult> <>u__1;

		private void MoveNext()
		{
			//IL_00e9: Expected O, but got Unknown
			//IL_00c3: Unknown result type (might be due to invalid IL or missing references)
			//IL_00c8: Unknown result type (might be due to invalid IL or missing references)
			//IL_00cf: Unknown result type (might be due to invalid IL or missing references)
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_0039: Unknown result type (might be due to invalid IL or missing references)
			//IL_0083: Unknown result type (might be due to invalid IL or missing references)
			//IL_0093: Unknown result type (might be due to invalid IL or missing references)
			//IL_0098: Unknown result type (might be due to invalid IL or missing references)
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ac: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ad: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusZoneConnector nexusZoneConnector = <>4__this;
			try
			{
				TaskAwaiter<ApiResult> val;
				if (num != 0)
				{
					if (String.IsNullOrWhiteSpace(key))
					{
						throw new ArgumentNullException("key");
					}
					if (pngMapImage == null)
					{
						throw new ArgumentNullException("pngMapImage");
					}
					if (pngMapImage.Length == 0)
					{
						throw new ArgumentException("Image cannot be empty.", "pngMapImage");
					}
					val = nexusZoneConnector.PostRequestRawWithoutResponse(String.Concat(nexusZoneConnector._mapEndpoint, "?key=", WebUtility.UrlEncode(key)), new ArraySegment<byte>(pngMapImage, 0, pngMapImage.Length), "image/png").GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<TaskAwaiter<ApiResult>, <UploadMap>d__32>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ApiResult>);
					num = (<>1__state = -1);
				}
				val.GetResult();
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	private readonly string _getZoneInfoEndpoint;

	private readonly string _getPlayerInfoEndpoint;

	private readonly string _playerLoginEndpoint;

	private readonly string _assignEndpoint;

	private readonly string _registerTransferEndpoint;

	private readonly string _completeTransferEndpoint;

	private readonly string _messageEndpoint;

	private readonly string _setNexusVariableEndpoint;

	private readonly string _setZoneVariableEndpoint;

	private readonly string _setPlayerVariableEndpoint;

	private readonly string _findPlayersWithVariableEndpoint;

	private readonly string _mapEndpoint;

	private readonly string _clanEndpoint;

	public NexusZoneConnector(INexusLogger logger, string baseUrl, string secretKey)
		: base(logger, baseUrl)
	{
		//IL_014a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0154: Expected O, but got Unknown
		//IL_0015: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(secretKey))
		{
			throw new ArgumentNullException("secretKey");
		}
		_getZoneInfoEndpoint = String.Concat(BaseUrl, "/zone/info");
		_getPlayerInfoEndpoint = String.Concat(BaseUrl, "/zone/player/info?playerId=");
		_playerLoginEndpoint = String.Concat(BaseUrl, "/zone/login?playerId=");
		_assignEndpoint = String.Concat(BaseUrl, "/zone/assign");
		_registerTransferEndpoint = String.Concat(BaseUrl, "/zone/transfer/register");
		_completeTransferEndpoint = String.Concat(BaseUrl, "/zone/transfer/complete");
		_messageEndpoint = String.Concat(BaseUrl, "/zone/message");
		_setNexusVariableEndpoint = String.Concat(BaseUrl, "/zone/variables/nexus");
		_setZoneVariableEndpoint = String.Concat(BaseUrl, "/zone/variables/zone");
		_setPlayerVariableEndpoint = String.Concat(BaseUrl, "/zone/variables/player");
		_findPlayersWithVariableEndpoint = String.Concat(BaseUrl, "/zone/query");
		_mapEndpoint = String.Concat(BaseUrl, "/zone/map");
		_clanEndpoint = String.Concat(BaseUrl, "/zone/clan");
		HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", secretKey);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<ZoneDetails> GetZoneDetails()
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<GetZoneDetails>d__14 <GetZoneDetails>d__ = default(<GetZoneDetails>d__14);
		<GetZoneDetails>d__.<>t__builder = AsyncTaskMethodBuilder<ZoneDetails>.Create();
		<GetZoneDetails>d__.<>4__this = this;
		<GetZoneDetails>d__.<>1__state = -1;
		<GetZoneDetails>d__.<>t__builder.Start<<GetZoneDetails>d__14>(ref <GetZoneDetails>d__);
		return <GetZoneDetails>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<ZonePlayerDetails> GetPlayerDetails(string playerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<GetPlayerDetails>d__15 <GetPlayerDetails>d__ = default(<GetPlayerDetails>d__15);
		<GetPlayerDetails>d__.<>t__builder = AsyncTaskMethodBuilder<ZonePlayerDetails>.Create();
		<GetPlayerDetails>d__.<>4__this = this;
		<GetPlayerDetails>d__.playerId = playerId;
		<GetPlayerDetails>d__.<>1__state = -1;
		<GetPlayerDetails>d__.<>t__builder.Start<<GetPlayerDetails>d__15>(ref <GetPlayerDetails>d__);
		return <GetPlayerDetails>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<ZonePlayerLogin> PlayerLogin(string playerId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<PlayerLogin>d__16 <PlayerLogin>d__ = default(<PlayerLogin>d__16);
		<PlayerLogin>d__.<>t__builder = AsyncTaskMethodBuilder<ZonePlayerLogin>.Create();
		<PlayerLogin>d__.<>4__this = this;
		<PlayerLogin>d__.playerId = playerId;
		<PlayerLogin>d__.<>1__state = -1;
		<PlayerLogin>d__.<>t__builder.Start<<PlayerLogin>d__16>(ref <PlayerLogin>d__);
		return <PlayerLogin>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task Assign(string playerId, string toZone)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<Assign>d__17 <Assign>d__ = default(<Assign>d__17);
		<Assign>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<Assign>d__.<>4__this = this;
		<Assign>d__.playerId = playerId;
		<Assign>d__.toZone = toZone;
		<Assign>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <Assign>d__.<>t__builder)).Start<<Assign>d__17>(ref <Assign>d__);
		return ((AsyncTaskMethodBuilder)(ref <Assign>d__.<>t__builder)).Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task RegisterTransfers(string toZone, IEnumerable<string> playerIds)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<RegisterTransfers>d__18 <RegisterTransfers>d__ = default(<RegisterTransfers>d__18);
		<RegisterTransfers>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<RegisterTransfers>d__.<>4__this = this;
		<RegisterTransfers>d__.toZone = toZone;
		<RegisterTransfers>d__.playerIds = playerIds;
		<RegisterTransfers>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <RegisterTransfers>d__.<>t__builder)).Start<<RegisterTransfers>d__18>(ref <RegisterTransfers>d__);
		return ((AsyncTaskMethodBuilder)(ref <RegisterTransfers>d__.<>t__builder)).Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task CompleteTransfers(IEnumerable<string> playerIds)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<CompleteTransfers>d__19 <CompleteTransfers>d__ = default(<CompleteTransfers>d__19);
		<CompleteTransfers>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<CompleteTransfers>d__.<>4__this = this;
		<CompleteTransfers>d__.playerIds = playerIds;
		<CompleteTransfers>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <CompleteTransfers>d__.<>t__builder)).Start<<CompleteTransfers>d__19>(ref <CompleteTransfers>d__);
		return ((AsyncTaskMethodBuilder)(ref <CompleteTransfers>d__.<>t__builder)).Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task SendMessage(string toZone, Guid id, string message, Nullable<int> ttl, string contentType = "text/plain")
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_001e: Unknown result type (might be due to invalid IL or missing references)
		//IL_001f: Unknown result type (might be due to invalid IL or missing references)
		//IL_002e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0030: Unknown result type (might be due to invalid IL or missing references)
		<SendMessage>d__20 <SendMessage>d__ = default(<SendMessage>d__20);
		<SendMessage>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<SendMessage>d__.<>4__this = this;
		<SendMessage>d__.toZone = toZone;
		<SendMessage>d__.id = id;
		<SendMessage>d__.message = message;
		<SendMessage>d__.ttl = ttl;
		<SendMessage>d__.contentType = contentType;
		<SendMessage>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <SendMessage>d__.<>t__builder)).Start<<SendMessage>d__20>(ref <SendMessage>d__);
		return ((AsyncTaskMethodBuilder)(ref <SendMessage>d__.<>t__builder)).Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task SendMessage(string toZone, Guid id, System.Memory<byte> message, Nullable<int> ttl, string contentType = "application/octet-stream")
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_001e: Unknown result type (might be due to invalid IL or missing references)
		//IL_001f: Unknown result type (might be due to invalid IL or missing references)
		//IL_002e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0030: Unknown result type (might be due to invalid IL or missing references)
		<SendMessage>d__21 <SendMessage>d__ = default(<SendMessage>d__21);
		<SendMessage>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<SendMessage>d__.<>4__this = this;
		<SendMessage>d__.toZone = toZone;
		<SendMessage>d__.id = id;
		<SendMessage>d__.message = message;
		<SendMessage>d__.ttl = ttl;
		<SendMessage>d__.contentType = contentType;
		<SendMessage>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <SendMessage>d__.<>t__builder)).Start<<SendMessage>d__21>(ref <SendMessage>d__);
		return ((AsyncTaskMethodBuilder)(ref <SendMessage>d__.<>t__builder)).Task;
	}

	public Task SetNexusVariable(string key, string value, bool transient, bool secret)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(key))
		{
			throw new ArgumentNullException("key");
		}
		return SetVariableImpl(_setNexusVariableEndpoint, key, value, transient, secret);
	}

	public Task SetNexusVariable(string key, System.Memory<byte> value, bool transient, bool secret)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(key))
		{
			throw new ArgumentNullException("key");
		}
		return SetVariableImpl(_setNexusVariableEndpoint, key, value, transient, secret);
	}

	public Task SetZoneVariable(string key, string value, bool transient, bool secret)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(key))
		{
			throw new ArgumentNullException("key");
		}
		return SetVariableImpl(_setZoneVariableEndpoint, key, value, transient, secret);
	}

	public Task SetZoneVariable(string key, System.Memory<byte> value, bool transient, bool secret)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(key))
		{
			throw new ArgumentNullException("key");
		}
		return SetVariableImpl(_setZoneVariableEndpoint, key, value, transient, secret);
	}

	public Task SetPlayerVariable(string playerId, string key, string value, bool transient, bool secret)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0020: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		if (String.IsNullOrWhiteSpace(key))
		{
			throw new ArgumentNullException("key");
		}
		string endpoint = String.Concat(_setPlayerVariableEndpoint, "?playerId=", playerId);
		return SetVariableImpl(endpoint, key, value, transient, secret);
	}

	public Task SetPlayerVariable(string playerId, string key, System.Memory<byte> value, bool transient, bool secret)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0020: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		if (String.IsNullOrWhiteSpace(key))
		{
			throw new ArgumentNullException("key");
		}
		string endpoint = String.Concat(_setPlayerVariableEndpoint, "?playerId=", playerId);
		return SetVariableImpl(endpoint, key, value, transient, secret);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	private Task SetVariableImpl(string endpoint, string key, string value, bool transient, bool secret)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<SetVariableImpl>d__28 <SetVariableImpl>d__ = default(<SetVariableImpl>d__28);
		<SetVariableImpl>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<SetVariableImpl>d__.<>4__this = this;
		<SetVariableImpl>d__.endpoint = endpoint;
		<SetVariableImpl>d__.key = key;
		<SetVariableImpl>d__.value = value;
		<SetVariableImpl>d__.transient = transient;
		<SetVariableImpl>d__.secret = secret;
		<SetVariableImpl>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <SetVariableImpl>d__.<>t__builder)).Start<<SetVariableImpl>d__28>(ref <SetVariableImpl>d__);
		return ((AsyncTaskMethodBuilder)(ref <SetVariableImpl>d__.<>t__builder)).Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	private Task SetVariableImpl(string endpoint, string key, System.Memory<byte> value, bool transient, bool secret)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<SetVariableImpl>d__29 <SetVariableImpl>d__ = default(<SetVariableImpl>d__29);
		<SetVariableImpl>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<SetVariableImpl>d__.<>4__this = this;
		<SetVariableImpl>d__.endpoint = endpoint;
		<SetVariableImpl>d__.key = key;
		<SetVariableImpl>d__.value = value;
		<SetVariableImpl>d__.transient = transient;
		<SetVariableImpl>d__.secret = secret;
		<SetVariableImpl>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <SetVariableImpl>d__.<>t__builder)).Start<<SetVariableImpl>d__29>(ref <SetVariableImpl>d__);
		return ((AsyncTaskMethodBuilder)(ref <SetVariableImpl>d__.<>t__builder)).Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<List<string>> FindPlayersWithVariable(string key, string value)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<FindPlayersWithVariable>d__30 <FindPlayersWithVariable>d__ = default(<FindPlayersWithVariable>d__30);
		<FindPlayersWithVariable>d__.<>t__builder = AsyncTaskMethodBuilder<List<string>>.Create();
		<FindPlayersWithVariable>d__.<>4__this = this;
		<FindPlayersWithVariable>d__.key = key;
		<FindPlayersWithVariable>d__.value = value;
		<FindPlayersWithVariable>d__.<>1__state = -1;
		<FindPlayersWithVariable>d__.<>t__builder.Start<<FindPlayersWithVariable>d__30>(ref <FindPlayersWithVariable>d__);
		return <FindPlayersWithVariable>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task<ZoneMapCheckResult> CheckUploadedMap()
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<CheckUploadedMap>d__31 <CheckUploadedMap>d__ = default(<CheckUploadedMap>d__31);
		<CheckUploadedMap>d__.<>t__builder = AsyncTaskMethodBuilder<ZoneMapCheckResult>.Create();
		<CheckUploadedMap>d__.<>4__this = this;
		<CheckUploadedMap>d__.<>1__state = -1;
		<CheckUploadedMap>d__.<>t__builder.Start<<CheckUploadedMap>d__31>(ref <CheckUploadedMap>d__);
		return <CheckUploadedMap>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task UploadMap(string key, byte[] pngMapImage)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<UploadMap>d__32 <UploadMap>d__ = default(<UploadMap>d__32);
		<UploadMap>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<UploadMap>d__.<>4__this = this;
		<UploadMap>d__.key = key;
		<UploadMap>d__.pngMapImage = pngMapImage;
		<UploadMap>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <UploadMap>d__.<>t__builder)).Start<<UploadMap>d__32>(ref <UploadMap>d__);
		return ((AsyncTaskMethodBuilder)(ref <UploadMap>d__.<>t__builder)).Task;
	}

	public Task<ApiResult<ClanDetails>> CreateClan(ClanCreateParameters parameters)
	{
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_0036: Unknown result type (might be due to invalid IL or missing references)
		//IL_0054: Unknown result type (might be due to invalid IL or missing references)
		//IL_0072: Unknown result type (might be due to invalid IL or missing references)
		//IL_0090: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(parameters.ClanName))
		{
			throw new ArgumentException("Clan name must be set.", "parameters");
		}
		if (String.IsNullOrWhiteSpace(parameters.ClanNameNormalized))
		{
			throw new ArgumentException("Normalized clan name must be set.", "parameters");
		}
		if (String.IsNullOrWhiteSpace(parameters.LeaderPlayerId))
		{
			throw new ArgumentException("Leader player ID must be set.", "parameters");
		}
		if (String.IsNullOrWhiteSpace(parameters.LeaderRoleName))
		{
			throw new ArgumentException("Leader role name must be set.", "parameters");
		}
		if (String.IsNullOrWhiteSpace(parameters.MemberRoleName))
		{
			throw new ArgumentException("Member role name must be set.", "parameters");
		}
		return PostRequest<ClanCreateParameters, ClanDetails>(_clanEndpoint, parameters);
	}

	public Task<ApiResult<ClanDetails>> GetClan(long clanId)
	{
		return GetRequest<ClanDetails>(String.Format("{0}/{1}", (object)_clanEndpoint, (object)clanId));
	}

	public Task<ApiResult<ClanDetails>> GetClanByMember(string playerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		return GetRequest<ClanDetails>(String.Concat(_clanEndpoint, "?playerId=", playerId));
	}

	public Task<ApiResult> DisbandClan(long clanId, string byPlayerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return DeleteRequestWithoutResponse(String.Format("{0}/{1}?byPlayerId={2}", (object)_clanEndpoint, (object)clanId, (object)byPlayerId));
	}

	public Task<ApiResult<ClanDetails>> UpdateClanVariables(long clanId, ClanVariablesUpdate update)
	{
		return PostRequest<ClanVariablesUpdate, ClanDetails>(String.Format("{0}/{1}/variables", (object)_clanEndpoint, (object)clanId), update);
	}

	public Task<ApiResult<List<ClanLeaderboardEntry>>> GetClanLeaderboard(int limit = 100)
	{
		return GetRequest<List<ClanLeaderboardEntry>>(String.Format("{0}/leaderboard?limit={1}", (object)_clanEndpoint, (object)limit));
	}

	public Task<ApiResult<ClanDetails>> CreateRole(long clanId, ClanRoleParameters parameters, string byPlayerId)
	{
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_002b: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(parameters.Name))
		{
			throw new ArgumentException("Role name must be set.", "parameters");
		}
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return PostRequest<ClanRoleParameters, ClanDetails>(String.Format("{0}/{1}/roles?byPlayerId={2}", (object)_clanEndpoint, (object)clanId, (object)byPlayerId), parameters);
	}

	public Task<ApiResult<ClanDetails>> UpdateRole(long clanId, int roleId, ClanRoleParameters parameters, string byPlayerId)
	{
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return PostRequest<ClanRoleParameters, ClanDetails>(String.Format("{0}/{1}/roles/{2}?byPlayerId={3}", (object[])(object)new Object[4]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(object)roleId,
			(Object)byPlayerId
		}), parameters);
	}

	public Task<ApiResult<ClanDetails>> DeleteRole(long clanId, int roleId, string byPlayerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return DeleteRequest<ClanDetails>(String.Format("{0}/{1}/roles/{2}?byPlayerId={3}", (object[])(object)new Object[4]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(object)roleId,
			(Object)byPlayerId
		}));
	}

	public Task<ApiResult<ClanDetails>> SwapRoleRanks(long clanId, int roleIdA, int roleIdB, string byPlayerId)
	{
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return PostRequest<ClanDetails>(String.Format("{0}/{1}/roles/swap?roleIdA={2}&roleIdB={3}&byPlayerId={4}", (object[])(object)new Object[5]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(object)roleIdA,
			(object)roleIdB,
			(Object)byPlayerId
		}));
	}

	public Task<ApiResult<ClanDetails>> CreateInvite(long clanId, string playerId, string byPlayerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0020: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return PostRequest<ClanDetails>(String.Format("{0}/{1}/invite?playerId={2}&byPlayerId={3}", (object[])(object)new Object[4]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(Object)playerId,
			(Object)byPlayerId
		}));
	}

	public Task<ApiResult<ClanDetails>> AcceptInvite(long clanId, string playerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		return PostRequest<ClanDetails>(String.Format("{0}/{1}/invite/accept?playerId={2}", (object)_clanEndpoint, (object)clanId, (object)playerId));
	}

	public Task<ApiResult<ClanDetails>> CancelInvite(long clanId, string playerId, string byPlayerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0020: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return PostRequest<ClanDetails>(String.Format("{0}/{1}/invite/cancel?playerId={2}&byPlayerId={3}", (object[])(object)new Object[4]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(Object)playerId,
			(Object)byPlayerId
		}));
	}

	public Task<ApiResult<ClanDetails>> Kick(long clanId, string playerId, string byPlayerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0020: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return DeleteRequest<ClanDetails>(String.Format("{0}/{1}/player/{2}?byPlayerId={3}", (object[])(object)new Object[4]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(Object)playerId,
			(Object)byPlayerId
		}));
	}

	public Task<ApiResult<List<ClanInvitation>>> ListInvitations(string playerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		return GetRequest<List<ClanInvitation>>(String.Concat(_clanEndpoint, "/invitations?playerId=", playerId));
	}

	public Task<ApiResult> UpdateLastSeen(long clanId, string playerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		return PostRequestWithoutResponse(String.Format("{0}/{1}/player/{2}/seen", (object)_clanEndpoint, (object)clanId, (object)playerId));
	}

	public Task<ApiResult<ClanDetails>> UpdatePlayerClanVariables(long clanId, string playerId, ClanVariablesUpdate update)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		return PostRequest<ClanVariablesUpdate, ClanDetails>(String.Format("{0}/{1}/player/{2}/variables", (object)_clanEndpoint, (object)clanId, (object)playerId), update);
	}

	public Task<ApiResult<ClanDetails>> SetPlayerRole(long clanId, string playerId, int roleId, string byPlayerId)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0021: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return PostRequest<ClanDetails>(String.Format("{0}/{1}/player/{2}/role?roleId={3}&byPlayerId={4}", (object[])(object)new Object[5]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(Object)playerId,
			(object)roleId,
			(Object)byPlayerId
		}));
	}

	public Task<ApiResult<List<ClanLogEntry>>> GetClanLogs(long clanId, string byPlayerId, int limit = 100)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return GetRequest<List<ClanLogEntry>>(String.Format("{0}/{1}/logs?byPlayerId={2}&limit={3}", (object[])(object)new Object[4]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(Object)byPlayerId,
			(object)limit
		}));
	}

	public Task<ApiResult> AddClanLog(long clanId, string eventKey, string arg1 = null, string arg2 = null, string arg3 = null, string arg4 = null)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(eventKey))
		{
			throw new ArgumentNullException("eventKey");
		}
		return PostRequestWithoutResponse(String.Format("{0}/{1}/logs", (object)_clanEndpoint, (object)clanId), new NewClanLogEntry
		{
			EventKey = eventKey,
			Arg1 = arg1,
			Arg2 = arg2,
			Arg3 = arg3,
			Arg4 = arg4
		});
	}

	public Task<ApiResult<List<ClanScoreEventEntry>>> GetClanScoreEvents(long clanId, string byPlayerId, int limit = 100)
	{
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		if (String.IsNullOrWhiteSpace(byPlayerId))
		{
			throw new ArgumentNullException("byPlayerId");
		}
		return GetRequest<List<ClanScoreEventEntry>>(String.Format("{0}/{1}/scoreEvents?byPlayerId={2}&limit={3}", (object[])(object)new Object[4]
		{
			(Object)_clanEndpoint,
			(object)clanId,
			(Object)byPlayerId,
			(object)limit
		}));
	}

	public Task<ApiResult> AddClanScoreEvent(long clanId, NewClanScoreEventEntry entry)
	{
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		//IL_002c: Unknown result type (might be due to invalid IL or missing references)
		if (entry.Score == 0)
		{
			throw new ArgumentException("Score cannot be zero.", "entry");
		}
		if (entry.Multiplier == 0)
		{
			throw new ArgumentException("Multiplier cannot be zero.", "entry");
		}
		return PostRequestWithoutResponse(String.Format("{0}/{1}/scoreEvents", (object)_clanEndpoint, (object)clanId), entry);
	}

	public Task<ApiResult> AddClanScoreEventBatch(List<NewClanScoreEventBatchEntry> entries)
	{
		//IL_0008: Unknown result type (might be due to invalid IL or missing references)
		//IL_0027: Unknown result type (might be due to invalid IL or missing references)
		//IL_002c: Unknown result type (might be due to invalid IL or missing references)
		//IL_004a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0063: Unknown result type (might be due to invalid IL or missing references)
		if (entries == null)
		{
			throw new ArgumentNullException("entries");
		}
		if (entries.Count == 0)
		{
			return Task.FromResult<ApiResult>(new ApiResult((HttpStatusCode)204));
		}
		Enumerator<NewClanScoreEventBatchEntry> enumerator = entries.GetEnumerator();
		try
		{
			while (enumerator.MoveNext())
			{
				NewClanScoreEventBatchEntry current = enumerator.Current;
				if (current.Score == 0)
				{
					throw new ArgumentException("Score cannot be zero.", "entry");
				}
				if (current.Multiplier == 0)
				{
					throw new ArgumentException("Multiplier cannot be zero.", "entry");
				}
			}
		}
		finally
		{
			((IDisposable)enumerator/*cast due to .constrained prefix*/).Dispose();
		}
		return PostRequestWithoutResponse<List<NewClanScoreEventBatchEntry>>(String.Concat(_clanEndpoint, "/scoreEventsBatch"), entries);
	}
}
