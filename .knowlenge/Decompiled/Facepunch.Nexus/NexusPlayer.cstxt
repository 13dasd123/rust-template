using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using Facepunch.Nexus;
using Facepunch.Nexus.Connector;
using Facepunch.Nexus.Logging;
using Facepunch.Nexus.Models;
using Facepunch.Nexus.Time;

public class NexusPlayer : Object
{
	[StructLayout(3)]
	[CompilerGenerated]
	private struct <Refresh>d__21 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public NexusPlayer <>4__this;

		private TaskAwaiter<ZonePlayerDetails> <>u__1;

		private void MoveNext()
		{
			//IL_0091: Expected O, but got Unknown
			//IL_0052: Unknown result type (might be due to invalid IL or missing references)
			//IL_0057: Unknown result type (might be due to invalid IL or missing references)
			//IL_005e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0022: Unknown result type (might be due to invalid IL or missing references)
			//IL_0027: Unknown result type (might be due to invalid IL or missing references)
			//IL_003b: Unknown result type (might be due to invalid IL or missing references)
			//IL_003c: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusPlayer nexusPlayer = <>4__this;
			try
			{
				TaskAwaiter<ZonePlayerDetails> val;
				if (num != 0)
				{
					val = nexusPlayer._zoneConnector.GetPlayerDetails(nexusPlayer.PlayerId).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<TaskAwaiter<ZonePlayerDetails>, <Refresh>d__21>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(TaskAwaiter<ZonePlayerDetails>);
					num = (<>1__state = -1);
				}
				ZonePlayerDetails result = val.GetResult();
				nexusPlayer.UpdateZone(result.AssignedZoneKey);
				nexusPlayer.UpdateVariables(result.Variables);
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <RefreshInBackground>d__20 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncVoidMethodBuilder <>t__builder;

		public NexusPlayer <>4__this;

		private TaskAwaiter <>u__1;

		private void MoveNext()
		{
			//IL_006f: Expected O, but got Unknown
			//IL_0091: Expected O, but got Unknown
			//IL_004a: Unknown result type (might be due to invalid IL or missing references)
			//IL_004f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0056: Unknown result type (might be due to invalid IL or missing references)
			//IL_001a: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0033: Unknown result type (might be due to invalid IL or missing references)
			//IL_0034: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusPlayer nexusPlayer = <>4__this;
			try
			{
				try
				{
					TaskAwaiter val;
					if (num != 0)
					{
						val = nexusPlayer.Refresh().GetAwaiter();
						if (!((TaskAwaiter)(ref val)).IsCompleted)
						{
							num = (<>1__state = 0);
							<>u__1 = val;
							((AsyncVoidMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<TaskAwaiter, <RefreshInBackground>d__20>(ref val, ref this);
							return;
						}
					}
					else
					{
						val = <>u__1;
						<>u__1 = default(TaskAwaiter);
						num = (<>1__state = -1);
					}
					((TaskAwaiter)(ref val)).GetResult();
				}
				catch (Exception val2)
				{
					Exception exception = val2;
					nexusPlayer._logger.LogError(String.Concat("Failed to refresh player ", nexusPlayer.PlayerId), exception);
				}
			}
			catch (Exception val3)
			{
				Exception exception2 = val3;
				<>1__state = -2;
				((AsyncVoidMethodBuilder)(ref <>t__builder)).SetException(exception2);
				return;
			}
			<>1__state = -2;
			((AsyncVoidMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncVoidMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SetVariable>d__15 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public NexusPlayer <>4__this;

		public string key;

		public string value;

		public bool isTransient;

		public bool isSecret;

		private ConfiguredTaskAwaiter <>u__1;

		private void MoveNext()
		{
			//IL_00db: Expected O, but got Unknown
			//IL_009d: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a2: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a9: Unknown result type (might be due to invalid IL or missing references)
			//IL_0064: Unknown result type (might be due to invalid IL or missing references)
			//IL_0069: Unknown result type (might be due to invalid IL or missing references)
			//IL_006d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_0086: Unknown result type (might be due to invalid IL or missing references)
			//IL_0087: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusPlayer nexusPlayer = <>4__this;
			try
			{
				ConfiguredTaskAwaiter val;
				if (num == 0)
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter);
					num = (<>1__state = -1);
					goto IL_00b8;
				}
				if (!nexusPlayer._variables.TryGet(key, out var variable) || variable != value)
				{
					ConfiguredTaskAwaitable val2 = nexusPlayer._zoneConnector.SetPlayerVariable(nexusPlayer.PlayerId, key, value, isTransient, isSecret).ConfigureAwait(false);
					val = ((ConfiguredTaskAwaitable)(ref val2)).GetAwaiter();
					if (!((ConfiguredTaskAwaiter)(ref val)).IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter, <SetVariable>d__15>(ref val, ref this);
						return;
					}
					goto IL_00b8;
				}
				goto end_IL_000e;
				IL_00b8:
				((ConfiguredTaskAwaiter)(ref val)).GetResult();
				nexusPlayer._variables.Set(key, value);
				end_IL_000e:;
			}
			catch (Exception val3)
			{
				Exception exception = val3;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <SetVariable>d__16 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncTaskMethodBuilder <>t__builder;

		public NexusPlayer <>4__this;

		public string key;

		public byte[] value;

		public bool isTransient;

		public bool isSecret;

		private ConfiguredTaskAwaiter <>u__1;

		private void MoveNext()
		{
			//IL_00e0: Expected O, but got Unknown
			//IL_00a2: Unknown result type (might be due to invalid IL or missing references)
			//IL_00a7: Unknown result type (might be due to invalid IL or missing references)
			//IL_00ae: Unknown result type (might be due to invalid IL or missing references)
			//IL_0069: Unknown result type (might be due to invalid IL or missing references)
			//IL_006e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_0077: Unknown result type (might be due to invalid IL or missing references)
			//IL_008b: Unknown result type (might be due to invalid IL or missing references)
			//IL_008c: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusPlayer nexusPlayer = <>4__this;
			try
			{
				ConfiguredTaskAwaiter val;
				if (num == 0)
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter);
					num = (<>1__state = -1);
					goto IL_00bd;
				}
				if (!nexusPlayer._variables.TryGet(key, out var variable) || variable != value)
				{
					ConfiguredTaskAwaitable val2 = nexusPlayer._zoneConnector.SetPlayerVariable(nexusPlayer.PlayerId, key, System.Memory<byte>.op_Implicit(value), isTransient, isSecret).ConfigureAwait(false);
					val = ((ConfiguredTaskAwaitable)(ref val2)).GetAwaiter();
					if (!((ConfiguredTaskAwaiter)(ref val)).IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						((AsyncTaskMethodBuilder)(ref <>t__builder)).AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter, <SetVariable>d__16>(ref val, ref this);
						return;
					}
					goto IL_00bd;
				}
				goto end_IL_000e;
				IL_00bd:
				((ConfiguredTaskAwaiter)(ref val)).GetResult();
				nexusPlayer._variables.Set(key, value);
				end_IL_000e:;
			}
			catch (Exception val3)
			{
				Exception exception = val3;
				<>1__state = -2;
				((AsyncTaskMethodBuilder)(ref <>t__builder)).SetException(exception);
				return;
			}
			<>1__state = -2;
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetResult();
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			((AsyncTaskMethodBuilder)(ref <>t__builder)).SetStateMachine(stateMachine);
		}
	}

	private const double RefreshInterval = 120.0;

	private readonly INexusLogger _logger;

	private readonly INexusZoneConnector _zoneConnector;

	private readonly IClockProvider _clockProvider;

	private readonly VariableContainer _variables;

	private double _lastRefreshed;

	[field: CompilerGenerated]
	public string PlayerId
	{
		[CompilerGenerated]
		get;
	}

	[field: CompilerGenerated]
	public string AssignedZoneKey
	{
		[CompilerGenerated]
		get;
		[CompilerGenerated]
		private set;
	}

	public IEnumerable<KeyValuePair<string, Variable>> Variables => _variables;

	internal NexusPlayer(INexusLogger logger, INexusZoneConnector zoneConnector, IClockProvider clockProvider, string playerId)
	{
		//IL_0011: Unknown result type (might be due to invalid IL or missing references)
		//IL_0027: Unknown result type (might be due to invalid IL or missing references)
		//IL_003d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0072: Unknown result type (might be due to invalid IL or missing references)
		_logger = logger ?? throw new ArgumentNullException("logger");
		_zoneConnector = zoneConnector ?? throw new ArgumentNullException("zoneConnector");
		_clockProvider = clockProvider ?? throw new ArgumentNullException("clockProvider");
		_variables = new VariableContainer();
		_lastRefreshed = _clockProvider.Timestamp;
		if (String.IsNullOrWhiteSpace(playerId))
		{
			throw new ArgumentNullException("playerId");
		}
		PlayerId = playerId;
	}

	public bool TryGetVariable(string key, out Variable variable)
	{
		return _variables.TryGet(key, out variable);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task SetVariable(string key, string value, bool isTransient = true, bool isSecret = true)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<SetVariable>d__15 <SetVariable>d__ = default(<SetVariable>d__15);
		<SetVariable>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<SetVariable>d__.<>4__this = this;
		<SetVariable>d__.key = key;
		<SetVariable>d__.value = value;
		<SetVariable>d__.isTransient = isTransient;
		<SetVariable>d__.isSecret = isSecret;
		<SetVariable>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <SetVariable>d__.<>t__builder)).Start<<SetVariable>d__15>(ref <SetVariable>d__);
		return ((AsyncTaskMethodBuilder)(ref <SetVariable>d__.<>t__builder)).Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public Task SetVariable(string key, byte[] value, bool isTransient = true, bool isSecret = true)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<SetVariable>d__16 <SetVariable>d__ = default(<SetVariable>d__16);
		<SetVariable>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<SetVariable>d__.<>4__this = this;
		<SetVariable>d__.key = key;
		<SetVariable>d__.value = value;
		<SetVariable>d__.isTransient = isTransient;
		<SetVariable>d__.isSecret = isSecret;
		<SetVariable>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <SetVariable>d__.<>t__builder)).Start<<SetVariable>d__16>(ref <SetVariable>d__);
		return ((AsyncTaskMethodBuilder)(ref <SetVariable>d__.<>t__builder)).Task;
	}

	internal void RefreshIfNeeded()
	{
		double timestamp = _clockProvider.Timestamp;
		if (timestamp - _lastRefreshed > 120.0)
		{
			_lastRefreshed = timestamp;
			RefreshInBackground();
		}
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	internal void RefreshInBackground()
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<RefreshInBackground>d__20 <RefreshInBackground>d__ = default(<RefreshInBackground>d__20);
		<RefreshInBackground>d__.<>t__builder = AsyncVoidMethodBuilder.Create();
		<RefreshInBackground>d__.<>4__this = this;
		<RefreshInBackground>d__.<>1__state = -1;
		((AsyncVoidMethodBuilder)(ref <RefreshInBackground>d__.<>t__builder)).Start<<RefreshInBackground>d__20>(ref <RefreshInBackground>d__);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	internal Task Refresh()
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<Refresh>d__21 <Refresh>d__ = default(<Refresh>d__21);
		<Refresh>d__.<>t__builder = AsyncTaskMethodBuilder.Create();
		<Refresh>d__.<>4__this = this;
		<Refresh>d__.<>1__state = -1;
		((AsyncTaskMethodBuilder)(ref <Refresh>d__.<>t__builder)).Start<<Refresh>d__21>(ref <Refresh>d__);
		return ((AsyncTaskMethodBuilder)(ref <Refresh>d__.<>t__builder)).Task;
	}

	internal void UpdateZone(string assignedZoneKey)
	{
		AssignedZoneKey = assignedZoneKey;
	}

	internal void UpdateVariables(Dictionary<string, VariableData> variables)
	{
		_variables.UpdateFromModel(variables);
	}
}
