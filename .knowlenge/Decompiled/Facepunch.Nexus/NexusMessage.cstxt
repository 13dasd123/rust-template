using System;
using System.Runtime.CompilerServices;
using Facepunch.Nexus;

public readonly struct NexusMessage : ValueType
{
	private readonly string _stringData;

	private readonly byte[] _binaryData;

	[field: CompilerGenerated]
	internal string MessageId
	{
		[CompilerGenerated]
		get;
	}

	[field: CompilerGenerated]
	public Uuid Id
	{
		[CompilerGenerated]
		get;
	}

	[field: CompilerGenerated]
	public string ContentType
	{
		[CompilerGenerated]
		get;
	}

	public bool IsString => _stringData != null;

	public bool IsBinary => _binaryData != null;

	public string AsString => _stringData ?? throw new InvalidOperationException("Message is not text");

	public byte[] AsBinary => _binaryData ?? throw new InvalidOperationException("Message is not binary");

	internal NexusMessage(string messageId, Guid id, string contentType, string data)
	{
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_002d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0044: Unknown result type (might be due to invalid IL or missing references)
		MessageId = messageId ?? throw new ArgumentNullException("messageId");
		Id = id;
		ContentType = contentType ?? throw new ArgumentNullException("contentType");
		_stringData = data ?? throw new ArgumentNullException("data");
		_binaryData = null;
	}

	internal NexusMessage(string messageId, Guid id, string contentType, byte[] data)
	{
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_002d: Unknown result type (might be due to invalid IL or missing references)
		//IL_004b: Unknown result type (might be due to invalid IL or missing references)
		MessageId = messageId ?? throw new ArgumentNullException("messageId");
		Id = id;
		ContentType = contentType ?? throw new ArgumentNullException("contentType");
		_stringData = null;
		_binaryData = data ?? throw new ArgumentNullException("data");
	}
}
