using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using Facepunch.Nexus;
using Facepunch.Nexus.Connector;
using Facepunch.Nexus.Logging;
using Facepunch.Nexus.Models;
using Facepunch.Nexus.Time;

public class NexusAnonymousClient : Object
{
	[StructLayout(3)]
	[CompilerGenerated]
	private struct <GetNexusDetails>d__6 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncValueTaskMethodBuilder<NexusDetails> <>t__builder;

		public int nexusId;

		public NexusAnonymousClient <>4__this;

		private ConfiguredTaskAwaiter<NexusDetails> <>u__1;

		private void MoveNext()
		{
			//IL_00d7: Expected O, but got Unknown
			//IL_008a: Unknown result type (might be due to invalid IL or missing references)
			//IL_008f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0097: Unknown result type (might be due to invalid IL or missing references)
			//IL_001f: Unknown result type (might be due to invalid IL or missing references)
			//IL_004f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0054: Unknown result type (might be due to invalid IL or missing references)
			//IL_0058: Unknown result type (might be due to invalid IL or missing references)
			//IL_005d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0072: Unknown result type (might be due to invalid IL or missing references)
			//IL_0074: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusAnonymousClient nexusAnonymousClient = <>4__this;
			NexusDetails result;
			try
			{
				NexusDetails value;
				ConfiguredTaskAwaiter<NexusDetails> val;
				if (num != 0)
				{
					if (nexusId <= 0)
					{
						throw new ArgumentOutOfRangeException("nexusId");
					}
					if (nexusAnonymousClient._cachedNexusDetails.TryGetValue(in nexusId, out value))
					{
						goto IL_00d1;
					}
					val = nexusAnonymousClient._connector.GetNexus(nexusId).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<NexusDetails>, <GetNexusDetails>d__6>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<NexusDetails>);
					num = (<>1__state = -1);
				}
				NexusDetails value2 = val.GetResult();
				value = nexusAnonymousClient._cachedNexusDetails.Update(in nexusId, in value2);
				nexusAnonymousClient.OnNexusDetailsUpdated(nexusId, value);
				goto IL_00d1;
				IL_00d1:
				result = value;
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	[StructLayout(3)]
	[CompilerGenerated]
	private struct <GetNexusList>d__5 : ValueType, IAsyncStateMachine
	{
		public int <>1__state;

		public AsyncValueTaskMethodBuilder<IEnumerable<Nexus>> <>t__builder;

		public NexusAnonymousClient <>4__this;

		public string publicKey;

		public NexusRealm realm;

		private ConfiguredTaskAwaiter<NexusListing> <>u__1;

		private void MoveNext()
		{
			//IL_00b9: Expected O, but got Unknown
			//IL_0076: Unknown result type (might be due to invalid IL or missing references)
			//IL_007b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0083: Unknown result type (might be due to invalid IL or missing references)
			//IL_003b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0040: Unknown result type (might be due to invalid IL or missing references)
			//IL_0044: Unknown result type (might be due to invalid IL or missing references)
			//IL_0049: Unknown result type (might be due to invalid IL or missing references)
			//IL_005e: Unknown result type (might be due to invalid IL or missing references)
			//IL_0060: Unknown result type (might be due to invalid IL or missing references)
			int num = <>1__state;
			NexusAnonymousClient nexusAnonymousClient = <>4__this;
			IEnumerable<Nexus> result2;
			try
			{
				List<Nexus> value;
				ConfiguredTaskAwaiter<NexusListing> val;
				if (num != 0)
				{
					if (nexusAnonymousClient._cachedNexusList.TryGetValue(out value))
					{
						goto IL_00b3;
					}
					val = nexusAnonymousClient._connector.ListNexuses(publicKey, realm).ConfigureAwait(false).GetAwaiter();
					if (!val.IsCompleted)
					{
						num = (<>1__state = 0);
						<>u__1 = val;
						<>t__builder.AwaitUnsafeOnCompleted<ConfiguredTaskAwaiter<NexusListing>, <GetNexusList>d__5>(ref val, ref this);
						return;
					}
				}
				else
				{
					val = <>u__1;
					<>u__1 = default(ConfiguredTaskAwaiter<NexusListing>);
					num = (<>1__state = -1);
				}
				NexusListing result = val.GetResult();
				value = nexusAnonymousClient._cachedNexusList.Update(result.Nexuses);
				goto IL_00b3;
				IL_00b3:
				result2 = (IEnumerable<Nexus>)(object)value;
			}
			catch (Exception val2)
			{
				Exception exception = val2;
				<>1__state = -2;
				<>t__builder.SetException(exception);
				return;
			}
			<>1__state = -2;
			<>t__builder.SetResult(result2);
		}

		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
			<>t__builder.SetStateMachine(stateMachine);
		}
	}

	private readonly INexusConnector _connector;

	private readonly CachedValue<List<Nexus>> _cachedNexusList;

	private readonly CachedValue<int, NexusDetails> _cachedNexusDetails;

	public NexusAnonymousClient(INexusLogger logger, IClockProvider clock, string baseUrl)
		: this(new NexusConnector(logger, baseUrl), clock)
	{
	}

	internal NexusAnonymousClient(INexusConnector connector, IClockProvider clock)
	{
		//IL_0011: Unknown result type (might be due to invalid IL or missing references)
		_connector = connector ?? throw new ArgumentNullException("connector");
		_cachedNexusList = new CachedValue<List<Nexus>>(clock);
		_cachedNexusDetails = new CachedValue<int, NexusDetails>(clock);
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public System.Threading.Tasks.ValueTask<IEnumerable<Nexus>> GetNexusList(string publicKey, NexusRealm realm)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<GetNexusList>d__5 <GetNexusList>d__ = default(<GetNexusList>d__5);
		<GetNexusList>d__.<>t__builder = AsyncValueTaskMethodBuilder<IEnumerable<Nexus>>.Create();
		<GetNexusList>d__.<>4__this = this;
		<GetNexusList>d__.publicKey = publicKey;
		<GetNexusList>d__.realm = realm;
		<GetNexusList>d__.<>1__state = -1;
		<GetNexusList>d__.<>t__builder.Start<<GetNexusList>d__5>(ref <GetNexusList>d__);
		return <GetNexusList>d__.<>t__builder.Task;
	}

	[AsyncStateMachine(/*Could not decode attribute arguments.*/)]
	public System.Threading.Tasks.ValueTask<NexusDetails> GetNexusDetails(int nexusId)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		<GetNexusDetails>d__6 <GetNexusDetails>d__ = default(<GetNexusDetails>d__6);
		<GetNexusDetails>d__.<>t__builder = AsyncValueTaskMethodBuilder<NexusDetails>.Create();
		<GetNexusDetails>d__.<>4__this = this;
		<GetNexusDetails>d__.nexusId = nexusId;
		<GetNexusDetails>d__.<>1__state = -1;
		<GetNexusDetails>d__.<>t__builder.Start<<GetNexusDetails>d__6>(ref <GetNexusDetails>d__);
		return <GetNexusDetails>d__.<>t__builder.Task;
	}

	protected virtual void OnNexusDetailsUpdated(int nexusId, NexusDetails details)
	{
	}
}
