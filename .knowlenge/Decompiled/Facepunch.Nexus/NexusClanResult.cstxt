using System;
using System.Runtime.CompilerServices;
using Facepunch.Nexus;

public readonly struct NexusClanResult<T> : ValueType
{
	private readonly T _response;

	private readonly bool _hasResponse;

	public NexusClanResultCode ResultCode
	{
		[CompilerGenerated]
		get;
	}

	public bool IsSuccess => ResultCode == NexusClanResultCode.Success;

	internal NexusClanResult(NexusClanResultCode resultCode)
	{
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		if (resultCode == NexusClanResultCode.Success)
		{
			throw new ArgumentOutOfRangeException("resultCode", "Cannot build a successful NexusClanResult<T> without a response.");
		}
		ResultCode = resultCode;
		_response = default(T);
		_hasResponse = false;
	}

	internal NexusClanResult(T response)
	{
		ResultCode = NexusClanResultCode.Success;
		_response = response;
		_hasResponse = true;
	}

	public bool TryGetResponse(out T response)
	{
		if (IsSuccess && _hasResponse)
		{
			response = _response;
			return true;
		}
		response = default(T);
		return false;
	}
}
