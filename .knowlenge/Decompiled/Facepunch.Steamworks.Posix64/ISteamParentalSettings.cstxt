using System;
using System.Runtime.InteropServices;
using Steamworks;

internal class ISteamParentalSettings : SteamInterface
{
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	[return: MarshalAs(UnmanagedType.I1)]
	private delegate bool FBIsParentalLockEnabled(IntPtr self);

	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	[return: MarshalAs(UnmanagedType.I1)]
	private delegate bool FBIsParentalLockLocked(IntPtr self);

	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	[return: MarshalAs(UnmanagedType.I1)]
	private delegate bool FBIsAppBlocked(IntPtr self, AppId nAppID);

	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	[return: MarshalAs(UnmanagedType.I1)]
	private delegate bool FBIsAppInBlockList(IntPtr self, AppId nAppID);

	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	[return: MarshalAs(UnmanagedType.I1)]
	private delegate bool FBIsFeatureBlocked(IntPtr self, ParentalFeature eFeature);

	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	[return: MarshalAs(UnmanagedType.I1)]
	private delegate bool FBIsFeatureInBlockList(IntPtr self, ParentalFeature eFeature);

	private FBIsParentalLockEnabled _BIsParentalLockEnabled;

	private FBIsParentalLockLocked _BIsParentalLockLocked;

	private FBIsAppBlocked _BIsAppBlocked;

	private FBIsAppInBlockList _BIsAppInBlockList;

	private FBIsFeatureBlocked _BIsFeatureBlocked;

	private FBIsFeatureInBlockList _BIsFeatureInBlockList;

	public override string InterfaceName => "STEAMPARENTALSETTINGS_INTERFACE_VERSION001";

	public override void InitInternals()
	{
		_BIsParentalLockEnabled = Marshal.GetDelegateForFunctionPointer<FBIsParentalLockEnabled>(Marshal.ReadIntPtr(VTable, Platform.MemoryOffset(0)));
		_BIsParentalLockLocked = Marshal.GetDelegateForFunctionPointer<FBIsParentalLockLocked>(Marshal.ReadIntPtr(VTable, Platform.MemoryOffset(8)));
		_BIsAppBlocked = Marshal.GetDelegateForFunctionPointer<FBIsAppBlocked>(Marshal.ReadIntPtr(VTable, Platform.MemoryOffset(16)));
		_BIsAppInBlockList = Marshal.GetDelegateForFunctionPointer<FBIsAppInBlockList>(Marshal.ReadIntPtr(VTable, Platform.MemoryOffset(24)));
		_BIsFeatureBlocked = Marshal.GetDelegateForFunctionPointer<FBIsFeatureBlocked>(Marshal.ReadIntPtr(VTable, Platform.MemoryOffset(32)));
		_BIsFeatureInBlockList = Marshal.GetDelegateForFunctionPointer<FBIsFeatureInBlockList>(Marshal.ReadIntPtr(VTable, Platform.MemoryOffset(40)));
	}

	internal override void Shutdown()
	{
		base.Shutdown();
		_BIsParentalLockEnabled = null;
		_BIsParentalLockLocked = null;
		_BIsAppBlocked = null;
		_BIsAppInBlockList = null;
		_BIsFeatureBlocked = null;
		_BIsFeatureInBlockList = null;
	}

	internal bool BIsParentalLockEnabled()
	{
		return _BIsParentalLockEnabled(Self);
	}

	internal bool BIsParentalLockLocked()
	{
		return _BIsParentalLockLocked(Self);
	}

	internal bool BIsAppBlocked(AppId nAppID)
	{
		return _BIsAppBlocked(Self, nAppID);
	}

	internal bool BIsAppInBlockList(AppId nAppID)
	{
		return _BIsAppInBlockList(Self, nAppID);
	}

	internal bool BIsFeatureBlocked(ParentalFeature eFeature)
	{
		return _BIsFeatureBlocked(Self, eFeature);
	}

	internal bool BIsFeatureInBlockList(ParentalFeature eFeature)
	{
		return _BIsFeatureInBlockList(Self, eFeature);
	}
}
