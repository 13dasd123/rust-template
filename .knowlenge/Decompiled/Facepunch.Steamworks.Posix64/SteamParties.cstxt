using System;
using System.Collections.Generic;
using Steamworks;
using Steamworks.Data;

public static class SteamParties
{
	private static ISteamParties _internal;

	internal static ISteamParties Internal
	{
		get
		{
			if (_internal == null)
			{
				_internal = new ISteamParties();
				_internal.Init();
			}
			return _internal;
		}
	}

	public static int ActiveBeaconCount => (int)Internal.GetNumActiveBeacons();

	public static IEnumerable<PartyBeacon> ActiveBeacons
	{
		get
		{
			for (uint i = 0u; i < ActiveBeaconCount; i++)
			{
				yield return new PartyBeacon
				{
					Id = Internal.GetBeaconByIndex(i)
				};
			}
		}
	}

	public static event Action OnBeaconLocationsUpdated;

	public static event Action OnActiveBeaconsUpdated;

	internal static void Shutdown()
	{
		_internal = null;
	}

	internal static void InstallEvents()
	{
		AvailableBeaconLocationsUpdated_t.Install(delegate
		{
			SteamParties.OnBeaconLocationsUpdated?.Invoke();
		});
		ActiveBeaconsUpdated_t.Install(delegate
		{
			SteamParties.OnActiveBeaconsUpdated?.Invoke();
		});
	}
}
