using System;
using Steamworks;
using Steamworks.Data;

public static class SteamVideo
{
	private static ISteamVideo _internal;

	internal static ISteamVideo Internal
	{
		get
		{
			if (_internal == null)
			{
				_internal = new ISteamVideo();
				_internal.Init();
			}
			return _internal;
		}
	}

	public static bool IsBroadcasting
	{
		get
		{
			int pnNumViewers = 0;
			return Internal.IsBroadcasting(ref pnNumViewers);
		}
	}

	public static int NumViewers
	{
		get
		{
			int pnNumViewers = 0;
			if (!Internal.IsBroadcasting(ref pnNumViewers))
			{
				return 0;
			}
			return pnNumViewers;
		}
	}

	public static event Action OnBroadcastStarted;

	public static event Action<BroadcastUploadResult> OnBroadcastStopped;

	internal static void Shutdown()
	{
		_internal = null;
	}

	internal static void InstallEvents()
	{
		BroadcastUploadStart_t.Install(delegate
		{
			SteamVideo.OnBroadcastStarted?.Invoke();
		});
		BroadcastUploadStop_t.Install(delegate(BroadcastUploadStop_t x)
		{
			SteamVideo.OnBroadcastStopped?.Invoke(x.Result);
		});
	}
}
