using System;
using Steamworks;
using Steamworks.Data;

public static class SteamMusic
{
	private static ISteamMusic _internal;

	internal static ISteamMusic Internal
	{
		get
		{
			if (_internal == null)
			{
				_internal = new ISteamMusic();
				_internal.Init();
			}
			return _internal;
		}
	}

	public static bool IsEnabled => Internal.BIsEnabled();

	public static bool IsPlaying => Internal.BIsPlaying();

	public static MusicStatus Status => Internal.GetPlaybackStatus();

	public static float Volume
	{
		get
		{
			return Internal.GetVolume();
		}
		set
		{
			Internal.SetVolume(value);
		}
	}

	public static event Action OnPlaybackChanged;

	public static event Action<float> OnVolumeChanged;

	internal static void Shutdown()
	{
		_internal = null;
	}

	internal static void InstallEvents()
	{
		PlaybackStatusHasChanged_t.Install(delegate
		{
			SteamMusic.OnPlaybackChanged?.Invoke();
		});
		VolumeHasChanged_t.Install(delegate(VolumeHasChanged_t x)
		{
			SteamMusic.OnVolumeChanged?.Invoke(x.NewVolume);
		});
	}

	public static void Play()
	{
		Internal.Play();
	}

	public static void Pause()
	{
		Internal.Pause();
	}

	public static void PlayPrevious()
	{
		Internal.PlayPrevious();
	}

	public static void PlayNext()
	{
		Internal.PlayNext();
	}
}
