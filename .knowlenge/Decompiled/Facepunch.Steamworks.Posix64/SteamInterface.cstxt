using System;
using System.Runtime.InteropServices;
using Steamworks;
using Steamworks.Data;

internal abstract class SteamInterface
{
	public IntPtr Self;

	public IntPtr VTable;

	public virtual string InterfaceName => null;

	public bool IsValid => Self != IntPtr.Zero && VTable != IntPtr.Zero;

	public void Init()
	{
		if (SteamClient.IsValid)
		{
			InitClient();
			return;
		}
		if (SteamServer.IsValid)
		{
			InitServer();
			return;
		}
		throw new Exception("Trying to initialize Steam Interface but Steam not initialized");
	}

	public void InitClient()
	{
		Self = SteamInternal.CreateInterface(InterfaceName);
		if (Self == IntPtr.Zero)
		{
			HSteamUser hSteamUser = SteamAPI.GetHSteamUser();
			Self = SteamInternal.FindOrCreateUserInterface(hSteamUser, InterfaceName);
		}
		if (Self == IntPtr.Zero)
		{
			throw new Exception("Couldn't find interface " + InterfaceName);
		}
		VTable = Marshal.ReadIntPtr(Self, 0);
		if (Self == IntPtr.Zero)
		{
			throw new Exception("Invalid VTable for " + InterfaceName);
		}
		InitInternals();
		SteamClient.WatchInterface(this);
	}

	public void InitServer()
	{
		HSteamUser hSteamUser = SteamGameServer.GetHSteamUser();
		Self = SteamInternal.FindOrCreateGameServerInterface(hSteamUser, InterfaceName);
		if (Self == IntPtr.Zero)
		{
			throw new Exception("Couldn't find server interface " + InterfaceName);
		}
		VTable = Marshal.ReadIntPtr(Self, 0);
		if (Self == IntPtr.Zero)
		{
			throw new Exception("Invalid VTable for server " + InterfaceName);
		}
		InitInternals();
		SteamServer.WatchInterface(this);
	}

	public virtual void InitUserless()
	{
		Self = SteamInternal.FindOrCreateUserInterface(0, InterfaceName);
		if (Self == IntPtr.Zero)
		{
			throw new Exception("Couldn't find interface " + InterfaceName);
		}
		VTable = Marshal.ReadIntPtr(Self, 0);
		if (Self == IntPtr.Zero)
		{
			throw new Exception("Invalid VTable for " + InterfaceName);
		}
		InitInternals();
	}

	internal virtual void Shutdown()
	{
		Self = IntPtr.Zero;
		VTable = IntPtr.Zero;
	}

	public abstract void InitInternals();
}
