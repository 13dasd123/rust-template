using System;
using System.Collections.Generic;
using Facepunch;
using Network;
using Newtonsoft.Json;
using Oxide.Game.Rust.Cui;
using UnityEngine;

public static class CuiHelper
{
	public static string ToJson(List<CuiElement> elements, bool format = false)
	{
		return JsonConvert.SerializeObject(elements, format ? Formatting.Indented : Formatting.None, new JsonSerializerSettings
		{
			DefaultValueHandling = DefaultValueHandling.Ignore
		}).Replace("\\n", "\n");
	}

	public static List<CuiElement> FromJson(string json)
	{
		return JsonConvert.DeserializeObject<List<CuiElement>>(json);
	}

	public static string GetGuid()
	{
		return Guid.NewGuid().ToString().Replace("-", string.Empty);
	}

	public static bool AddUi(BasePlayer player, List<CuiElement> elements)
	{
		return AddUi(player, ToJson(elements));
	}

	public static bool AddUi(BasePlayer player, string json)
	{
		if (player?.net == null)
		{
			return false;
		}
		CommunityEntity.ServerInstance.ClientRPCEx(new SendInfo
		{
			connection = player.net.connection
		}, null, "AddUI", new Facepunch.ObjectList(json));
		return true;
	}

	public static bool DestroyUi(BasePlayer player, string elem)
	{
		if (player?.net == null)
		{
			return false;
		}
		CommunityEntity.ServerInstance.ClientRPCEx(new SendInfo
		{
			connection = player.net.connection
		}, null, "DestroyUI", new Facepunch.ObjectList(elem));
		return true;
	}

	public static void SetColor(this ICuiColor elem, Color color)
	{
		elem.Color = $"{color.r} {color.g} {color.b} {color.a}";
	}

	public static Color GetColor(this ICuiColor elem)
	{
		return ColorEx.Parse(elem.Color);
	}
}
