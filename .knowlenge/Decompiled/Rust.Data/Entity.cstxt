using System;
using System.IO;
using Facepunch;
using ProtoBuf;
using SilentOrbit.ProtocolBuffers;

public class Entity : IDisposable, Pool.IPooled, IProto
{
	[NonSerialized]
	public BaseNetworkable baseNetworkable;

	[NonSerialized]
	public BaseEntity baseEntity;

	[NonSerialized]
	public BasePlayer basePlayer;

	[NonSerialized]
	public WorldItem worldItem;

	[NonSerialized]
	public BaseResource resource;

	[NonSerialized]
	public BuildingBlock buildingBlock;

	[NonSerialized]
	public ProtoBuf.Environment environment;

	[NonSerialized]
	public Corpse corpse;

	[NonSerialized]
	public ParentInfo parent;

	[NonSerialized]
	public KeyLock keyLock;

	[NonSerialized]
	public CodeLock codeLock;

	[NonSerialized]
	public EntitySlots entitySlots;

	[NonSerialized]
	public BuildingPrivilege buildingPrivilege;

	[NonSerialized]
	public StorageBox storageBox;

	[NonSerialized]
	public HeldEntity heldEntity;

	[NonSerialized]
	public BaseProjectile baseProjectile;

	[NonSerialized]
	public BaseNPC baseNPC;

	[NonSerialized]
	public Loot loot;

	[NonSerialized]
	public GenericSpawner genericSpawner;

	[NonSerialized]
	public SleepingBag sleepingBag;

	[NonSerialized]
	public LootableCorpse lootableCorpse;

	[NonSerialized]
	public Sign sign;

	[NonSerialized]
	public BaseCombat baseCombat;

	[NonSerialized]
	public MapEntity mapEntity;

	[NonSerialized]
	public ResearchTable researchTable;

	[NonSerialized]
	public DudExplosive dudExplosive;

	[NonSerialized]
	public MiningQuarry miningQuarry;

	[NonSerialized]
	public PlantEntity plantEntity;

	[NonSerialized]
	public Helicopter helicopter;

	[NonSerialized]
	public Landmine landmine;

	[NonSerialized]
	public AutoTurret autoturret;

	[NonSerialized]
	public SphereEntity sphereEntity;

	[NonSerialized]
	public StabilityEntity stabilityEntity;

	[NonSerialized]
	public OwnerInfo ownerInfo;

	[NonSerialized]
	public DecayEntity decayEntity;

	[NonSerialized]
	public Spawnable spawnable;

	[NonSerialized]
	public ServerGib servergib;

	[NonSerialized]
	public VendingMachine vendingMachine;

	[NonSerialized]
	public SpinnerWheel spinnerWheel;

	[NonSerialized]
	public Lift lift;

	[NonSerialized]
	public BradleyAPC bradley;

	[NonSerialized]
	public WaterWell waterwell;

	[NonSerialized]
	public bool createdThisFrame;

	public bool ShouldPool = true;

	private bool _disposed;

	public static void ResetToPool(Entity instance)
	{
		if (instance.ShouldPool)
		{
			if (instance.baseNetworkable != null)
			{
				instance.baseNetworkable.ResetToPool();
				instance.baseNetworkable = null;
			}
			if (instance.baseEntity != null)
			{
				instance.baseEntity.ResetToPool();
				instance.baseEntity = null;
			}
			if (instance.basePlayer != null)
			{
				instance.basePlayer.ResetToPool();
				instance.basePlayer = null;
			}
			if (instance.worldItem != null)
			{
				instance.worldItem.ResetToPool();
				instance.worldItem = null;
			}
			if (instance.resource != null)
			{
				instance.resource.ResetToPool();
				instance.resource = null;
			}
			if (instance.buildingBlock != null)
			{
				instance.buildingBlock.ResetToPool();
				instance.buildingBlock = null;
			}
			if (instance.environment != null)
			{
				instance.environment.ResetToPool();
				instance.environment = null;
			}
			if (instance.corpse != null)
			{
				instance.corpse.ResetToPool();
				instance.corpse = null;
			}
			if (instance.parent != null)
			{
				instance.parent.ResetToPool();
				instance.parent = null;
			}
			if (instance.keyLock != null)
			{
				instance.keyLock.ResetToPool();
				instance.keyLock = null;
			}
			if (instance.codeLock != null)
			{
				instance.codeLock.ResetToPool();
				instance.codeLock = null;
			}
			if (instance.entitySlots != null)
			{
				instance.entitySlots.ResetToPool();
				instance.entitySlots = null;
			}
			if (instance.buildingPrivilege != null)
			{
				instance.buildingPrivilege.ResetToPool();
				instance.buildingPrivilege = null;
			}
			if (instance.storageBox != null)
			{
				instance.storageBox.ResetToPool();
				instance.storageBox = null;
			}
			if (instance.heldEntity != null)
			{
				instance.heldEntity.ResetToPool();
				instance.heldEntity = null;
			}
			if (instance.baseProjectile != null)
			{
				instance.baseProjectile.ResetToPool();
				instance.baseProjectile = null;
			}
			if (instance.baseNPC != null)
			{
				instance.baseNPC.ResetToPool();
				instance.baseNPC = null;
			}
			if (instance.loot != null)
			{
				instance.loot.ResetToPool();
				instance.loot = null;
			}
			if (instance.genericSpawner != null)
			{
				instance.genericSpawner.ResetToPool();
				instance.genericSpawner = null;
			}
			if (instance.sleepingBag != null)
			{
				instance.sleepingBag.ResetToPool();
				instance.sleepingBag = null;
			}
			if (instance.lootableCorpse != null)
			{
				instance.lootableCorpse.ResetToPool();
				instance.lootableCorpse = null;
			}
			if (instance.sign != null)
			{
				instance.sign.ResetToPool();
				instance.sign = null;
			}
			if (instance.baseCombat != null)
			{
				instance.baseCombat.ResetToPool();
				instance.baseCombat = null;
			}
			if (instance.mapEntity != null)
			{
				instance.mapEntity.ResetToPool();
				instance.mapEntity = null;
			}
			if (instance.researchTable != null)
			{
				instance.researchTable.ResetToPool();
				instance.researchTable = null;
			}
			if (instance.dudExplosive != null)
			{
				instance.dudExplosive.ResetToPool();
				instance.dudExplosive = null;
			}
			if (instance.miningQuarry != null)
			{
				instance.miningQuarry.ResetToPool();
				instance.miningQuarry = null;
			}
			if (instance.plantEntity != null)
			{
				instance.plantEntity.ResetToPool();
				instance.plantEntity = null;
			}
			if (instance.helicopter != null)
			{
				instance.helicopter.ResetToPool();
				instance.helicopter = null;
			}
			if (instance.landmine != null)
			{
				instance.landmine.ResetToPool();
				instance.landmine = null;
			}
			if (instance.autoturret != null)
			{
				instance.autoturret.ResetToPool();
				instance.autoturret = null;
			}
			if (instance.sphereEntity != null)
			{
				instance.sphereEntity.ResetToPool();
				instance.sphereEntity = null;
			}
			if (instance.stabilityEntity != null)
			{
				instance.stabilityEntity.ResetToPool();
				instance.stabilityEntity = null;
			}
			if (instance.ownerInfo != null)
			{
				instance.ownerInfo.ResetToPool();
				instance.ownerInfo = null;
			}
			if (instance.decayEntity != null)
			{
				instance.decayEntity.ResetToPool();
				instance.decayEntity = null;
			}
			if (instance.spawnable != null)
			{
				instance.spawnable.ResetToPool();
				instance.spawnable = null;
			}
			if (instance.servergib != null)
			{
				instance.servergib.ResetToPool();
				instance.servergib = null;
			}
			if (instance.vendingMachine != null)
			{
				instance.vendingMachine.ResetToPool();
				instance.vendingMachine = null;
			}
			if (instance.spinnerWheel != null)
			{
				instance.spinnerWheel.ResetToPool();
				instance.spinnerWheel = null;
			}
			if (instance.lift != null)
			{
				instance.lift.ResetToPool();
				instance.lift = null;
			}
			if (instance.bradley != null)
			{
				instance.bradley.ResetToPool();
				instance.bradley = null;
			}
			if (instance.waterwell != null)
			{
				instance.waterwell.ResetToPool();
				instance.waterwell = null;
			}
			instance.createdThisFrame = false;
			Pool.Free(ref instance);
		}
	}

	public void ResetToPool()
	{
		ResetToPool(this);
	}

	public virtual void Dispose()
	{
		if (!_disposed)
		{
			ResetToPool();
			_disposed = true;
		}
	}

	public virtual void EnterPool()
	{
		_disposed = true;
	}

	public virtual void LeavePool()
	{
		_disposed = false;
	}

	public virtual void WriteToStream(Stream stream)
	{
		Serialize(stream, this);
	}

	public virtual void WriteToStreamDelta(Stream stream, Entity previous)
	{
		if (previous == null)
		{
			Serialize(stream, this);
		}
		else
		{
			SerializeDelta(stream, this, previous);
		}
	}

	public virtual void ReadFromStream(Stream stream, int size, bool isDelta = false)
	{
		DeserializeLength(stream, size, this, isDelta);
	}

	public void CopyTo(Entity instance)
	{
		if (baseNetworkable != null)
		{
			if (instance.baseNetworkable == null)
			{
				instance.baseNetworkable = baseNetworkable.Copy();
			}
			else
			{
				baseNetworkable.CopyTo(instance.baseNetworkable);
			}
		}
		else
		{
			instance.baseNetworkable = null;
		}
		if (baseEntity != null)
		{
			if (instance.baseEntity == null)
			{
				instance.baseEntity = baseEntity.Copy();
			}
			else
			{
				baseEntity.CopyTo(instance.baseEntity);
			}
		}
		else
		{
			instance.baseEntity = null;
		}
		if (basePlayer != null)
		{
			if (instance.basePlayer == null)
			{
				instance.basePlayer = basePlayer.Copy();
			}
			else
			{
				basePlayer.CopyTo(instance.basePlayer);
			}
		}
		else
		{
			instance.basePlayer = null;
		}
		if (worldItem != null)
		{
			if (instance.worldItem == null)
			{
				instance.worldItem = worldItem.Copy();
			}
			else
			{
				worldItem.CopyTo(instance.worldItem);
			}
		}
		else
		{
			instance.worldItem = null;
		}
		if (resource != null)
		{
			if (instance.resource == null)
			{
				instance.resource = resource.Copy();
			}
			else
			{
				resource.CopyTo(instance.resource);
			}
		}
		else
		{
			instance.resource = null;
		}
		if (buildingBlock != null)
		{
			if (instance.buildingBlock == null)
			{
				instance.buildingBlock = buildingBlock.Copy();
			}
			else
			{
				buildingBlock.CopyTo(instance.buildingBlock);
			}
		}
		else
		{
			instance.buildingBlock = null;
		}
		if (environment != null)
		{
			if (instance.environment == null)
			{
				instance.environment = environment.Copy();
			}
			else
			{
				environment.CopyTo(instance.environment);
			}
		}
		else
		{
			instance.environment = null;
		}
		if (corpse != null)
		{
			if (instance.corpse == null)
			{
				instance.corpse = corpse.Copy();
			}
			else
			{
				corpse.CopyTo(instance.corpse);
			}
		}
		else
		{
			instance.corpse = null;
		}
		if (parent != null)
		{
			if (instance.parent == null)
			{
				instance.parent = parent.Copy();
			}
			else
			{
				parent.CopyTo(instance.parent);
			}
		}
		else
		{
			instance.parent = null;
		}
		if (keyLock != null)
		{
			if (instance.keyLock == null)
			{
				instance.keyLock = keyLock.Copy();
			}
			else
			{
				keyLock.CopyTo(instance.keyLock);
			}
		}
		else
		{
			instance.keyLock = null;
		}
		if (codeLock != null)
		{
			if (instance.codeLock == null)
			{
				instance.codeLock = codeLock.Copy();
			}
			else
			{
				codeLock.CopyTo(instance.codeLock);
			}
		}
		else
		{
			instance.codeLock = null;
		}
		if (entitySlots != null)
		{
			if (instance.entitySlots == null)
			{
				instance.entitySlots = entitySlots.Copy();
			}
			else
			{
				entitySlots.CopyTo(instance.entitySlots);
			}
		}
		else
		{
			instance.entitySlots = null;
		}
		if (buildingPrivilege != null)
		{
			if (instance.buildingPrivilege == null)
			{
				instance.buildingPrivilege = buildingPrivilege.Copy();
			}
			else
			{
				buildingPrivilege.CopyTo(instance.buildingPrivilege);
			}
		}
		else
		{
			instance.buildingPrivilege = null;
		}
		if (storageBox != null)
		{
			if (instance.storageBox == null)
			{
				instance.storageBox = storageBox.Copy();
			}
			else
			{
				storageBox.CopyTo(instance.storageBox);
			}
		}
		else
		{
			instance.storageBox = null;
		}
		if (heldEntity != null)
		{
			if (instance.heldEntity == null)
			{
				instance.heldEntity = heldEntity.Copy();
			}
			else
			{
				heldEntity.CopyTo(instance.heldEntity);
			}
		}
		else
		{
			instance.heldEntity = null;
		}
		if (baseProjectile != null)
		{
			if (instance.baseProjectile == null)
			{
				instance.baseProjectile = baseProjectile.Copy();
			}
			else
			{
				baseProjectile.CopyTo(instance.baseProjectile);
			}
		}
		else
		{
			instance.baseProjectile = null;
		}
		if (baseNPC != null)
		{
			if (instance.baseNPC == null)
			{
				instance.baseNPC = baseNPC.Copy();
			}
			else
			{
				baseNPC.CopyTo(instance.baseNPC);
			}
		}
		else
		{
			instance.baseNPC = null;
		}
		if (loot != null)
		{
			if (instance.loot == null)
			{
				instance.loot = loot.Copy();
			}
			else
			{
				loot.CopyTo(instance.loot);
			}
		}
		else
		{
			instance.loot = null;
		}
		if (genericSpawner != null)
		{
			if (instance.genericSpawner == null)
			{
				instance.genericSpawner = genericSpawner.Copy();
			}
			else
			{
				genericSpawner.CopyTo(instance.genericSpawner);
			}
		}
		else
		{
			instance.genericSpawner = null;
		}
		if (sleepingBag != null)
		{
			if (instance.sleepingBag == null)
			{
				instance.sleepingBag = sleepingBag.Copy();
			}
			else
			{
				sleepingBag.CopyTo(instance.sleepingBag);
			}
		}
		else
		{
			instance.sleepingBag = null;
		}
		if (lootableCorpse != null)
		{
			if (instance.lootableCorpse == null)
			{
				instance.lootableCorpse = lootableCorpse.Copy();
			}
			else
			{
				lootableCorpse.CopyTo(instance.lootableCorpse);
			}
		}
		else
		{
			instance.lootableCorpse = null;
		}
		if (sign != null)
		{
			if (instance.sign == null)
			{
				instance.sign = sign.Copy();
			}
			else
			{
				sign.CopyTo(instance.sign);
			}
		}
		else
		{
			instance.sign = null;
		}
		if (baseCombat != null)
		{
			if (instance.baseCombat == null)
			{
				instance.baseCombat = baseCombat.Copy();
			}
			else
			{
				baseCombat.CopyTo(instance.baseCombat);
			}
		}
		else
		{
			instance.baseCombat = null;
		}
		if (mapEntity != null)
		{
			if (instance.mapEntity == null)
			{
				instance.mapEntity = mapEntity.Copy();
			}
			else
			{
				mapEntity.CopyTo(instance.mapEntity);
			}
		}
		else
		{
			instance.mapEntity = null;
		}
		if (researchTable != null)
		{
			if (instance.researchTable == null)
			{
				instance.researchTable = researchTable.Copy();
			}
			else
			{
				researchTable.CopyTo(instance.researchTable);
			}
		}
		else
		{
			instance.researchTable = null;
		}
		if (dudExplosive != null)
		{
			if (instance.dudExplosive == null)
			{
				instance.dudExplosive = dudExplosive.Copy();
			}
			else
			{
				dudExplosive.CopyTo(instance.dudExplosive);
			}
		}
		else
		{
			instance.dudExplosive = null;
		}
		if (miningQuarry != null)
		{
			if (instance.miningQuarry == null)
			{
				instance.miningQuarry = miningQuarry.Copy();
			}
			else
			{
				miningQuarry.CopyTo(instance.miningQuarry);
			}
		}
		else
		{
			instance.miningQuarry = null;
		}
		if (plantEntity != null)
		{
			if (instance.plantEntity == null)
			{
				instance.plantEntity = plantEntity.Copy();
			}
			else
			{
				plantEntity.CopyTo(instance.plantEntity);
			}
		}
		else
		{
			instance.plantEntity = null;
		}
		if (helicopter != null)
		{
			if (instance.helicopter == null)
			{
				instance.helicopter = helicopter.Copy();
			}
			else
			{
				helicopter.CopyTo(instance.helicopter);
			}
		}
		else
		{
			instance.helicopter = null;
		}
		if (landmine != null)
		{
			if (instance.landmine == null)
			{
				instance.landmine = landmine.Copy();
			}
			else
			{
				landmine.CopyTo(instance.landmine);
			}
		}
		else
		{
			instance.landmine = null;
		}
		if (autoturret != null)
		{
			if (instance.autoturret == null)
			{
				instance.autoturret = autoturret.Copy();
			}
			else
			{
				autoturret.CopyTo(instance.autoturret);
			}
		}
		else
		{
			instance.autoturret = null;
		}
		if (sphereEntity != null)
		{
			if (instance.sphereEntity == null)
			{
				instance.sphereEntity = sphereEntity.Copy();
			}
			else
			{
				sphereEntity.CopyTo(instance.sphereEntity);
			}
		}
		else
		{
			instance.sphereEntity = null;
		}
		if (stabilityEntity != null)
		{
			if (instance.stabilityEntity == null)
			{
				instance.stabilityEntity = stabilityEntity.Copy();
			}
			else
			{
				stabilityEntity.CopyTo(instance.stabilityEntity);
			}
		}
		else
		{
			instance.stabilityEntity = null;
		}
		if (ownerInfo != null)
		{
			if (instance.ownerInfo == null)
			{
				instance.ownerInfo = ownerInfo.Copy();
			}
			else
			{
				ownerInfo.CopyTo(instance.ownerInfo);
			}
		}
		else
		{
			instance.ownerInfo = null;
		}
		if (decayEntity != null)
		{
			if (instance.decayEntity == null)
			{
				instance.decayEntity = decayEntity.Copy();
			}
			else
			{
				decayEntity.CopyTo(instance.decayEntity);
			}
		}
		else
		{
			instance.decayEntity = null;
		}
		if (spawnable != null)
		{
			if (instance.spawnable == null)
			{
				instance.spawnable = spawnable.Copy();
			}
			else
			{
				spawnable.CopyTo(instance.spawnable);
			}
		}
		else
		{
			instance.spawnable = null;
		}
		if (servergib != null)
		{
			if (instance.servergib == null)
			{
				instance.servergib = servergib.Copy();
			}
			else
			{
				servergib.CopyTo(instance.servergib);
			}
		}
		else
		{
			instance.servergib = null;
		}
		if (vendingMachine != null)
		{
			if (instance.vendingMachine == null)
			{
				instance.vendingMachine = vendingMachine.Copy();
			}
			else
			{
				vendingMachine.CopyTo(instance.vendingMachine);
			}
		}
		else
		{
			instance.vendingMachine = null;
		}
		if (spinnerWheel != null)
		{
			if (instance.spinnerWheel == null)
			{
				instance.spinnerWheel = spinnerWheel.Copy();
			}
			else
			{
				spinnerWheel.CopyTo(instance.spinnerWheel);
			}
		}
		else
		{
			instance.spinnerWheel = null;
		}
		if (lift != null)
		{
			if (instance.lift == null)
			{
				instance.lift = lift.Copy();
			}
			else
			{
				lift.CopyTo(instance.lift);
			}
		}
		else
		{
			instance.lift = null;
		}
		if (bradley != null)
		{
			if (instance.bradley == null)
			{
				instance.bradley = bradley.Copy();
			}
			else
			{
				bradley.CopyTo(instance.bradley);
			}
		}
		else
		{
			instance.bradley = null;
		}
		if (waterwell != null)
		{
			if (instance.waterwell == null)
			{
				instance.waterwell = waterwell.Copy();
			}
			else
			{
				waterwell.CopyTo(instance.waterwell);
			}
		}
		else
		{
			instance.waterwell = null;
		}
		instance.createdThisFrame = createdThisFrame;
	}

	public Entity Copy()
	{
		Entity entity = Pool.Get<Entity>();
		CopyTo(entity);
		return entity;
	}

	public static Entity Deserialize(Stream stream)
	{
		Entity entity = Pool.Get<Entity>();
		Deserialize(stream, entity, isDelta: false);
		return entity;
	}

	public static Entity DeserializeLengthDelimited(Stream stream)
	{
		Entity entity = Pool.Get<Entity>();
		DeserializeLengthDelimited(stream, entity, isDelta: false);
		return entity;
	}

	public static Entity DeserializeLength(Stream stream, int length)
	{
		Entity entity = Pool.Get<Entity>();
		DeserializeLength(stream, length, entity, isDelta: false);
		return entity;
	}

	public static Entity Deserialize(byte[] buffer)
	{
		Entity entity = Pool.Get<Entity>();
		using MemoryStream stream = new MemoryStream(buffer);
		Deserialize(stream, entity, isDelta: false);
		return entity;
	}

	public void FromProto(Stream stream, bool isDelta = false)
	{
		Deserialize(stream, this, isDelta);
	}

	public static Entity Deserialize(byte[] buffer, Entity instance, bool isDelta = false)
	{
		using MemoryStream stream = new MemoryStream(buffer);
		Deserialize(stream, instance, isDelta);
		return instance;
	}

	public static Entity Deserialize(Stream stream, Entity instance, bool isDelta)
	{
		while (true)
		{
			int num = stream.ReadByte();
			switch (num)
			{
			case 10:
				if (instance.baseNetworkable == null)
				{
					instance.baseNetworkable = BaseNetworkable.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseNetworkable.DeserializeLengthDelimited(stream, instance.baseNetworkable, isDelta);
				}
				continue;
			case 18:
				if (instance.baseEntity == null)
				{
					instance.baseEntity = BaseEntity.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseEntity.DeserializeLengthDelimited(stream, instance.baseEntity, isDelta);
				}
				continue;
			case 26:
				if (instance.basePlayer == null)
				{
					instance.basePlayer = BasePlayer.DeserializeLengthDelimited(stream);
				}
				else
				{
					BasePlayer.DeserializeLengthDelimited(stream, instance.basePlayer, isDelta);
				}
				continue;
			case 34:
				if (instance.worldItem == null)
				{
					instance.worldItem = WorldItem.DeserializeLengthDelimited(stream);
				}
				else
				{
					WorldItem.DeserializeLengthDelimited(stream, instance.worldItem, isDelta);
				}
				continue;
			case 42:
				if (instance.resource == null)
				{
					instance.resource = BaseResource.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseResource.DeserializeLengthDelimited(stream, instance.resource, isDelta);
				}
				continue;
			case 50:
				if (instance.buildingBlock == null)
				{
					instance.buildingBlock = BuildingBlock.DeserializeLengthDelimited(stream);
				}
				else
				{
					BuildingBlock.DeserializeLengthDelimited(stream, instance.buildingBlock, isDelta);
				}
				continue;
			case 58:
				if (instance.environment == null)
				{
					instance.environment = ProtoBuf.Environment.DeserializeLengthDelimited(stream);
				}
				else
				{
					ProtoBuf.Environment.DeserializeLengthDelimited(stream, instance.environment, isDelta);
				}
				continue;
			case 66:
				if (instance.corpse == null)
				{
					instance.corpse = Corpse.DeserializeLengthDelimited(stream);
				}
				else
				{
					Corpse.DeserializeLengthDelimited(stream, instance.corpse, isDelta);
				}
				continue;
			case 82:
				if (instance.parent == null)
				{
					instance.parent = ParentInfo.DeserializeLengthDelimited(stream);
				}
				else
				{
					ParentInfo.DeserializeLengthDelimited(stream, instance.parent, isDelta);
				}
				continue;
			case 90:
				if (instance.keyLock == null)
				{
					instance.keyLock = KeyLock.DeserializeLengthDelimited(stream);
				}
				else
				{
					KeyLock.DeserializeLengthDelimited(stream, instance.keyLock, isDelta);
				}
				continue;
			case 98:
				if (instance.codeLock == null)
				{
					instance.codeLock = CodeLock.DeserializeLengthDelimited(stream);
				}
				else
				{
					CodeLock.DeserializeLengthDelimited(stream, instance.codeLock, isDelta);
				}
				continue;
			case 106:
				if (instance.entitySlots == null)
				{
					instance.entitySlots = EntitySlots.DeserializeLengthDelimited(stream);
				}
				else
				{
					EntitySlots.DeserializeLengthDelimited(stream, instance.entitySlots, isDelta);
				}
				continue;
			case 114:
				if (instance.buildingPrivilege == null)
				{
					instance.buildingPrivilege = BuildingPrivilege.DeserializeLengthDelimited(stream);
				}
				else
				{
					BuildingPrivilege.DeserializeLengthDelimited(stream, instance.buildingPrivilege, isDelta);
				}
				continue;
			case 122:
				if (instance.storageBox == null)
				{
					instance.storageBox = StorageBox.DeserializeLengthDelimited(stream);
				}
				else
				{
					StorageBox.DeserializeLengthDelimited(stream, instance.storageBox, isDelta);
				}
				continue;
			case -1:
				return instance;
			}
			Key key = ProtocolParser.ReadKey((byte)num, stream);
			switch (key.Field)
			{
			case 0u:
				throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
			case 16u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.heldEntity == null)
					{
						instance.heldEntity = HeldEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						HeldEntity.DeserializeLengthDelimited(stream, instance.heldEntity, isDelta);
					}
				}
				break;
			case 17u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseProjectile == null)
					{
						instance.baseProjectile = BaseProjectile.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseProjectile.DeserializeLengthDelimited(stream, instance.baseProjectile, isDelta);
					}
				}
				break;
			case 18u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseNPC == null)
					{
						instance.baseNPC = BaseNPC.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseNPC.DeserializeLengthDelimited(stream, instance.baseNPC, isDelta);
					}
				}
				break;
			case 19u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.loot == null)
					{
						instance.loot = Loot.DeserializeLengthDelimited(stream);
					}
					else
					{
						Loot.DeserializeLengthDelimited(stream, instance.loot, isDelta);
					}
				}
				break;
			case 20u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.genericSpawner == null)
					{
						instance.genericSpawner = GenericSpawner.DeserializeLengthDelimited(stream);
					}
					else
					{
						GenericSpawner.DeserializeLengthDelimited(stream, instance.genericSpawner, isDelta);
					}
				}
				break;
			case 21u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sleepingBag == null)
					{
						instance.sleepingBag = SleepingBag.DeserializeLengthDelimited(stream);
					}
					else
					{
						SleepingBag.DeserializeLengthDelimited(stream, instance.sleepingBag, isDelta);
					}
				}
				break;
			case 22u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.lootableCorpse == null)
					{
						instance.lootableCorpse = LootableCorpse.DeserializeLengthDelimited(stream);
					}
					else
					{
						LootableCorpse.DeserializeLengthDelimited(stream, instance.lootableCorpse, isDelta);
					}
				}
				break;
			case 23u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sign == null)
					{
						instance.sign = Sign.DeserializeLengthDelimited(stream);
					}
					else
					{
						Sign.DeserializeLengthDelimited(stream, instance.sign, isDelta);
					}
				}
				break;
			case 24u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseCombat == null)
					{
						instance.baseCombat = BaseCombat.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseCombat.DeserializeLengthDelimited(stream, instance.baseCombat, isDelta);
					}
				}
				break;
			case 25u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.mapEntity == null)
					{
						instance.mapEntity = MapEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						MapEntity.DeserializeLengthDelimited(stream, instance.mapEntity, isDelta);
					}
				}
				break;
			case 26u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.researchTable == null)
					{
						instance.researchTable = ResearchTable.DeserializeLengthDelimited(stream);
					}
					else
					{
						ResearchTable.DeserializeLengthDelimited(stream, instance.researchTable, isDelta);
					}
				}
				break;
			case 27u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.dudExplosive == null)
					{
						instance.dudExplosive = DudExplosive.DeserializeLengthDelimited(stream);
					}
					else
					{
						DudExplosive.DeserializeLengthDelimited(stream, instance.dudExplosive, isDelta);
					}
				}
				break;
			case 28u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.miningQuarry == null)
					{
						instance.miningQuarry = MiningQuarry.DeserializeLengthDelimited(stream);
					}
					else
					{
						MiningQuarry.DeserializeLengthDelimited(stream, instance.miningQuarry, isDelta);
					}
				}
				break;
			case 29u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.plantEntity == null)
					{
						instance.plantEntity = PlantEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						PlantEntity.DeserializeLengthDelimited(stream, instance.plantEntity, isDelta);
					}
				}
				break;
			case 30u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.helicopter == null)
					{
						instance.helicopter = Helicopter.DeserializeLengthDelimited(stream);
					}
					else
					{
						Helicopter.DeserializeLengthDelimited(stream, instance.helicopter, isDelta);
					}
				}
				break;
			case 31u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.landmine == null)
					{
						instance.landmine = Landmine.DeserializeLengthDelimited(stream);
					}
					else
					{
						Landmine.DeserializeLengthDelimited(stream, instance.landmine, isDelta);
					}
				}
				break;
			case 32u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.autoturret == null)
					{
						instance.autoturret = AutoTurret.DeserializeLengthDelimited(stream);
					}
					else
					{
						AutoTurret.DeserializeLengthDelimited(stream, instance.autoturret, isDelta);
					}
				}
				break;
			case 33u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sphereEntity == null)
					{
						instance.sphereEntity = SphereEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						SphereEntity.DeserializeLengthDelimited(stream, instance.sphereEntity, isDelta);
					}
				}
				break;
			case 34u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.stabilityEntity == null)
					{
						instance.stabilityEntity = StabilityEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						StabilityEntity.DeserializeLengthDelimited(stream, instance.stabilityEntity, isDelta);
					}
				}
				break;
			case 35u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.ownerInfo == null)
					{
						instance.ownerInfo = OwnerInfo.DeserializeLengthDelimited(stream);
					}
					else
					{
						OwnerInfo.DeserializeLengthDelimited(stream, instance.ownerInfo, isDelta);
					}
				}
				break;
			case 36u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.decayEntity == null)
					{
						instance.decayEntity = DecayEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						DecayEntity.DeserializeLengthDelimited(stream, instance.decayEntity, isDelta);
					}
				}
				break;
			case 37u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.spawnable == null)
					{
						instance.spawnable = Spawnable.DeserializeLengthDelimited(stream);
					}
					else
					{
						Spawnable.DeserializeLengthDelimited(stream, instance.spawnable, isDelta);
					}
				}
				break;
			case 38u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.servergib == null)
					{
						instance.servergib = ServerGib.DeserializeLengthDelimited(stream);
					}
					else
					{
						ServerGib.DeserializeLengthDelimited(stream, instance.servergib, isDelta);
					}
				}
				break;
			case 39u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.vendingMachine == null)
					{
						instance.vendingMachine = VendingMachine.DeserializeLengthDelimited(stream);
					}
					else
					{
						VendingMachine.DeserializeLengthDelimited(stream, instance.vendingMachine, isDelta);
					}
				}
				break;
			case 40u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.spinnerWheel == null)
					{
						instance.spinnerWheel = SpinnerWheel.DeserializeLengthDelimited(stream);
					}
					else
					{
						SpinnerWheel.DeserializeLengthDelimited(stream, instance.spinnerWheel, isDelta);
					}
				}
				break;
			case 41u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.lift == null)
					{
						instance.lift = Lift.DeserializeLengthDelimited(stream);
					}
					else
					{
						Lift.DeserializeLengthDelimited(stream, instance.lift, isDelta);
					}
				}
				break;
			case 42u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.bradley == null)
					{
						instance.bradley = BradleyAPC.DeserializeLengthDelimited(stream);
					}
					else
					{
						BradleyAPC.DeserializeLengthDelimited(stream, instance.bradley, isDelta);
					}
				}
				break;
			case 43u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.waterwell == null)
					{
						instance.waterwell = WaterWell.DeserializeLengthDelimited(stream);
					}
					else
					{
						WaterWell.DeserializeLengthDelimited(stream, instance.waterwell, isDelta);
					}
				}
				break;
			case 100u:
				if (key.WireType == Wire.Varint)
				{
					instance.createdThisFrame = ProtocolParser.ReadBool(stream);
				}
				break;
			default:
				ProtocolParser.SkipKey(stream, key);
				break;
			}
		}
	}

	public static Entity DeserializeLengthDelimited(Stream stream, Entity instance, bool isDelta)
	{
		long num = ProtocolParser.ReadUInt32(stream);
		num += stream.Position;
		while (stream.Position < num)
		{
			int num2 = stream.ReadByte();
			switch (num2)
			{
			case -1:
				throw new EndOfStreamException();
			case 10:
				if (instance.baseNetworkable == null)
				{
					instance.baseNetworkable = BaseNetworkable.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseNetworkable.DeserializeLengthDelimited(stream, instance.baseNetworkable, isDelta);
				}
				continue;
			case 18:
				if (instance.baseEntity == null)
				{
					instance.baseEntity = BaseEntity.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseEntity.DeserializeLengthDelimited(stream, instance.baseEntity, isDelta);
				}
				continue;
			case 26:
				if (instance.basePlayer == null)
				{
					instance.basePlayer = BasePlayer.DeserializeLengthDelimited(stream);
				}
				else
				{
					BasePlayer.DeserializeLengthDelimited(stream, instance.basePlayer, isDelta);
				}
				continue;
			case 34:
				if (instance.worldItem == null)
				{
					instance.worldItem = WorldItem.DeserializeLengthDelimited(stream);
				}
				else
				{
					WorldItem.DeserializeLengthDelimited(stream, instance.worldItem, isDelta);
				}
				continue;
			case 42:
				if (instance.resource == null)
				{
					instance.resource = BaseResource.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseResource.DeserializeLengthDelimited(stream, instance.resource, isDelta);
				}
				continue;
			case 50:
				if (instance.buildingBlock == null)
				{
					instance.buildingBlock = BuildingBlock.DeserializeLengthDelimited(stream);
				}
				else
				{
					BuildingBlock.DeserializeLengthDelimited(stream, instance.buildingBlock, isDelta);
				}
				continue;
			case 58:
				if (instance.environment == null)
				{
					instance.environment = ProtoBuf.Environment.DeserializeLengthDelimited(stream);
				}
				else
				{
					ProtoBuf.Environment.DeserializeLengthDelimited(stream, instance.environment, isDelta);
				}
				continue;
			case 66:
				if (instance.corpse == null)
				{
					instance.corpse = Corpse.DeserializeLengthDelimited(stream);
				}
				else
				{
					Corpse.DeserializeLengthDelimited(stream, instance.corpse, isDelta);
				}
				continue;
			case 82:
				if (instance.parent == null)
				{
					instance.parent = ParentInfo.DeserializeLengthDelimited(stream);
				}
				else
				{
					ParentInfo.DeserializeLengthDelimited(stream, instance.parent, isDelta);
				}
				continue;
			case 90:
				if (instance.keyLock == null)
				{
					instance.keyLock = KeyLock.DeserializeLengthDelimited(stream);
				}
				else
				{
					KeyLock.DeserializeLengthDelimited(stream, instance.keyLock, isDelta);
				}
				continue;
			case 98:
				if (instance.codeLock == null)
				{
					instance.codeLock = CodeLock.DeserializeLengthDelimited(stream);
				}
				else
				{
					CodeLock.DeserializeLengthDelimited(stream, instance.codeLock, isDelta);
				}
				continue;
			case 106:
				if (instance.entitySlots == null)
				{
					instance.entitySlots = EntitySlots.DeserializeLengthDelimited(stream);
				}
				else
				{
					EntitySlots.DeserializeLengthDelimited(stream, instance.entitySlots, isDelta);
				}
				continue;
			case 114:
				if (instance.buildingPrivilege == null)
				{
					instance.buildingPrivilege = BuildingPrivilege.DeserializeLengthDelimited(stream);
				}
				else
				{
					BuildingPrivilege.DeserializeLengthDelimited(stream, instance.buildingPrivilege, isDelta);
				}
				continue;
			case 122:
				if (instance.storageBox == null)
				{
					instance.storageBox = StorageBox.DeserializeLengthDelimited(stream);
				}
				else
				{
					StorageBox.DeserializeLengthDelimited(stream, instance.storageBox, isDelta);
				}
				continue;
			}
			Key key = ProtocolParser.ReadKey((byte)num2, stream);
			switch (key.Field)
			{
			case 0u:
				throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
			case 16u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.heldEntity == null)
					{
						instance.heldEntity = HeldEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						HeldEntity.DeserializeLengthDelimited(stream, instance.heldEntity, isDelta);
					}
				}
				break;
			case 17u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseProjectile == null)
					{
						instance.baseProjectile = BaseProjectile.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseProjectile.DeserializeLengthDelimited(stream, instance.baseProjectile, isDelta);
					}
				}
				break;
			case 18u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseNPC == null)
					{
						instance.baseNPC = BaseNPC.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseNPC.DeserializeLengthDelimited(stream, instance.baseNPC, isDelta);
					}
				}
				break;
			case 19u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.loot == null)
					{
						instance.loot = Loot.DeserializeLengthDelimited(stream);
					}
					else
					{
						Loot.DeserializeLengthDelimited(stream, instance.loot, isDelta);
					}
				}
				break;
			case 20u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.genericSpawner == null)
					{
						instance.genericSpawner = GenericSpawner.DeserializeLengthDelimited(stream);
					}
					else
					{
						GenericSpawner.DeserializeLengthDelimited(stream, instance.genericSpawner, isDelta);
					}
				}
				break;
			case 21u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sleepingBag == null)
					{
						instance.sleepingBag = SleepingBag.DeserializeLengthDelimited(stream);
					}
					else
					{
						SleepingBag.DeserializeLengthDelimited(stream, instance.sleepingBag, isDelta);
					}
				}
				break;
			case 22u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.lootableCorpse == null)
					{
						instance.lootableCorpse = LootableCorpse.DeserializeLengthDelimited(stream);
					}
					else
					{
						LootableCorpse.DeserializeLengthDelimited(stream, instance.lootableCorpse, isDelta);
					}
				}
				break;
			case 23u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sign == null)
					{
						instance.sign = Sign.DeserializeLengthDelimited(stream);
					}
					else
					{
						Sign.DeserializeLengthDelimited(stream, instance.sign, isDelta);
					}
				}
				break;
			case 24u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseCombat == null)
					{
						instance.baseCombat = BaseCombat.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseCombat.DeserializeLengthDelimited(stream, instance.baseCombat, isDelta);
					}
				}
				break;
			case 25u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.mapEntity == null)
					{
						instance.mapEntity = MapEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						MapEntity.DeserializeLengthDelimited(stream, instance.mapEntity, isDelta);
					}
				}
				break;
			case 26u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.researchTable == null)
					{
						instance.researchTable = ResearchTable.DeserializeLengthDelimited(stream);
					}
					else
					{
						ResearchTable.DeserializeLengthDelimited(stream, instance.researchTable, isDelta);
					}
				}
				break;
			case 27u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.dudExplosive == null)
					{
						instance.dudExplosive = DudExplosive.DeserializeLengthDelimited(stream);
					}
					else
					{
						DudExplosive.DeserializeLengthDelimited(stream, instance.dudExplosive, isDelta);
					}
				}
				break;
			case 28u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.miningQuarry == null)
					{
						instance.miningQuarry = MiningQuarry.DeserializeLengthDelimited(stream);
					}
					else
					{
						MiningQuarry.DeserializeLengthDelimited(stream, instance.miningQuarry, isDelta);
					}
				}
				break;
			case 29u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.plantEntity == null)
					{
						instance.plantEntity = PlantEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						PlantEntity.DeserializeLengthDelimited(stream, instance.plantEntity, isDelta);
					}
				}
				break;
			case 30u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.helicopter == null)
					{
						instance.helicopter = Helicopter.DeserializeLengthDelimited(stream);
					}
					else
					{
						Helicopter.DeserializeLengthDelimited(stream, instance.helicopter, isDelta);
					}
				}
				break;
			case 31u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.landmine == null)
					{
						instance.landmine = Landmine.DeserializeLengthDelimited(stream);
					}
					else
					{
						Landmine.DeserializeLengthDelimited(stream, instance.landmine, isDelta);
					}
				}
				break;
			case 32u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.autoturret == null)
					{
						instance.autoturret = AutoTurret.DeserializeLengthDelimited(stream);
					}
					else
					{
						AutoTurret.DeserializeLengthDelimited(stream, instance.autoturret, isDelta);
					}
				}
				break;
			case 33u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sphereEntity == null)
					{
						instance.sphereEntity = SphereEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						SphereEntity.DeserializeLengthDelimited(stream, instance.sphereEntity, isDelta);
					}
				}
				break;
			case 34u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.stabilityEntity == null)
					{
						instance.stabilityEntity = StabilityEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						StabilityEntity.DeserializeLengthDelimited(stream, instance.stabilityEntity, isDelta);
					}
				}
				break;
			case 35u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.ownerInfo == null)
					{
						instance.ownerInfo = OwnerInfo.DeserializeLengthDelimited(stream);
					}
					else
					{
						OwnerInfo.DeserializeLengthDelimited(stream, instance.ownerInfo, isDelta);
					}
				}
				break;
			case 36u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.decayEntity == null)
					{
						instance.decayEntity = DecayEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						DecayEntity.DeserializeLengthDelimited(stream, instance.decayEntity, isDelta);
					}
				}
				break;
			case 37u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.spawnable == null)
					{
						instance.spawnable = Spawnable.DeserializeLengthDelimited(stream);
					}
					else
					{
						Spawnable.DeserializeLengthDelimited(stream, instance.spawnable, isDelta);
					}
				}
				break;
			case 38u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.servergib == null)
					{
						instance.servergib = ServerGib.DeserializeLengthDelimited(stream);
					}
					else
					{
						ServerGib.DeserializeLengthDelimited(stream, instance.servergib, isDelta);
					}
				}
				break;
			case 39u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.vendingMachine == null)
					{
						instance.vendingMachine = VendingMachine.DeserializeLengthDelimited(stream);
					}
					else
					{
						VendingMachine.DeserializeLengthDelimited(stream, instance.vendingMachine, isDelta);
					}
				}
				break;
			case 40u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.spinnerWheel == null)
					{
						instance.spinnerWheel = SpinnerWheel.DeserializeLengthDelimited(stream);
					}
					else
					{
						SpinnerWheel.DeserializeLengthDelimited(stream, instance.spinnerWheel, isDelta);
					}
				}
				break;
			case 41u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.lift == null)
					{
						instance.lift = Lift.DeserializeLengthDelimited(stream);
					}
					else
					{
						Lift.DeserializeLengthDelimited(stream, instance.lift, isDelta);
					}
				}
				break;
			case 42u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.bradley == null)
					{
						instance.bradley = BradleyAPC.DeserializeLengthDelimited(stream);
					}
					else
					{
						BradleyAPC.DeserializeLengthDelimited(stream, instance.bradley, isDelta);
					}
				}
				break;
			case 43u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.waterwell == null)
					{
						instance.waterwell = WaterWell.DeserializeLengthDelimited(stream);
					}
					else
					{
						WaterWell.DeserializeLengthDelimited(stream, instance.waterwell, isDelta);
					}
				}
				break;
			case 100u:
				if (key.WireType == Wire.Varint)
				{
					instance.createdThisFrame = ProtocolParser.ReadBool(stream);
				}
				break;
			default:
				ProtocolParser.SkipKey(stream, key);
				break;
			}
		}
		if (stream.Position != num)
		{
			throw new ProtocolBufferException("Read past max limit");
		}
		return instance;
	}

	public static Entity DeserializeLength(Stream stream, int length, Entity instance, bool isDelta)
	{
		long num = stream.Position + length;
		while (stream.Position < num)
		{
			int num2 = stream.ReadByte();
			switch (num2)
			{
			case -1:
				throw new EndOfStreamException();
			case 10:
				if (instance.baseNetworkable == null)
				{
					instance.baseNetworkable = BaseNetworkable.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseNetworkable.DeserializeLengthDelimited(stream, instance.baseNetworkable, isDelta);
				}
				continue;
			case 18:
				if (instance.baseEntity == null)
				{
					instance.baseEntity = BaseEntity.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseEntity.DeserializeLengthDelimited(stream, instance.baseEntity, isDelta);
				}
				continue;
			case 26:
				if (instance.basePlayer == null)
				{
					instance.basePlayer = BasePlayer.DeserializeLengthDelimited(stream);
				}
				else
				{
					BasePlayer.DeserializeLengthDelimited(stream, instance.basePlayer, isDelta);
				}
				continue;
			case 34:
				if (instance.worldItem == null)
				{
					instance.worldItem = WorldItem.DeserializeLengthDelimited(stream);
				}
				else
				{
					WorldItem.DeserializeLengthDelimited(stream, instance.worldItem, isDelta);
				}
				continue;
			case 42:
				if (instance.resource == null)
				{
					instance.resource = BaseResource.DeserializeLengthDelimited(stream);
				}
				else
				{
					BaseResource.DeserializeLengthDelimited(stream, instance.resource, isDelta);
				}
				continue;
			case 50:
				if (instance.buildingBlock == null)
				{
					instance.buildingBlock = BuildingBlock.DeserializeLengthDelimited(stream);
				}
				else
				{
					BuildingBlock.DeserializeLengthDelimited(stream, instance.buildingBlock, isDelta);
				}
				continue;
			case 58:
				if (instance.environment == null)
				{
					instance.environment = ProtoBuf.Environment.DeserializeLengthDelimited(stream);
				}
				else
				{
					ProtoBuf.Environment.DeserializeLengthDelimited(stream, instance.environment, isDelta);
				}
				continue;
			case 66:
				if (instance.corpse == null)
				{
					instance.corpse = Corpse.DeserializeLengthDelimited(stream);
				}
				else
				{
					Corpse.DeserializeLengthDelimited(stream, instance.corpse, isDelta);
				}
				continue;
			case 82:
				if (instance.parent == null)
				{
					instance.parent = ParentInfo.DeserializeLengthDelimited(stream);
				}
				else
				{
					ParentInfo.DeserializeLengthDelimited(stream, instance.parent, isDelta);
				}
				continue;
			case 90:
				if (instance.keyLock == null)
				{
					instance.keyLock = KeyLock.DeserializeLengthDelimited(stream);
				}
				else
				{
					KeyLock.DeserializeLengthDelimited(stream, instance.keyLock, isDelta);
				}
				continue;
			case 98:
				if (instance.codeLock == null)
				{
					instance.codeLock = CodeLock.DeserializeLengthDelimited(stream);
				}
				else
				{
					CodeLock.DeserializeLengthDelimited(stream, instance.codeLock, isDelta);
				}
				continue;
			case 106:
				if (instance.entitySlots == null)
				{
					instance.entitySlots = EntitySlots.DeserializeLengthDelimited(stream);
				}
				else
				{
					EntitySlots.DeserializeLengthDelimited(stream, instance.entitySlots, isDelta);
				}
				continue;
			case 114:
				if (instance.buildingPrivilege == null)
				{
					instance.buildingPrivilege = BuildingPrivilege.DeserializeLengthDelimited(stream);
				}
				else
				{
					BuildingPrivilege.DeserializeLengthDelimited(stream, instance.buildingPrivilege, isDelta);
				}
				continue;
			case 122:
				if (instance.storageBox == null)
				{
					instance.storageBox = StorageBox.DeserializeLengthDelimited(stream);
				}
				else
				{
					StorageBox.DeserializeLengthDelimited(stream, instance.storageBox, isDelta);
				}
				continue;
			}
			Key key = ProtocolParser.ReadKey((byte)num2, stream);
			switch (key.Field)
			{
			case 0u:
				throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
			case 16u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.heldEntity == null)
					{
						instance.heldEntity = HeldEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						HeldEntity.DeserializeLengthDelimited(stream, instance.heldEntity, isDelta);
					}
				}
				break;
			case 17u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseProjectile == null)
					{
						instance.baseProjectile = BaseProjectile.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseProjectile.DeserializeLengthDelimited(stream, instance.baseProjectile, isDelta);
					}
				}
				break;
			case 18u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseNPC == null)
					{
						instance.baseNPC = BaseNPC.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseNPC.DeserializeLengthDelimited(stream, instance.baseNPC, isDelta);
					}
				}
				break;
			case 19u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.loot == null)
					{
						instance.loot = Loot.DeserializeLengthDelimited(stream);
					}
					else
					{
						Loot.DeserializeLengthDelimited(stream, instance.loot, isDelta);
					}
				}
				break;
			case 20u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.genericSpawner == null)
					{
						instance.genericSpawner = GenericSpawner.DeserializeLengthDelimited(stream);
					}
					else
					{
						GenericSpawner.DeserializeLengthDelimited(stream, instance.genericSpawner, isDelta);
					}
				}
				break;
			case 21u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sleepingBag == null)
					{
						instance.sleepingBag = SleepingBag.DeserializeLengthDelimited(stream);
					}
					else
					{
						SleepingBag.DeserializeLengthDelimited(stream, instance.sleepingBag, isDelta);
					}
				}
				break;
			case 22u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.lootableCorpse == null)
					{
						instance.lootableCorpse = LootableCorpse.DeserializeLengthDelimited(stream);
					}
					else
					{
						LootableCorpse.DeserializeLengthDelimited(stream, instance.lootableCorpse, isDelta);
					}
				}
				break;
			case 23u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sign == null)
					{
						instance.sign = Sign.DeserializeLengthDelimited(stream);
					}
					else
					{
						Sign.DeserializeLengthDelimited(stream, instance.sign, isDelta);
					}
				}
				break;
			case 24u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.baseCombat == null)
					{
						instance.baseCombat = BaseCombat.DeserializeLengthDelimited(stream);
					}
					else
					{
						BaseCombat.DeserializeLengthDelimited(stream, instance.baseCombat, isDelta);
					}
				}
				break;
			case 25u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.mapEntity == null)
					{
						instance.mapEntity = MapEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						MapEntity.DeserializeLengthDelimited(stream, instance.mapEntity, isDelta);
					}
				}
				break;
			case 26u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.researchTable == null)
					{
						instance.researchTable = ResearchTable.DeserializeLengthDelimited(stream);
					}
					else
					{
						ResearchTable.DeserializeLengthDelimited(stream, instance.researchTable, isDelta);
					}
				}
				break;
			case 27u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.dudExplosive == null)
					{
						instance.dudExplosive = DudExplosive.DeserializeLengthDelimited(stream);
					}
					else
					{
						DudExplosive.DeserializeLengthDelimited(stream, instance.dudExplosive, isDelta);
					}
				}
				break;
			case 28u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.miningQuarry == null)
					{
						instance.miningQuarry = MiningQuarry.DeserializeLengthDelimited(stream);
					}
					else
					{
						MiningQuarry.DeserializeLengthDelimited(stream, instance.miningQuarry, isDelta);
					}
				}
				break;
			case 29u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.plantEntity == null)
					{
						instance.plantEntity = PlantEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						PlantEntity.DeserializeLengthDelimited(stream, instance.plantEntity, isDelta);
					}
				}
				break;
			case 30u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.helicopter == null)
					{
						instance.helicopter = Helicopter.DeserializeLengthDelimited(stream);
					}
					else
					{
						Helicopter.DeserializeLengthDelimited(stream, instance.helicopter, isDelta);
					}
				}
				break;
			case 31u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.landmine == null)
					{
						instance.landmine = Landmine.DeserializeLengthDelimited(stream);
					}
					else
					{
						Landmine.DeserializeLengthDelimited(stream, instance.landmine, isDelta);
					}
				}
				break;
			case 32u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.autoturret == null)
					{
						instance.autoturret = AutoTurret.DeserializeLengthDelimited(stream);
					}
					else
					{
						AutoTurret.DeserializeLengthDelimited(stream, instance.autoturret, isDelta);
					}
				}
				break;
			case 33u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.sphereEntity == null)
					{
						instance.sphereEntity = SphereEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						SphereEntity.DeserializeLengthDelimited(stream, instance.sphereEntity, isDelta);
					}
				}
				break;
			case 34u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.stabilityEntity == null)
					{
						instance.stabilityEntity = StabilityEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						StabilityEntity.DeserializeLengthDelimited(stream, instance.stabilityEntity, isDelta);
					}
				}
				break;
			case 35u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.ownerInfo == null)
					{
						instance.ownerInfo = OwnerInfo.DeserializeLengthDelimited(stream);
					}
					else
					{
						OwnerInfo.DeserializeLengthDelimited(stream, instance.ownerInfo, isDelta);
					}
				}
				break;
			case 36u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.decayEntity == null)
					{
						instance.decayEntity = DecayEntity.DeserializeLengthDelimited(stream);
					}
					else
					{
						DecayEntity.DeserializeLengthDelimited(stream, instance.decayEntity, isDelta);
					}
				}
				break;
			case 37u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.spawnable == null)
					{
						instance.spawnable = Spawnable.DeserializeLengthDelimited(stream);
					}
					else
					{
						Spawnable.DeserializeLengthDelimited(stream, instance.spawnable, isDelta);
					}
				}
				break;
			case 38u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.servergib == null)
					{
						instance.servergib = ServerGib.DeserializeLengthDelimited(stream);
					}
					else
					{
						ServerGib.DeserializeLengthDelimited(stream, instance.servergib, isDelta);
					}
				}
				break;
			case 39u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.vendingMachine == null)
					{
						instance.vendingMachine = VendingMachine.DeserializeLengthDelimited(stream);
					}
					else
					{
						VendingMachine.DeserializeLengthDelimited(stream, instance.vendingMachine, isDelta);
					}
				}
				break;
			case 40u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.spinnerWheel == null)
					{
						instance.spinnerWheel = SpinnerWheel.DeserializeLengthDelimited(stream);
					}
					else
					{
						SpinnerWheel.DeserializeLengthDelimited(stream, instance.spinnerWheel, isDelta);
					}
				}
				break;
			case 41u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.lift == null)
					{
						instance.lift = Lift.DeserializeLengthDelimited(stream);
					}
					else
					{
						Lift.DeserializeLengthDelimited(stream, instance.lift, isDelta);
					}
				}
				break;
			case 42u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.bradley == null)
					{
						instance.bradley = BradleyAPC.DeserializeLengthDelimited(stream);
					}
					else
					{
						BradleyAPC.DeserializeLengthDelimited(stream, instance.bradley, isDelta);
					}
				}
				break;
			case 43u:
				if (key.WireType == Wire.LengthDelimited)
				{
					if (instance.waterwell == null)
					{
						instance.waterwell = WaterWell.DeserializeLengthDelimited(stream);
					}
					else
					{
						WaterWell.DeserializeLengthDelimited(stream, instance.waterwell, isDelta);
					}
				}
				break;
			case 100u:
				if (key.WireType == Wire.Varint)
				{
					instance.createdThisFrame = ProtocolParser.ReadBool(stream);
				}
				break;
			default:
				ProtocolParser.SkipKey(stream, key);
				break;
			}
		}
		if (stream.Position != num)
		{
			throw new ProtocolBufferException("Read past max limit");
		}
		return instance;
	}

	public static void SerializeDelta(Stream stream, Entity instance, Entity previous)
	{
		MemoryStream obj = Pool.Get<MemoryStream>();
		if (instance.baseNetworkable != null)
		{
			stream.WriteByte(10);
			obj.SetLength(0L);
			BaseNetworkable.SerializeDelta(obj, instance.baseNetworkable, previous.baseNetworkable);
			uint num = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num);
			stream.Write(obj.GetBuffer(), 0, (int)num);
		}
		if (instance.baseEntity != null)
		{
			stream.WriteByte(18);
			obj.SetLength(0L);
			BaseEntity.SerializeDelta(obj, instance.baseEntity, previous.baseEntity);
			uint num2 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num2);
			stream.Write(obj.GetBuffer(), 0, (int)num2);
		}
		if (instance.basePlayer != null)
		{
			stream.WriteByte(26);
			obj.SetLength(0L);
			BasePlayer.SerializeDelta(obj, instance.basePlayer, previous.basePlayer);
			uint num3 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num3);
			stream.Write(obj.GetBuffer(), 0, (int)num3);
		}
		if (instance.worldItem != null)
		{
			stream.WriteByte(34);
			obj.SetLength(0L);
			WorldItem.SerializeDelta(obj, instance.worldItem, previous.worldItem);
			uint num4 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num4);
			stream.Write(obj.GetBuffer(), 0, (int)num4);
		}
		if (instance.resource != null)
		{
			stream.WriteByte(42);
			obj.SetLength(0L);
			BaseResource.SerializeDelta(obj, instance.resource, previous.resource);
			uint num5 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num5);
			stream.Write(obj.GetBuffer(), 0, (int)num5);
		}
		if (instance.buildingBlock != null)
		{
			stream.WriteByte(50);
			obj.SetLength(0L);
			BuildingBlock.SerializeDelta(obj, instance.buildingBlock, previous.buildingBlock);
			uint num6 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num6);
			stream.Write(obj.GetBuffer(), 0, (int)num6);
		}
		if (instance.environment != null)
		{
			stream.WriteByte(58);
			obj.SetLength(0L);
			ProtoBuf.Environment.SerializeDelta(obj, instance.environment, previous.environment);
			uint num7 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num7);
			stream.Write(obj.GetBuffer(), 0, (int)num7);
		}
		if (instance.corpse != null)
		{
			stream.WriteByte(66);
			obj.SetLength(0L);
			Corpse.SerializeDelta(obj, instance.corpse, previous.corpse);
			uint num8 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num8);
			stream.Write(obj.GetBuffer(), 0, (int)num8);
		}
		if (instance.parent != null)
		{
			stream.WriteByte(82);
			obj.SetLength(0L);
			ParentInfo.SerializeDelta(obj, instance.parent, previous.parent);
			uint num9 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num9);
			stream.Write(obj.GetBuffer(), 0, (int)num9);
		}
		if (instance.keyLock != null)
		{
			stream.WriteByte(90);
			obj.SetLength(0L);
			KeyLock.SerializeDelta(obj, instance.keyLock, previous.keyLock);
			uint num10 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num10);
			stream.Write(obj.GetBuffer(), 0, (int)num10);
		}
		if (instance.codeLock != null)
		{
			stream.WriteByte(98);
			obj.SetLength(0L);
			CodeLock.SerializeDelta(obj, instance.codeLock, previous.codeLock);
			uint num11 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num11);
			stream.Write(obj.GetBuffer(), 0, (int)num11);
		}
		if (instance.entitySlots != null)
		{
			stream.WriteByte(106);
			obj.SetLength(0L);
			EntitySlots.SerializeDelta(obj, instance.entitySlots, previous.entitySlots);
			uint num12 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num12);
			stream.Write(obj.GetBuffer(), 0, (int)num12);
		}
		if (instance.buildingPrivilege != null)
		{
			stream.WriteByte(114);
			obj.SetLength(0L);
			BuildingPrivilege.SerializeDelta(obj, instance.buildingPrivilege, previous.buildingPrivilege);
			uint num13 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num13);
			stream.Write(obj.GetBuffer(), 0, (int)num13);
		}
		if (instance.storageBox != null)
		{
			stream.WriteByte(122);
			obj.SetLength(0L);
			StorageBox.SerializeDelta(obj, instance.storageBox, previous.storageBox);
			uint num14 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num14);
			stream.Write(obj.GetBuffer(), 0, (int)num14);
		}
		if (instance.heldEntity != null)
		{
			stream.WriteByte(130);
			stream.WriteByte(1);
			obj.SetLength(0L);
			HeldEntity.SerializeDelta(obj, instance.heldEntity, previous.heldEntity);
			uint num15 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num15);
			stream.Write(obj.GetBuffer(), 0, (int)num15);
		}
		if (instance.baseProjectile != null)
		{
			stream.WriteByte(138);
			stream.WriteByte(1);
			obj.SetLength(0L);
			BaseProjectile.SerializeDelta(obj, instance.baseProjectile, previous.baseProjectile);
			uint num16 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num16);
			stream.Write(obj.GetBuffer(), 0, (int)num16);
		}
		if (instance.baseNPC != null)
		{
			stream.WriteByte(146);
			stream.WriteByte(1);
			obj.SetLength(0L);
			BaseNPC.SerializeDelta(obj, instance.baseNPC, previous.baseNPC);
			uint num17 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num17);
			stream.Write(obj.GetBuffer(), 0, (int)num17);
		}
		if (instance.loot != null)
		{
			stream.WriteByte(154);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Loot.SerializeDelta(obj, instance.loot, previous.loot);
			uint num18 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num18);
			stream.Write(obj.GetBuffer(), 0, (int)num18);
		}
		if (instance.genericSpawner != null)
		{
			stream.WriteByte(162);
			stream.WriteByte(1);
			obj.SetLength(0L);
			GenericSpawner.SerializeDelta(obj, instance.genericSpawner, previous.genericSpawner);
			uint num19 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num19);
			stream.Write(obj.GetBuffer(), 0, (int)num19);
		}
		if (instance.sleepingBag != null)
		{
			stream.WriteByte(170);
			stream.WriteByte(1);
			obj.SetLength(0L);
			SleepingBag.SerializeDelta(obj, instance.sleepingBag, previous.sleepingBag);
			uint num20 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num20);
			stream.Write(obj.GetBuffer(), 0, (int)num20);
		}
		if (instance.lootableCorpse != null)
		{
			stream.WriteByte(178);
			stream.WriteByte(1);
			obj.SetLength(0L);
			LootableCorpse.SerializeDelta(obj, instance.lootableCorpse, previous.lootableCorpse);
			uint num21 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num21);
			stream.Write(obj.GetBuffer(), 0, (int)num21);
		}
		if (instance.sign != null)
		{
			stream.WriteByte(186);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Sign.SerializeDelta(obj, instance.sign, previous.sign);
			uint num22 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num22);
			stream.Write(obj.GetBuffer(), 0, (int)num22);
		}
		if (instance.baseCombat != null)
		{
			stream.WriteByte(194);
			stream.WriteByte(1);
			obj.SetLength(0L);
			BaseCombat.SerializeDelta(obj, instance.baseCombat, previous.baseCombat);
			uint num23 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num23);
			stream.Write(obj.GetBuffer(), 0, (int)num23);
		}
		if (instance.mapEntity != null)
		{
			stream.WriteByte(202);
			stream.WriteByte(1);
			obj.SetLength(0L);
			MapEntity.SerializeDelta(obj, instance.mapEntity, previous.mapEntity);
			uint num24 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num24);
			stream.Write(obj.GetBuffer(), 0, (int)num24);
		}
		if (instance.researchTable != null)
		{
			stream.WriteByte(210);
			stream.WriteByte(1);
			obj.SetLength(0L);
			ResearchTable.SerializeDelta(obj, instance.researchTable, previous.researchTable);
			uint num25 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num25);
			stream.Write(obj.GetBuffer(), 0, (int)num25);
		}
		if (instance.dudExplosive != null)
		{
			stream.WriteByte(218);
			stream.WriteByte(1);
			obj.SetLength(0L);
			DudExplosive.SerializeDelta(obj, instance.dudExplosive, previous.dudExplosive);
			uint num26 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num26);
			stream.Write(obj.GetBuffer(), 0, (int)num26);
		}
		if (instance.miningQuarry != null)
		{
			stream.WriteByte(226);
			stream.WriteByte(1);
			obj.SetLength(0L);
			MiningQuarry.SerializeDelta(obj, instance.miningQuarry, previous.miningQuarry);
			uint num27 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num27);
			stream.Write(obj.GetBuffer(), 0, (int)num27);
		}
		if (instance.plantEntity != null)
		{
			stream.WriteByte(234);
			stream.WriteByte(1);
			obj.SetLength(0L);
			PlantEntity.SerializeDelta(obj, instance.plantEntity, previous.plantEntity);
			uint num28 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num28);
			stream.Write(obj.GetBuffer(), 0, (int)num28);
		}
		if (instance.helicopter != null)
		{
			stream.WriteByte(242);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Helicopter.SerializeDelta(obj, instance.helicopter, previous.helicopter);
			uint num29 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num29);
			stream.Write(obj.GetBuffer(), 0, (int)num29);
		}
		if (instance.landmine != null)
		{
			stream.WriteByte(250);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Landmine.SerializeDelta(obj, instance.landmine, previous.landmine);
			uint num30 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num30);
			stream.Write(obj.GetBuffer(), 0, (int)num30);
		}
		if (instance.autoturret != null)
		{
			stream.WriteByte(130);
			stream.WriteByte(2);
			obj.SetLength(0L);
			AutoTurret.SerializeDelta(obj, instance.autoturret, previous.autoturret);
			uint num31 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num31);
			stream.Write(obj.GetBuffer(), 0, (int)num31);
		}
		if (instance.sphereEntity != null)
		{
			stream.WriteByte(138);
			stream.WriteByte(2);
			obj.SetLength(0L);
			SphereEntity.SerializeDelta(obj, instance.sphereEntity, previous.sphereEntity);
			uint num32 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num32);
			stream.Write(obj.GetBuffer(), 0, (int)num32);
		}
		if (instance.stabilityEntity != null)
		{
			stream.WriteByte(146);
			stream.WriteByte(2);
			obj.SetLength(0L);
			StabilityEntity.SerializeDelta(obj, instance.stabilityEntity, previous.stabilityEntity);
			uint num33 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num33);
			stream.Write(obj.GetBuffer(), 0, (int)num33);
		}
		if (instance.ownerInfo != null)
		{
			stream.WriteByte(154);
			stream.WriteByte(2);
			obj.SetLength(0L);
			OwnerInfo.SerializeDelta(obj, instance.ownerInfo, previous.ownerInfo);
			uint num34 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num34);
			stream.Write(obj.GetBuffer(), 0, (int)num34);
		}
		if (instance.decayEntity != null)
		{
			stream.WriteByte(162);
			stream.WriteByte(2);
			obj.SetLength(0L);
			DecayEntity.SerializeDelta(obj, instance.decayEntity, previous.decayEntity);
			uint num35 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num35);
			stream.Write(obj.GetBuffer(), 0, (int)num35);
		}
		if (instance.spawnable != null)
		{
			stream.WriteByte(170);
			stream.WriteByte(2);
			obj.SetLength(0L);
			Spawnable.SerializeDelta(obj, instance.spawnable, previous.spawnable);
			uint num36 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num36);
			stream.Write(obj.GetBuffer(), 0, (int)num36);
		}
		if (instance.servergib != null)
		{
			stream.WriteByte(178);
			stream.WriteByte(2);
			obj.SetLength(0L);
			ServerGib.SerializeDelta(obj, instance.servergib, previous.servergib);
			uint num37 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num37);
			stream.Write(obj.GetBuffer(), 0, (int)num37);
		}
		if (instance.vendingMachine != null)
		{
			stream.WriteByte(186);
			stream.WriteByte(2);
			obj.SetLength(0L);
			VendingMachine.SerializeDelta(obj, instance.vendingMachine, previous.vendingMachine);
			uint num38 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num38);
			stream.Write(obj.GetBuffer(), 0, (int)num38);
		}
		if (instance.spinnerWheel != null)
		{
			stream.WriteByte(194);
			stream.WriteByte(2);
			obj.SetLength(0L);
			SpinnerWheel.SerializeDelta(obj, instance.spinnerWheel, previous.spinnerWheel);
			uint num39 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num39);
			stream.Write(obj.GetBuffer(), 0, (int)num39);
		}
		if (instance.lift != null)
		{
			stream.WriteByte(202);
			stream.WriteByte(2);
			obj.SetLength(0L);
			Lift.SerializeDelta(obj, instance.lift, previous.lift);
			uint num40 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num40);
			stream.Write(obj.GetBuffer(), 0, (int)num40);
		}
		if (instance.bradley != null)
		{
			stream.WriteByte(210);
			stream.WriteByte(2);
			obj.SetLength(0L);
			BradleyAPC.SerializeDelta(obj, instance.bradley, previous.bradley);
			uint num41 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num41);
			stream.Write(obj.GetBuffer(), 0, (int)num41);
		}
		if (instance.waterwell != null)
		{
			stream.WriteByte(218);
			stream.WriteByte(2);
			obj.SetLength(0L);
			WaterWell.SerializeDelta(obj, instance.waterwell, previous.waterwell);
			uint num42 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num42);
			stream.Write(obj.GetBuffer(), 0, (int)num42);
		}
		stream.WriteByte(160);
		stream.WriteByte(6);
		ProtocolParser.WriteBool(stream, instance.createdThisFrame);
		Pool.FreeMemoryStream(ref obj);
	}

	public static void Serialize(Stream stream, Entity instance)
	{
		MemoryStream obj = Pool.Get<MemoryStream>();
		if (instance.baseNetworkable != null)
		{
			stream.WriteByte(10);
			obj.SetLength(0L);
			BaseNetworkable.Serialize(obj, instance.baseNetworkable);
			uint num = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num);
			stream.Write(obj.GetBuffer(), 0, (int)num);
		}
		if (instance.baseEntity != null)
		{
			stream.WriteByte(18);
			obj.SetLength(0L);
			BaseEntity.Serialize(obj, instance.baseEntity);
			uint num2 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num2);
			stream.Write(obj.GetBuffer(), 0, (int)num2);
		}
		if (instance.basePlayer != null)
		{
			stream.WriteByte(26);
			obj.SetLength(0L);
			BasePlayer.Serialize(obj, instance.basePlayer);
			uint num3 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num3);
			stream.Write(obj.GetBuffer(), 0, (int)num3);
		}
		if (instance.worldItem != null)
		{
			stream.WriteByte(34);
			obj.SetLength(0L);
			WorldItem.Serialize(obj, instance.worldItem);
			uint num4 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num4);
			stream.Write(obj.GetBuffer(), 0, (int)num4);
		}
		if (instance.resource != null)
		{
			stream.WriteByte(42);
			obj.SetLength(0L);
			BaseResource.Serialize(obj, instance.resource);
			uint num5 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num5);
			stream.Write(obj.GetBuffer(), 0, (int)num5);
		}
		if (instance.buildingBlock != null)
		{
			stream.WriteByte(50);
			obj.SetLength(0L);
			BuildingBlock.Serialize(obj, instance.buildingBlock);
			uint num6 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num6);
			stream.Write(obj.GetBuffer(), 0, (int)num6);
		}
		if (instance.environment != null)
		{
			stream.WriteByte(58);
			obj.SetLength(0L);
			ProtoBuf.Environment.Serialize(obj, instance.environment);
			uint num7 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num7);
			stream.Write(obj.GetBuffer(), 0, (int)num7);
		}
		if (instance.corpse != null)
		{
			stream.WriteByte(66);
			obj.SetLength(0L);
			Corpse.Serialize(obj, instance.corpse);
			uint num8 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num8);
			stream.Write(obj.GetBuffer(), 0, (int)num8);
		}
		if (instance.parent != null)
		{
			stream.WriteByte(82);
			obj.SetLength(0L);
			ParentInfo.Serialize(obj, instance.parent);
			uint num9 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num9);
			stream.Write(obj.GetBuffer(), 0, (int)num9);
		}
		if (instance.keyLock != null)
		{
			stream.WriteByte(90);
			obj.SetLength(0L);
			KeyLock.Serialize(obj, instance.keyLock);
			uint num10 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num10);
			stream.Write(obj.GetBuffer(), 0, (int)num10);
		}
		if (instance.codeLock != null)
		{
			stream.WriteByte(98);
			obj.SetLength(0L);
			CodeLock.Serialize(obj, instance.codeLock);
			uint num11 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num11);
			stream.Write(obj.GetBuffer(), 0, (int)num11);
		}
		if (instance.entitySlots != null)
		{
			stream.WriteByte(106);
			obj.SetLength(0L);
			EntitySlots.Serialize(obj, instance.entitySlots);
			uint num12 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num12);
			stream.Write(obj.GetBuffer(), 0, (int)num12);
		}
		if (instance.buildingPrivilege != null)
		{
			stream.WriteByte(114);
			obj.SetLength(0L);
			BuildingPrivilege.Serialize(obj, instance.buildingPrivilege);
			uint num13 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num13);
			stream.Write(obj.GetBuffer(), 0, (int)num13);
		}
		if (instance.storageBox != null)
		{
			stream.WriteByte(122);
			obj.SetLength(0L);
			StorageBox.Serialize(obj, instance.storageBox);
			uint num14 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num14);
			stream.Write(obj.GetBuffer(), 0, (int)num14);
		}
		if (instance.heldEntity != null)
		{
			stream.WriteByte(130);
			stream.WriteByte(1);
			obj.SetLength(0L);
			HeldEntity.Serialize(obj, instance.heldEntity);
			uint num15 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num15);
			stream.Write(obj.GetBuffer(), 0, (int)num15);
		}
		if (instance.baseProjectile != null)
		{
			stream.WriteByte(138);
			stream.WriteByte(1);
			obj.SetLength(0L);
			BaseProjectile.Serialize(obj, instance.baseProjectile);
			uint num16 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num16);
			stream.Write(obj.GetBuffer(), 0, (int)num16);
		}
		if (instance.baseNPC != null)
		{
			stream.WriteByte(146);
			stream.WriteByte(1);
			obj.SetLength(0L);
			BaseNPC.Serialize(obj, instance.baseNPC);
			uint num17 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num17);
			stream.Write(obj.GetBuffer(), 0, (int)num17);
		}
		if (instance.loot != null)
		{
			stream.WriteByte(154);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Loot.Serialize(obj, instance.loot);
			uint num18 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num18);
			stream.Write(obj.GetBuffer(), 0, (int)num18);
		}
		if (instance.genericSpawner != null)
		{
			stream.WriteByte(162);
			stream.WriteByte(1);
			obj.SetLength(0L);
			GenericSpawner.Serialize(obj, instance.genericSpawner);
			uint num19 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num19);
			stream.Write(obj.GetBuffer(), 0, (int)num19);
		}
		if (instance.sleepingBag != null)
		{
			stream.WriteByte(170);
			stream.WriteByte(1);
			obj.SetLength(0L);
			SleepingBag.Serialize(obj, instance.sleepingBag);
			uint num20 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num20);
			stream.Write(obj.GetBuffer(), 0, (int)num20);
		}
		if (instance.lootableCorpse != null)
		{
			stream.WriteByte(178);
			stream.WriteByte(1);
			obj.SetLength(0L);
			LootableCorpse.Serialize(obj, instance.lootableCorpse);
			uint num21 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num21);
			stream.Write(obj.GetBuffer(), 0, (int)num21);
		}
		if (instance.sign != null)
		{
			stream.WriteByte(186);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Sign.Serialize(obj, instance.sign);
			uint num22 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num22);
			stream.Write(obj.GetBuffer(), 0, (int)num22);
		}
		if (instance.baseCombat != null)
		{
			stream.WriteByte(194);
			stream.WriteByte(1);
			obj.SetLength(0L);
			BaseCombat.Serialize(obj, instance.baseCombat);
			uint num23 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num23);
			stream.Write(obj.GetBuffer(), 0, (int)num23);
		}
		if (instance.mapEntity != null)
		{
			stream.WriteByte(202);
			stream.WriteByte(1);
			obj.SetLength(0L);
			MapEntity.Serialize(obj, instance.mapEntity);
			uint num24 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num24);
			stream.Write(obj.GetBuffer(), 0, (int)num24);
		}
		if (instance.researchTable != null)
		{
			stream.WriteByte(210);
			stream.WriteByte(1);
			obj.SetLength(0L);
			ResearchTable.Serialize(obj, instance.researchTable);
			uint num25 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num25);
			stream.Write(obj.GetBuffer(), 0, (int)num25);
		}
		if (instance.dudExplosive != null)
		{
			stream.WriteByte(218);
			stream.WriteByte(1);
			obj.SetLength(0L);
			DudExplosive.Serialize(obj, instance.dudExplosive);
			uint num26 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num26);
			stream.Write(obj.GetBuffer(), 0, (int)num26);
		}
		if (instance.miningQuarry != null)
		{
			stream.WriteByte(226);
			stream.WriteByte(1);
			obj.SetLength(0L);
			MiningQuarry.Serialize(obj, instance.miningQuarry);
			uint num27 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num27);
			stream.Write(obj.GetBuffer(), 0, (int)num27);
		}
		if (instance.plantEntity != null)
		{
			stream.WriteByte(234);
			stream.WriteByte(1);
			obj.SetLength(0L);
			PlantEntity.Serialize(obj, instance.plantEntity);
			uint num28 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num28);
			stream.Write(obj.GetBuffer(), 0, (int)num28);
		}
		if (instance.helicopter != null)
		{
			stream.WriteByte(242);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Helicopter.Serialize(obj, instance.helicopter);
			uint num29 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num29);
			stream.Write(obj.GetBuffer(), 0, (int)num29);
		}
		if (instance.landmine != null)
		{
			stream.WriteByte(250);
			stream.WriteByte(1);
			obj.SetLength(0L);
			Landmine.Serialize(obj, instance.landmine);
			uint num30 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num30);
			stream.Write(obj.GetBuffer(), 0, (int)num30);
		}
		if (instance.autoturret != null)
		{
			stream.WriteByte(130);
			stream.WriteByte(2);
			obj.SetLength(0L);
			AutoTurret.Serialize(obj, instance.autoturret);
			uint num31 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num31);
			stream.Write(obj.GetBuffer(), 0, (int)num31);
		}
		if (instance.sphereEntity != null)
		{
			stream.WriteByte(138);
			stream.WriteByte(2);
			obj.SetLength(0L);
			SphereEntity.Serialize(obj, instance.sphereEntity);
			uint num32 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num32);
			stream.Write(obj.GetBuffer(), 0, (int)num32);
		}
		if (instance.stabilityEntity != null)
		{
			stream.WriteByte(146);
			stream.WriteByte(2);
			obj.SetLength(0L);
			StabilityEntity.Serialize(obj, instance.stabilityEntity);
			uint num33 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num33);
			stream.Write(obj.GetBuffer(), 0, (int)num33);
		}
		if (instance.ownerInfo != null)
		{
			stream.WriteByte(154);
			stream.WriteByte(2);
			obj.SetLength(0L);
			OwnerInfo.Serialize(obj, instance.ownerInfo);
			uint num34 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num34);
			stream.Write(obj.GetBuffer(), 0, (int)num34);
		}
		if (instance.decayEntity != null)
		{
			stream.WriteByte(162);
			stream.WriteByte(2);
			obj.SetLength(0L);
			DecayEntity.Serialize(obj, instance.decayEntity);
			uint num35 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num35);
			stream.Write(obj.GetBuffer(), 0, (int)num35);
		}
		if (instance.spawnable != null)
		{
			stream.WriteByte(170);
			stream.WriteByte(2);
			obj.SetLength(0L);
			Spawnable.Serialize(obj, instance.spawnable);
			uint num36 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num36);
			stream.Write(obj.GetBuffer(), 0, (int)num36);
		}
		if (instance.servergib != null)
		{
			stream.WriteByte(178);
			stream.WriteByte(2);
			obj.SetLength(0L);
			ServerGib.Serialize(obj, instance.servergib);
			uint num37 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num37);
			stream.Write(obj.GetBuffer(), 0, (int)num37);
		}
		if (instance.vendingMachine != null)
		{
			stream.WriteByte(186);
			stream.WriteByte(2);
			obj.SetLength(0L);
			VendingMachine.Serialize(obj, instance.vendingMachine);
			uint num38 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num38);
			stream.Write(obj.GetBuffer(), 0, (int)num38);
		}
		if (instance.spinnerWheel != null)
		{
			stream.WriteByte(194);
			stream.WriteByte(2);
			obj.SetLength(0L);
			SpinnerWheel.Serialize(obj, instance.spinnerWheel);
			uint num39 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num39);
			stream.Write(obj.GetBuffer(), 0, (int)num39);
		}
		if (instance.lift != null)
		{
			stream.WriteByte(202);
			stream.WriteByte(2);
			obj.SetLength(0L);
			Lift.Serialize(obj, instance.lift);
			uint num40 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num40);
			stream.Write(obj.GetBuffer(), 0, (int)num40);
		}
		if (instance.bradley != null)
		{
			stream.WriteByte(210);
			stream.WriteByte(2);
			obj.SetLength(0L);
			BradleyAPC.Serialize(obj, instance.bradley);
			uint num41 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num41);
			stream.Write(obj.GetBuffer(), 0, (int)num41);
		}
		if (instance.waterwell != null)
		{
			stream.WriteByte(218);
			stream.WriteByte(2);
			obj.SetLength(0L);
			WaterWell.Serialize(obj, instance.waterwell);
			uint num42 = (uint)obj.Length;
			ProtocolParser.WriteUInt32(stream, num42);
			stream.Write(obj.GetBuffer(), 0, (int)num42);
		}
		stream.WriteByte(160);
		stream.WriteByte(6);
		ProtocolParser.WriteBool(stream, instance.createdThisFrame);
		Pool.FreeMemoryStream(ref obj);
	}

	public byte[] ToProtoBytes()
	{
		return SerializeToBytes(this);
	}

	public void ToProto(Stream stream)
	{
		Serialize(stream, this);
	}

	public static byte[] SerializeToBytes(Entity instance)
	{
		using MemoryStream memoryStream = new MemoryStream();
		Serialize(memoryStream, instance);
		return memoryStream.ToArray();
	}

	public static void SerializeLengthDelimited(Stream stream, Entity instance)
	{
		byte[] array = SerializeToBytes(instance);
		ProtocolParser.WriteUInt32(stream, (uint)array.Length);
		stream.Write(array, 0, array.Length);
	}
}
