using UnityEngine;

public class BitUtility
{
	private const float float2byte = 255f;

	private const float byte2float = 0.003921569f;

	private const float float2short = 32766f;

	private const float short2float = 3.051944E-05f;

	public static byte Float2Byte(float f)
	{
		Union32 union = default(Union32);
		union.f = f;
		union.b1 = 0;
		return (byte)(union.f * 255f + 0.5f);
	}

	public static float Byte2Float(int b)
	{
		return (float)b * 0.003921569f;
	}

	public static short Float2Short(float f)
	{
		return (short)(f * 32766f + 0.5f);
	}

	public static float Short2Float(int b)
	{
		return (float)b * 3.051944E-05f;
	}

	public static Color32 EncodeFloat(float f)
	{
		//IL_0028: Unknown result type (might be due to invalid IL or missing references)
		Union32 union = default(Union32);
		union.f = f;
		return new Color32(union.b1, union.b2, union.b3, union.b4);
	}

	public static float DecodeFloat(Color32 c)
	{
		//IL_000a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_0024: Unknown result type (might be due to invalid IL or missing references)
		//IL_0031: Unknown result type (might be due to invalid IL or missing references)
		Union32 union = default(Union32);
		union.b1 = c.r;
		union.b2 = c.g;
		union.b3 = c.b;
		union.b4 = c.a;
		return union.f;
	}

	public static Color32 EncodeInt(int i)
	{
		//IL_0028: Unknown result type (might be due to invalid IL or missing references)
		Union32 union = default(Union32);
		union.i = i;
		return new Color32(union.b1, union.b2, union.b3, union.b4);
	}

	public static int DecodeInt(Color32 c)
	{
		//IL_000a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_0024: Unknown result type (might be due to invalid IL or missing references)
		//IL_0031: Unknown result type (might be due to invalid IL or missing references)
		Union32 union = default(Union32);
		union.b1 = c.r;
		union.b2 = c.g;
		union.b3 = c.b;
		union.b4 = c.a;
		return union.i;
	}

	public static Color32 EncodeShort(short i)
	{
		//IL_001e: Unknown result type (might be due to invalid IL or missing references)
		Union16 union = default(Union16);
		union.i = i;
		return new Color32(union.b1, (byte)0, union.b2, (byte)1);
	}

	public static short DecodeShort(Color32 c)
	{
		//IL_000a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		Union16 union = default(Union16);
		union.b1 = c.r;
		union.b2 = c.b;
		return union.i;
	}

	public static Color EncodeNormal(Vector3 n)
	{
		//IL_0000: Unknown result type (might be due to invalid IL or missing references)
		//IL_0001: Unknown result type (might be due to invalid IL or missing references)
		//IL_0006: Unknown result type (might be due to invalid IL or missing references)
		//IL_0010: Unknown result type (might be due to invalid IL or missing references)
		//IL_0015: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_001d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0023: Unknown result type (might be due to invalid IL or missing references)
		//IL_0029: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		n = (n + Vector3.one) * 0.5f;
		return new Color(n.z, n.z, n.z, n.x);
	}

	public static Vector3 DecodeNormal(Color c)
	{
		//IL_0000: Unknown result type (might be due to invalid IL or missing references)
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		//IL_0041: Unknown result type (might be due to invalid IL or missing references)
		float num = c.a * 2f - 1f;
		float num2 = c.g * 2f - 1f;
		float num3 = Mathf.Sqrt(1f - Mathf.Clamp01(num * num + num2 * num2));
		return new Vector3(num, num3, num2);
	}

	public static Color32 EncodeVector(Vector4 v)
	{
		//IL_0000: Unknown result type (might be due to invalid IL or missing references)
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0016: Unknown result type (might be due to invalid IL or missing references)
		//IL_0021: Unknown result type (might be due to invalid IL or missing references)
		//IL_002c: Unknown result type (might be due to invalid IL or missing references)
		return new Color32(Float2Byte(v.x), Float2Byte(v.y), Float2Byte(v.z), Float2Byte(v.w));
	}

	public static Vector4 DecodeVector(Color32 c)
	{
		//IL_0000: Unknown result type (might be due to invalid IL or missing references)
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0016: Unknown result type (might be due to invalid IL or missing references)
		//IL_0021: Unknown result type (might be due to invalid IL or missing references)
		//IL_002c: Unknown result type (might be due to invalid IL or missing references)
		return new Vector4(Byte2Float(c.r), Byte2Float(c.g), Byte2Float(c.b), Byte2Float(c.a));
	}

	public static Color32 EncodeVector2i(Vector2i v)
	{
		//IL_0050: Unknown result type (might be due to invalid IL or missing references)
		byte num = (byte)Mathf.Clamp(v.x, 0, 255);
		byte b = (byte)Mathf.Clamp(-v.x, 0, 255);
		byte b2 = (byte)Mathf.Clamp(v.y, 0, 255);
		byte b3 = (byte)Mathf.Clamp(-v.y, 0, 255);
		return new Color32(num, b, b2, b3);
	}

	public static Vector2i DecodeVector2i(Color32 c)
	{
		//IL_0000: Unknown result type (might be due to invalid IL or missing references)
		//IL_0006: Unknown result type (might be due to invalid IL or missing references)
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		return new Vector2i(c.r - c.g, c.b - c.a);
	}
}
