public class PoolCollection<T> : ICollection where T : class
{
	public T[] buffer;

	public long ItemsInStack { get; set; }

	public long ItemsInUse { get; set; }

	public long ItemsCreated { get; set; }

	public long ItemsTaken { get; set; }

	public long ItemsSpilled { get; set; }

	public PoolCollection()
	{
		Reset();
	}

	public void Reset()
	{
		if (buffer == null)
		{
			buffer = new T[512];
		}
		else
		{
			buffer = new T[buffer.Length];
		}
		ItemsInStack = 0L;
		ItemsInUse = 0L;
		ItemsCreated = 0L;
		ItemsTaken = 0L;
		ItemsSpilled = 0L;
	}

	public void Add(T obj)
	{
		if (obj is IPooled pooled)
		{
			pooled.EnterPool();
		}
		if (ItemsInStack >= buffer.Length)
		{
			ItemsSpilled++;
			ItemsInUse--;
		}
		else
		{
			buffer[ItemsInStack] = obj;
			ItemsInStack++;
			ItemsInUse--;
		}
	}

	void ICollection.Add(object obj)
	{
		Add((T)obj);
	}
}
