using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Oxide.Core;
using Oxide.Game.Rust.Cui;
using UnityEngine;

public static class CuiHelper
{
	public static string ToJson(List<CuiElement> elements, bool format = false)
	{
		//IL_0008: Unknown result type (might be due to invalid IL or missing references)
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0019: Expected O, but got Unknown
		return JsonConvert.SerializeObject((object)elements, (Formatting)(format ? 1 : 0), new JsonSerializerSettings
		{
			DefaultValueHandling = (DefaultValueHandling)1
		}).Replace("\\n", "\n");
	}

	public static List<CuiElement> FromJson(string json)
	{
		return JsonConvert.DeserializeObject<List<CuiElement>>(json);
	}

	public static string GetGuid()
	{
		return Guid.NewGuid().ToString().Replace("-", string.Empty);
	}

	public static bool AddUi(BasePlayer player, List<CuiElement> elements)
	{
		return AddUi(player, ToJson(elements));
	}

	public static bool AddUi(BasePlayer player, string json)
	{
		//IL_0031: Unknown result type (might be due to invalid IL or missing references)
		if (((BaseNetworkable)(player?)).net != null && Interface.CallHook("CanUseUI", (object)player, (object)json) == null)
		{
			((BaseEntity)CommunityEntity.ServerInstance).ClientRPC<string>(RpcTarget.Player("AddUI", ((BaseNetworkable)player).net.connection), json);
			return true;
		}
		return false;
	}

	public static bool DestroyUi(BasePlayer player, string elem)
	{
		//IL_0030: Unknown result type (might be due to invalid IL or missing references)
		if (((BaseNetworkable)(player?)).net != null)
		{
			Interface.CallHook("OnDestroyUI", (object)player, (object)elem);
			((BaseEntity)CommunityEntity.ServerInstance).ClientRPC<string>(RpcTarget.Player("DestroyUI", ((BaseNetworkable)player).net.connection), elem);
			return true;
		}
		return false;
	}

	public static void SetColor(this ICuiColor elem, Color color)
	{
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		//IL_001c: Unknown result type (might be due to invalid IL or missing references)
		//IL_002a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0038: Unknown result type (might be due to invalid IL or missing references)
		elem.Color = $"{color.r} {color.g} {color.b} {color.a}";
	}

	public static Color GetColor(this ICuiColor elem)
	{
		//IL_0006: Unknown result type (might be due to invalid IL or missing references)
		return ColorEx.Parse(elem.Color);
	}
}
