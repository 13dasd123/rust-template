using System;
using System.Runtime.InteropServices;
using SteamNative;

[StructLayout(LayoutKind.Sequential, Pack = 8)]
internal struct SteamParamStringArray_t
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct PackSmall
	{
		internal IntPtr Strings;

		internal int NumStrings;

		public static implicit operator SteamParamStringArray_t(PackSmall d)
		{
			SteamParamStringArray_t result = default(SteamParamStringArray_t);
			result.Strings = d.Strings;
			result.NumStrings = d.NumStrings;
			return result;
		}
	}

	internal IntPtr Strings;

	internal int NumStrings;

	internal static SteamParamStringArray_t FromPointer(IntPtr p)
	{
		if (Platform.PackSmall)
		{
			return (PackSmall)Marshal.PtrToStructure(p, typeof(PackSmall));
		}
		return (SteamParamStringArray_t)Marshal.PtrToStructure(p, typeof(SteamParamStringArray_t));
	}

	internal static int StructSize()
	{
		if (Platform.PackSmall)
		{
			return Marshal.SizeOf(typeof(PackSmall));
		}
		return Marshal.SizeOf(typeof(SteamParamStringArray_t));
	}
}
