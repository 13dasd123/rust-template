using System;
using Facepunch.Steamworks;
using SteamNative;

internal class SteamParentalSettings : IDisposable
{
	internal Platform.Interface platform;

	internal BaseSteamworks steamworks;

	public bool IsValid => platform != null && platform.IsValid;

	internal SteamParentalSettings(BaseSteamworks steamworks, IntPtr pointer)
	{
		this.steamworks = steamworks;
		if (Platform.IsWindows64)
		{
			platform = new Platform.Win64(pointer);
		}
		else if (Platform.IsWindows32)
		{
			platform = new Platform.Win32(pointer);
		}
		else if (Platform.IsLinux32)
		{
			platform = new Platform.Linux32(pointer);
		}
		else if (Platform.IsLinux64)
		{
			platform = new Platform.Linux64(pointer);
		}
		else if (Platform.IsOsx)
		{
			platform = new Platform.Mac(pointer);
		}
	}

	public virtual void Dispose()
	{
		if (platform != null)
		{
			platform.Dispose();
			platform = null;
		}
	}

	public bool BIsAppBlocked(AppId_t nAppID)
	{
		return platform.ISteamParentalSettings_BIsAppBlocked(nAppID.Value);
	}

	public bool BIsAppInBlockList(AppId_t nAppID)
	{
		return platform.ISteamParentalSettings_BIsAppInBlockList(nAppID.Value);
	}

	public bool BIsFeatureBlocked(ParentalFeature eFeature)
	{
		return platform.ISteamParentalSettings_BIsFeatureBlocked(eFeature);
	}

	public bool BIsFeatureInBlockList(ParentalFeature eFeature)
	{
		return platform.ISteamParentalSettings_BIsFeatureInBlockList(eFeature);
	}

	public bool BIsParentalLockEnabled()
	{
		return platform.ISteamParentalSettings_BIsParentalLockEnabled();
	}

	public bool BIsParentalLockLocked()
	{
		return platform.ISteamParentalSettings_BIsParentalLockLocked();
	}
}
