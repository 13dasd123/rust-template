using System;
using Facepunch.Steamworks;

public class Screenshots
{
	internal Client client;

	internal Screenshots(Client c)
	{
		client = c;
	}

	public void Trigger()
	{
		client.native.screenshots.TriggerScreenshot();
	}

	public unsafe void Write(byte[] rgbData, int width, int height)
	{
		if (rgbData == null)
		{
			throw new ArgumentNullException("rgbData");
		}
		if (width < 1)
		{
			throw new ArgumentOutOfRangeException("width", width, string.Format("Expected {0} to be at least 1.", "width"));
		}
		if (height < 1)
		{
			throw new ArgumentOutOfRangeException("height", height, string.Format("Expected {0} to be at least 1.", "height"));
		}
		int num = width * height * 3;
		if (rgbData.Length < num)
		{
			throw new ArgumentException("rgbData", string.Format("Expected {0} to contain at least {1} elements (actual size: {2}).", "rgbData", num, rgbData.Length));
		}
		fixed (byte* ptr = rgbData)
		{
			client.native.screenshots.WriteScreenshot((IntPtr)ptr, (uint)rgbData.Length, width, height);
		}
	}

	public void AddScreenshotToLibrary(string filename, string thumbnailFilename, int width, int height)
	{
		client.native.screenshots.AddScreenshotToLibrary(filename, thumbnailFilename, width, height);
	}

	public void AddScreenshotToLibrary(string filename, int width, int height)
	{
		client.native.screenshots.AddScreenshotToLibrary(filename, null, width, height);
	}
}
