using System;
using Facepunch.Steamworks;
using SteamNative;

public class ServerAuth
{
	public enum Status
	{
		OK,
		UserNotConnectedToSteam,
		NoLicenseOrExpired,
		VACBanned,
		LoggedInElseWhere,
		VACCheckTimedOut,
		AuthTicketCanceled,
		AuthTicketInvalidAlreadyUsed,
		AuthTicketInvalid,
		PublisherIssuedBan
	}

	internal Server server;

	public Action<ulong, ulong, Status> OnAuthChange;

	internal ServerAuth(Server s)
	{
		server = s;
		server.RegisterCallback<ValidateAuthTicketResponse_t>(OnAuthTicketValidate);
	}

	private void OnAuthTicketValidate(ValidateAuthTicketResponse_t data)
	{
		if (OnAuthChange != null)
		{
			OnAuthChange(data.SteamID, data.OwnerSteamID, (Status)data.AuthSessionResponse);
		}
	}

	public unsafe bool StartSession(byte[] data, ulong steamid)
	{
		fixed (byte* ptr = data)
		{
			if (server.native.gameServer.BeginAuthSession((IntPtr)ptr, data.Length, steamid) == BeginAuthSessionResult.OK)
			{
				return true;
			}
			return false;
		}
	}

	public void EndSession(ulong steamid)
	{
		server.native.gameServer.EndAuthSession(steamid);
	}
}
