using System;
using Facepunch.Steamworks;
using SteamNative;

public class Image
{
	public int Id { get; internal set; }

	public int Width { get; internal set; }

	public int Height { get; internal set; }

	public byte[] Data { get; internal set; }

	public bool IsLoaded { get; internal set; }

	public bool IsError { get; internal set; }

	internal unsafe bool TryLoad(SteamUtils utils)
	{
		if (IsLoaded)
		{
			return true;
		}
		uint pnWidth = 0u;
		uint pnHeight = 0u;
		if (!utils.GetImageSize(Id, out pnWidth, out pnHeight))
		{
			IsError = true;
			return false;
		}
		byte[] array = new byte[pnWidth * pnHeight * 4];
		fixed (byte* ptr = array)
		{
			if (!utils.GetImageRGBA(Id, (IntPtr)ptr, array.Length))
			{
				IsError = true;
				return false;
			}
		}
		Width = (int)pnWidth;
		Height = (int)pnHeight;
		Data = array;
		IsLoaded = true;
		IsError = false;
		return true;
	}

	public Color GetPixel(int x, int y)
	{
		if (!IsLoaded)
		{
			throw new Exception("Image not loaded");
		}
		if (x < 0 || x >= Width)
		{
			throw new Exception("x out of bounds");
		}
		if (y < 0 || y >= Height)
		{
			throw new Exception("y out of bounds");
		}
		Color result = default(Color);
		int num = (y * Width + x) * 4;
		result.r = Data[num];
		result.g = Data[num + 1];
		result.b = Data[num + 2];
		result.a = Data[num + 3];
		return result;
	}
}
