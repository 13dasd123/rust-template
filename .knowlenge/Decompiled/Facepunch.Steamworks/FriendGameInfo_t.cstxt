using System;
using System.Runtime.InteropServices;
using SteamNative;

[StructLayout(LayoutKind.Sequential, Pack = 4)]
internal struct FriendGameInfo_t
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct PackSmall
	{
		internal ulong GameID;

		internal uint GameIP;

		internal ushort GamePort;

		internal ushort QueryPort;

		internal ulong SteamIDLobby;

		public static implicit operator FriendGameInfo_t(PackSmall d)
		{
			FriendGameInfo_t result = default(FriendGameInfo_t);
			result.GameID = d.GameID;
			result.GameIP = d.GameIP;
			result.GamePort = d.GamePort;
			result.QueryPort = d.QueryPort;
			result.SteamIDLobby = d.SteamIDLobby;
			return result;
		}
	}

	internal ulong GameID;

	internal uint GameIP;

	internal ushort GamePort;

	internal ushort QueryPort;

	internal ulong SteamIDLobby;

	internal static FriendGameInfo_t FromPointer(IntPtr p)
	{
		if (Platform.PackSmall)
		{
			return (PackSmall)Marshal.PtrToStructure(p, typeof(PackSmall));
		}
		return (FriendGameInfo_t)Marshal.PtrToStructure(p, typeof(FriendGameInfo_t));
	}

	internal static int StructSize()
	{
		if (Platform.PackSmall)
		{
			return Marshal.SizeOf(typeof(PackSmall));
		}
		return Marshal.SizeOf(typeof(FriendGameInfo_t));
	}
}
