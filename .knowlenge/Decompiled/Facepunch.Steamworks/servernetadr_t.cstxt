using System;
using System.Runtime.InteropServices;
using SteamNative;

[StructLayout(LayoutKind.Sequential, Pack = 8)]
internal struct servernetadr_t
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct PackSmall
	{
		internal ushort ConnectionPort;

		internal ushort QueryPort;

		internal uint IP;

		public static implicit operator servernetadr_t(PackSmall d)
		{
			servernetadr_t result = default(servernetadr_t);
			result.ConnectionPort = d.ConnectionPort;
			result.QueryPort = d.QueryPort;
			result.IP = d.IP;
			return result;
		}
	}

	internal ushort ConnectionPort;

	internal ushort QueryPort;

	internal uint IP;

	internal static servernetadr_t FromPointer(IntPtr p)
	{
		if (Platform.PackSmall)
		{
			return (PackSmall)Marshal.PtrToStructure(p, typeof(PackSmall));
		}
		return (servernetadr_t)Marshal.PtrToStructure(p, typeof(servernetadr_t));
	}

	internal static int StructSize()
	{
		if (Platform.PackSmall)
		{
			return Marshal.SizeOf(typeof(PackSmall));
		}
		return Marshal.SizeOf(typeof(servernetadr_t));
	}
}
