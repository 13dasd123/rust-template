using System;
using System.Collections.Generic;
using Facepunch.Steamworks;

public class Friends
{
	public enum AvatarSize
	{
		Small,
		Medium,
		Large
	}

	internal Client client;

	private List<SteamFriend> _allFriends;

	public IEnumerable<SteamFriend> All
	{
		get
		{
			if (_allFriends == null)
			{
				_allFriends = new List<SteamFriend>();
				Refresh();
			}
			return _allFriends;
		}
	}

	public IEnumerable<SteamFriend> AllFriends
	{
		get
		{
			foreach (SteamFriend friend in All)
			{
				if (friend.IsFriend)
				{
					yield return friend;
				}
			}
		}
	}

	public IEnumerable<SteamFriend> AllBlocked
	{
		get
		{
			foreach (SteamFriend friend in All)
			{
				if (friend.IsBlocked)
				{
					yield return friend;
				}
			}
		}
	}

	internal Friends(Client c)
	{
		client = c;
	}

	public bool UpdateInformation(ulong steamid)
	{
		return !client.native.friends.RequestUserInformation(steamid, bRequireNameOnly: false);
	}

	public string GetName(ulong steamid)
	{
		client.native.friends.RequestUserInformation(steamid, bRequireNameOnly: true);
		return client.native.friends.GetFriendPersonaName(steamid);
	}

	public void Refresh()
	{
		if (_allFriends == null)
		{
			_allFriends = new List<SteamFriend>();
		}
		_allFriends.Clear();
		int iFriendFlags = 65535;
		int friendCount = client.native.friends.GetFriendCount(iFriendFlags);
		for (int i = 0; i < friendCount; i++)
		{
			ulong friendByIndex = client.native.friends.GetFriendByIndex(i, iFriendFlags);
			_allFriends.Add(Get(friendByIndex));
		}
	}

	public Image GetAvatar(AvatarSize size, ulong steamid)
	{
		int num = 0;
		switch (size)
		{
		case AvatarSize.Small:
			num = client.native.friends.GetSmallFriendAvatar(steamid);
			break;
		case AvatarSize.Medium:
			num = client.native.friends.GetMediumFriendAvatar(steamid);
			break;
		case AvatarSize.Large:
			num = client.native.friends.GetLargeFriendAvatar(steamid);
			break;
		}
		Image image = new Image
		{
			Id = num
		};
		if (num == 0)
		{
			return image;
		}
		if (image.TryLoad(client.native.utils))
		{
			return image;
		}
		throw new NotImplementedException("Deferred Avatar Loading Todo");
	}

	public SteamFriend Get(ulong steamid)
	{
		SteamFriend steamFriend = new SteamFriend
		{
			Id = steamid,
			Client = client
		};
		steamFriend.Refresh();
		return steamFriend;
	}
}
