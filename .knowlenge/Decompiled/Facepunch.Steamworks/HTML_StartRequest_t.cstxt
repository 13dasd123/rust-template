using System;
using System.Runtime.InteropServices;
using SteamNative;

[StructLayout(LayoutKind.Sequential, Pack = 8)]
internal struct HTML_StartRequest_t
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct PackSmall
	{
		internal uint UnBrowserHandle;

		internal string PchURL;

		internal string PchTarget;

		internal string PchPostData;

		[MarshalAs(UnmanagedType.I1)]
		internal bool BIsRedirect;

		public static implicit operator HTML_StartRequest_t(PackSmall d)
		{
			HTML_StartRequest_t result = default(HTML_StartRequest_t);
			result.UnBrowserHandle = d.UnBrowserHandle;
			result.PchURL = d.PchURL;
			result.PchTarget = d.PchTarget;
			result.PchPostData = d.PchPostData;
			result.BIsRedirect = d.BIsRedirect;
			return result;
		}
	}

	internal uint UnBrowserHandle;

	internal string PchURL;

	internal string PchTarget;

	internal string PchPostData;

	[MarshalAs(UnmanagedType.I1)]
	internal bool BIsRedirect;

	internal static HTML_StartRequest_t FromPointer(IntPtr p)
	{
		if (Platform.PackSmall)
		{
			return (PackSmall)Marshal.PtrToStructure(p, typeof(PackSmall));
		}
		return (HTML_StartRequest_t)Marshal.PtrToStructure(p, typeof(HTML_StartRequest_t));
	}

	internal static int StructSize()
	{
		if (Platform.PackSmall)
		{
			return Marshal.SizeOf(typeof(PackSmall));
		}
		return Marshal.SizeOf(typeof(HTML_StartRequest_t));
	}
}
