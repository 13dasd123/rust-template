using System.Collections.Generic;

public class Lobby
{
	private Dictionary<string, string> lobbyData;

	internal Client Client;

	public string Name { get; private set; }

	public ulong LobbyID { get; private set; }

	public ulong Owner { get; private set; }

	public int MemberLimit { get; private set; }

	public int NumMembers { get; private set; }

	public string LobbyType { get; private set; }

	public string GetData(string k)
	{
		if (lobbyData.TryGetValue(k, out var value))
		{
			return value;
		}
		return string.Empty;
	}

	public Dictionary<string, string> GetAllData()
	{
		Dictionary<string, string> dictionary = new Dictionary<string, string>();
		foreach (KeyValuePair<string, string> lobbyDatum in lobbyData)
		{
			dictionary.Add(lobbyDatum.Key, lobbyDatum.Value);
		}
		return dictionary;
	}

	internal static Lobby FromSteam(Client client, ulong lobby)
	{
		Dictionary<string, string> dictionary = new Dictionary<string, string>();
		int lobbyDataCount = client.native.matchmaking.GetLobbyDataCount(lobby);
		for (int i = 0; i < lobbyDataCount; i++)
		{
			if (client.native.matchmaking.GetLobbyDataByIndex(lobby, i, out var pchKey, out var pchValue))
			{
				dictionary.Add(pchKey, pchValue);
			}
		}
		return new Lobby
		{
			Client = client,
			LobbyID = lobby,
			Name = client.native.matchmaking.GetLobbyData(lobby, "name"),
			LobbyType = client.native.matchmaking.GetLobbyData(lobby, "lobbytype"),
			MemberLimit = client.native.matchmaking.GetLobbyMemberLimit(lobby),
			Owner = client.native.matchmaking.GetLobbyOwner(lobby),
			NumMembers = client.native.matchmaking.GetNumLobbyMembers(lobby),
			lobbyData = dictionary
		};
	}
}
