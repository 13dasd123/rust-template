using System;
using System.Runtime.InteropServices;
using SteamNative;

[StructLayout(LayoutKind.Sequential, Pack = 8)]
internal struct CallbackMsg_t
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct PackSmall
	{
		public int SteamUser;

		public int Callback;

		public IntPtr ParamPtr;

		public int ParamCount;

		public static implicit operator CallbackMsg_t(PackSmall d)
		{
			CallbackMsg_t result = default(CallbackMsg_t);
			result.SteamUser = d.SteamUser;
			result.Callback = d.Callback;
			result.ParamPtr = d.ParamPtr;
			result.ParamCount = d.ParamCount;
			return result;
		}
	}

	public int SteamUser;

	public int Callback;

	public IntPtr ParamPtr;

	public int ParamCount;

	public static CallbackMsg_t FromPointer(IntPtr p)
	{
		if (Platform.PackSmall)
		{
			return (PackSmall)Marshal.PtrToStructure(p, typeof(PackSmall));
		}
		return (CallbackMsg_t)Marshal.PtrToStructure(p, typeof(CallbackMsg_t));
	}
}
