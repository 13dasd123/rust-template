using System;
using System.Linq;
using System.Net;

internal static class Utility
{
	internal static class Epoch
	{
		private static readonly DateTime epoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);

		public static int Current => (int)DateTime.UtcNow.Subtract(epoch).TotalSeconds;

		public static DateTime ToDateTime(decimal unixTime)
		{
			return epoch.AddSeconds((long)unixTime);
		}

		public static uint FromDateTime(DateTime dt)
		{
			return (uint)dt.Subtract(epoch).TotalSeconds;
		}
	}

	internal static uint SwapBytes(uint x)
	{
		return ((x & 0xFF) << 24) + ((x & 0xFF00) << 8) + ((x & 0xFF0000) >> 8) + ((x & 0xFF000000u) >> 24);
	}

	internal static uint IpToInt32(this IPAddress ipAddress)
	{
		return BitConverter.ToUInt32(ipAddress.GetAddressBytes().Reverse().ToArray(), 0);
	}

	internal static IPAddress Int32ToIp(uint ipAddress)
	{
		return new IPAddress(BitConverter.GetBytes(ipAddress).Reverse().ToArray());
	}

	internal static string FormatPrice(string currency, ulong price)
	{
		string arg = ((double)price / 100.0).ToString("0.00");
		return currency switch
		{
			"GBP" => $"£{arg}", 
			"USD" => $"${arg}", 
			"CAD" => $"${arg} CAD", 
			"EUR" => $"€{arg}", 
			"RUB" => $"₽{arg}", 
			"NZD" => $"${arg} NZD", 
			_ => $"{arg}{currency}", 
		};
	}
}
