using System;
using System.Runtime.InteropServices;
using SteamNative;

[StructLayout(LayoutKind.Sequential, Pack = 8)]
internal struct FriendSessionStateInfo_t
{
	[StructLayout(LayoutKind.Sequential, Pack = 4)]
	internal struct PackSmall
	{
		internal uint IOnlineSessionInstances;

		internal byte IPublishedToFriendsSessionInstance;

		public static implicit operator FriendSessionStateInfo_t(PackSmall d)
		{
			FriendSessionStateInfo_t result = default(FriendSessionStateInfo_t);
			result.IOnlineSessionInstances = d.IOnlineSessionInstances;
			result.IPublishedToFriendsSessionInstance = d.IPublishedToFriendsSessionInstance;
			return result;
		}
	}

	internal uint IOnlineSessionInstances;

	internal byte IPublishedToFriendsSessionInstance;

	internal static FriendSessionStateInfo_t FromPointer(IntPtr p)
	{
		if (Platform.PackSmall)
		{
			return (PackSmall)Marshal.PtrToStructure(p, typeof(PackSmall));
		}
		return (FriendSessionStateInfo_t)Marshal.PtrToStructure(p, typeof(FriendSessionStateInfo_t));
	}

	internal static int StructSize()
	{
		if (Platform.PackSmall)
		{
			return Marshal.SizeOf(typeof(PackSmall));
		}
		return Marshal.SizeOf(typeof(FriendSessionStateInfo_t));
	}
}
