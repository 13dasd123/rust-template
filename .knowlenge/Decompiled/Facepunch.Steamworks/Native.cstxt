using System;
using System.Runtime.InteropServices;
using System.Text;

internal static class Native
{
	[DllImport("steam_api64.dll")]
	internal static extern HSteamPipe SteamAPI_ISteamClient_CreateSteamPipe(IntPtr ISteamClient);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamClient_BReleaseSteamPipe(IntPtr ISteamClient, int hSteamPipe);

	[DllImport("steam_api64.dll")]
	internal static extern HSteamUser SteamAPI_ISteamClient_ConnectToGlobalUser(IntPtr ISteamClient, int hSteamPipe);

	[DllImport("steam_api64.dll")]
	internal static extern HSteamUser SteamAPI_ISteamClient_CreateLocalUser(IntPtr ISteamClient, out int phSteamPipe, AccountType eAccountType);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamClient_ReleaseUser(IntPtr ISteamClient, int hSteamPipe, int hUser);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamUser(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamGameServer(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamClient_SetLocalIPBinding(IntPtr ISteamClient, uint unIP, ushort usPort);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamFriends(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamUtils(IntPtr ISteamClient, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamMatchmaking(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamMatchmakingServers(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamGenericInterface(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamUserStats(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamGameServerStats(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamApps(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamNetworking(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamRemoteStorage(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamScreenshots(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamClient_GetIPCCallCount(IntPtr ISteamClient);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamClient_SetWarningMessageHook(IntPtr ISteamClient, IntPtr pFunction);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamClient_BShutdownIfAllPipesClosed(IntPtr ISteamClient);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamHTTP(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamController(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamUGC(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamAppList(IntPtr ISteamClient, int hSteamUser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamMusic(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamMusicRemote(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamHTMLSurface(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamInventory(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamVideo(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamClient_GetISteamParentalSettings(IntPtr ISteamClient, int hSteamuser, int hSteamPipe, string pchVersion);

	[DllImport("steam_api64.dll")]
	internal static extern HSteamUser SteamAPI_ISteamUser_GetHSteamUser(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_BLoggedOn(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamUser_GetSteamID(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUser_InitiateGameConnection(IntPtr ISteamUser, IntPtr pAuthBlob, int cbMaxAuthBlob, ulong steamIDGameServer, uint unIPServer, ushort usPortServer, [MarshalAs(UnmanagedType.U1)] bool bSecure);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUser_TerminateGameConnection(IntPtr ISteamUser, uint unIPServer, ushort usPortServer);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUser_TrackAppUsageEvent(IntPtr ISteamUser, ulong gameID, int eAppUsageEvent, string pchExtraInfo);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_GetUserDataFolder(IntPtr ISteamUser, StringBuilder pchBuffer, int cubBuffer);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUser_StartVoiceRecording(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUser_StopVoiceRecording(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern VoiceResult SteamAPI_ISteamUser_GetAvailableVoice(IntPtr ISteamUser, out uint pcbCompressed, out uint pcbUncompressed_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated);

	[DllImport("steam_api64.dll")]
	internal static extern VoiceResult SteamAPI_ISteamUser_GetVoice(IntPtr ISteamUser, [MarshalAs(UnmanagedType.U1)] bool bWantCompressed, IntPtr pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten, [MarshalAs(UnmanagedType.U1)] bool bWantUncompressed_Deprecated, IntPtr pUncompressedDestBuffer_Deprecated, uint cbUncompressedDestBufferSize_Deprecated, out uint nUncompressBytesWritten_Deprecated, uint nUncompressedVoiceDesiredSampleRate_Deprecated);

	[DllImport("steam_api64.dll")]
	internal static extern VoiceResult SteamAPI_ISteamUser_DecompressVoice(IntPtr ISteamUser, IntPtr pCompressed, uint cbCompressed, IntPtr pDestBuffer, uint cbDestBufferSize, out uint nBytesWritten, uint nDesiredSampleRate);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUser_GetVoiceOptimalSampleRate(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern HAuthTicket SteamAPI_ISteamUser_GetAuthSessionTicket(IntPtr ISteamUser, IntPtr pTicket, int cbMaxTicket, out uint pcbTicket);

	[DllImport("steam_api64.dll")]
	internal static extern BeginAuthSessionResult SteamAPI_ISteamUser_BeginAuthSession(IntPtr ISteamUser, IntPtr pAuthTicket, int cbAuthTicket, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUser_EndAuthSession(IntPtr ISteamUser, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUser_CancelAuthTicket(IntPtr ISteamUser, uint hAuthTicket);

	[DllImport("steam_api64.dll")]
	internal static extern UserHasLicenseForAppResult SteamAPI_ISteamUser_UserHasLicenseForApp(IntPtr ISteamUser, ulong steamID, uint appID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_BIsBehindNAT(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUser_AdvertiseGame(IntPtr ISteamUser, ulong steamIDGameServer, uint unIPServer, ushort usPortServer);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUser_RequestEncryptedAppTicket(IntPtr ISteamUser, IntPtr pDataToInclude, int cbDataToInclude);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_GetEncryptedAppTicket(IntPtr ISteamUser, IntPtr pTicket, int cbMaxTicket, out uint pcbTicket);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUser_GetGameBadgeLevel(IntPtr ISteamUser, int nSeries, [MarshalAs(UnmanagedType.U1)] bool bFoil);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUser_GetPlayerSteamLevel(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUser_RequestStoreAuthURL(IntPtr ISteamUser, string pchRedirectURL);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_BIsPhoneVerified(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_BIsTwoFactorEnabled(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_BIsPhoneIdentifying(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUser_BIsPhoneRequiringVerification(IntPtr ISteamUser);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetPersonaName(IntPtr ISteamFriends);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamFriends_SetPersonaName(IntPtr ISteamFriends, string pchPersonaName);

	[DllImport("steam_api64.dll")]
	internal static extern PersonaState SteamAPI_ISteamFriends_GetPersonaState(IntPtr ISteamFriends);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendCount(IntPtr ISteamFriends, int iFriendFlags);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamFriends_GetFriendByIndex(IntPtr ISteamFriends, int iFriend, int iFriendFlags);

	[DllImport("steam_api64.dll")]
	internal static extern FriendRelationship SteamAPI_ISteamFriends_GetFriendRelationship(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern PersonaState SteamAPI_ISteamFriends_GetFriendPersonaState(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetFriendPersonaName(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_GetFriendGamePlayed(IntPtr ISteamFriends, ulong steamIDFriend, ref FriendGameInfo_t pFriendGameInfo);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetFriendPersonaNameHistory(IntPtr ISteamFriends, ulong steamIDFriend, int iPersonaName);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendSteamLevel(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetPlayerNickname(IntPtr ISteamFriends, ulong steamIDPlayer);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendsGroupCount(IntPtr ISteamFriends);

	[DllImport("steam_api64.dll")]
	internal static extern FriendsGroupID_t SteamAPI_ISteamFriends_GetFriendsGroupIDByIndex(IntPtr ISteamFriends, int iFG);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetFriendsGroupName(IntPtr ISteamFriends, short friendsGroupID);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendsGroupMembersCount(IntPtr ISteamFriends, short friendsGroupID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_GetFriendsGroupMembersList(IntPtr ISteamFriends, short friendsGroupID, IntPtr pOutSteamIDMembers, int nMembersCount);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_HasFriend(IntPtr ISteamFriends, ulong steamIDFriend, int iFriendFlags);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetClanCount(IntPtr ISteamFriends);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamFriends_GetClanByIndex(IntPtr ISteamFriends, int iClan);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetClanName(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetClanTag(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_GetClanActivityCounts(IntPtr ISteamFriends, ulong steamIDClan, out int pnOnline, out int pnInGame, out int pnChatting);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamFriends_DownloadClanActivityCounts(IntPtr ISteamFriends, IntPtr psteamIDClans, int cClansToRequest);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendCountFromSource(IntPtr ISteamFriends, ulong steamIDSource);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamFriends_GetFriendFromSourceByIndex(IntPtr ISteamFriends, ulong steamIDSource, int iFriend);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_IsUserInSource(IntPtr ISteamFriends, ulong steamIDUser, ulong steamIDSource);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_SetInGameVoiceSpeaking(IntPtr ISteamFriends, ulong steamIDUser, [MarshalAs(UnmanagedType.U1)] bool bSpeaking);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_ActivateGameOverlay(IntPtr ISteamFriends, string pchDialog);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_ActivateGameOverlayToUser(IntPtr ISteamFriends, string pchDialog, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_ActivateGameOverlayToWebPage(IntPtr ISteamFriends, string pchURL);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_ActivateGameOverlayToStore(IntPtr ISteamFriends, uint nAppID, OverlayToStoreFlag eFlag);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_SetPlayedWith(IntPtr ISteamFriends, ulong steamIDUserPlayedWith);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_ActivateGameOverlayInviteDialog(IntPtr ISteamFriends, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetSmallFriendAvatar(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetMediumFriendAvatar(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetLargeFriendAvatar(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_RequestUserInformation(IntPtr ISteamFriends, ulong steamIDUser, [MarshalAs(UnmanagedType.U1)] bool bRequireNameOnly);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamFriends_RequestClanOfficerList(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamFriends_GetClanOwner(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetClanOfficerCount(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamFriends_GetClanOfficerByIndex(IntPtr ISteamFriends, ulong steamIDClan, int iOfficer);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamFriends_GetUserRestrictions(IntPtr ISteamFriends);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_SetRichPresence(IntPtr ISteamFriends, string pchKey, string pchValue);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_ClearRichPresence(IntPtr ISteamFriends);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetFriendRichPresence(IntPtr ISteamFriends, ulong steamIDFriend, string pchKey);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendRichPresenceKeyCount(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamFriends_GetFriendRichPresenceKeyByIndex(IntPtr ISteamFriends, ulong steamIDFriend, int iKey);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamFriends_RequestFriendRichPresence(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_InviteUserToGame(IntPtr ISteamFriends, ulong steamIDFriend, string pchConnectString);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetCoplayFriendCount(IntPtr ISteamFriends);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamFriends_GetCoplayFriend(IntPtr ISteamFriends, int iCoplayFriend);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendCoplayTime(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern AppId_t SteamAPI_ISteamFriends_GetFriendCoplayGame(IntPtr ISteamFriends, ulong steamIDFriend);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamFriends_JoinClanChatRoom(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_LeaveClanChatRoom(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetClanChatMemberCount(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamFriends_GetChatMemberByIndex(IntPtr ISteamFriends, ulong steamIDClan, int iUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_SendClanChatMessage(IntPtr ISteamFriends, ulong steamIDClanChat, string pchText);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetClanChatMessage(IntPtr ISteamFriends, ulong steamIDClanChat, int iMessage, IntPtr prgchText, int cchTextMax, out ChatEntryType peChatEntryType, out ulong psteamidChatter);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_IsClanChatAdmin(IntPtr ISteamFriends, ulong steamIDClanChat, ulong steamIDUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_IsClanChatWindowOpenInSteam(IntPtr ISteamFriends, ulong steamIDClanChat);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_OpenClanChatWindowInSteam(IntPtr ISteamFriends, ulong steamIDClanChat);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_CloseClanChatWindowInSteam(IntPtr ISteamFriends, ulong steamIDClanChat);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_SetListenForFriendsMessages(IntPtr ISteamFriends, [MarshalAs(UnmanagedType.U1)] bool bInterceptEnabled);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_ReplyToFriendMessage(IntPtr ISteamFriends, ulong steamIDFriend, string pchMsgToSend);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamFriends_GetFriendMessage(IntPtr ISteamFriends, ulong steamIDFriend, int iMessageID, IntPtr pvData, int cubData, out ChatEntryType peChatEntryType);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamFriends_GetFollowerCount(IntPtr ISteamFriends, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamFriends_IsFollowing(IntPtr ISteamFriends, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamFriends_EnumerateFollowingList(IntPtr ISteamFriends, uint unStartIndex);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_IsClanPublic(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamFriends_IsClanOfficialGameGroup(IntPtr ISteamFriends, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUtils_GetSecondsSinceAppActive(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUtils_GetSecondsSinceComputerActive(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern Universe SteamAPI_ISteamUtils_GetConnectedUniverse(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUtils_GetServerRealTime(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamUtils_GetIPCountry(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_GetImageSize(IntPtr ISteamUtils, int iImage, out uint pnWidth, out uint pnHeight);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_GetImageRGBA(IntPtr ISteamUtils, int iImage, IntPtr pubDest, int nDestBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_GetCSERIPPort(IntPtr ISteamUtils, out uint unIP, out ushort usPort);

	[DllImport("steam_api64.dll")]
	internal static extern byte SteamAPI_ISteamUtils_GetCurrentBatteryPower(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUtils_GetAppID(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUtils_SetOverlayNotificationPosition(IntPtr ISteamUtils, NotificationPosition eNotificationPosition);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_IsAPICallCompleted(IntPtr ISteamUtils, ulong hSteamAPICall, [MarshalAs(UnmanagedType.U1)] ref bool pbFailed);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICallFailure SteamAPI_ISteamUtils_GetAPICallFailureReason(IntPtr ISteamUtils, ulong hSteamAPICall);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_GetAPICallResult(IntPtr ISteamUtils, ulong hSteamAPICall, IntPtr pCallback, int cubCallback, int iCallbackExpected, [MarshalAs(UnmanagedType.U1)] ref bool pbFailed);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUtils_GetIPCCallCount(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUtils_SetWarningMessageHook(IntPtr ISteamUtils, IntPtr pFunction);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_IsOverlayEnabled(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_BOverlayNeedsPresent(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUtils_CheckFileSignature(IntPtr ISteamUtils, string szFileName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_ShowGamepadTextInput(IntPtr ISteamUtils, GamepadTextInputMode eInputMode, GamepadTextInputLineMode eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUtils_GetEnteredGamepadTextLength(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_GetEnteredGamepadTextInput(IntPtr ISteamUtils, StringBuilder pchText, uint cchText);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamUtils_GetSteamUILanguage(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_IsSteamRunningInVR(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUtils_SetOverlayNotificationInset(IntPtr ISteamUtils, int nHorizontalInset, int nVerticalInset);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_IsSteamInBigPictureMode(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUtils_StartVRDashboard(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUtils_IsVRHeadsetStreamingEnabled(IntPtr ISteamUtils);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUtils_SetVRHeadsetStreamingEnabled(IntPtr ISteamUtils, [MarshalAs(UnmanagedType.U1)] bool bEnabled);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamMatchmaking_GetFavoriteGameCount(IntPtr ISteamMatchmaking);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_GetFavoriteGame(IntPtr ISteamMatchmaking, int iGame, ref uint pnAppID, out uint pnIP, out ushort pnConnPort, out ushort pnQueryPort, out uint punFlags, out uint pRTime32LastPlayedOnServer);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamMatchmaking_AddFavoriteGame(IntPtr ISteamMatchmaking, uint nAppID, uint nIP, ushort nConnPort, ushort nQueryPort, uint unFlags, uint rTime32LastPlayedOnServer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_RemoveFavoriteGame(IntPtr ISteamMatchmaking, uint nAppID, uint nIP, ushort nConnPort, ushort nQueryPort, uint unFlags);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamMatchmaking_RequestLobbyList(IntPtr ISteamMatchmaking);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_AddRequestLobbyListStringFilter(IntPtr ISteamMatchmaking, string pchKeyToMatch, string pchValueToMatch, LobbyComparison eComparisonType);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_AddRequestLobbyListNumericalFilter(IntPtr ISteamMatchmaking, string pchKeyToMatch, int nValueToMatch, LobbyComparison eComparisonType);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_AddRequestLobbyListNearValueFilter(IntPtr ISteamMatchmaking, string pchKeyToMatch, int nValueToBeCloseTo);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_AddRequestLobbyListFilterSlotsAvailable(IntPtr ISteamMatchmaking, int nSlotsAvailable);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_AddRequestLobbyListDistanceFilter(IntPtr ISteamMatchmaking, LobbyDistanceFilter eLobbyDistanceFilter);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_AddRequestLobbyListResultCountFilter(IntPtr ISteamMatchmaking, int cMaxResults);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_AddRequestLobbyListCompatibleMembersFilter(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamMatchmaking_GetLobbyByIndex(IntPtr ISteamMatchmaking, int iLobby);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamMatchmaking_CreateLobby(IntPtr ISteamMatchmaking, LobbyType eLobbyType, int cMaxMembers);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamMatchmaking_JoinLobby(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_LeaveLobby(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_InviteUserToLobby(IntPtr ISteamMatchmaking, ulong steamIDLobby, ulong steamIDInvitee);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamMatchmaking_GetNumLobbyMembers(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamMatchmaking_GetLobbyMemberByIndex(IntPtr ISteamMatchmaking, ulong steamIDLobby, int iMember);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamMatchmaking_GetLobbyData(IntPtr ISteamMatchmaking, ulong steamIDLobby, string pchKey);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_SetLobbyData(IntPtr ISteamMatchmaking, ulong steamIDLobby, string pchKey, string pchValue);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamMatchmaking_GetLobbyDataCount(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_GetLobbyDataByIndex(IntPtr ISteamMatchmaking, ulong steamIDLobby, int iLobbyData, StringBuilder pchKey, int cchKeyBufferSize, StringBuilder pchValue, int cchValueBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_DeleteLobbyData(IntPtr ISteamMatchmaking, ulong steamIDLobby, string pchKey);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamMatchmaking_GetLobbyMemberData(IntPtr ISteamMatchmaking, ulong steamIDLobby, ulong steamIDUser, string pchKey);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_SetLobbyMemberData(IntPtr ISteamMatchmaking, ulong steamIDLobby, string pchKey, string pchValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_SendLobbyChatMsg(IntPtr ISteamMatchmaking, ulong steamIDLobby, IntPtr pvMsgBody, int cubMsgBody);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamMatchmaking_GetLobbyChatEntry(IntPtr ISteamMatchmaking, ulong steamIDLobby, int iChatID, out ulong pSteamIDUser, IntPtr pvData, int cubData, out ChatEntryType peChatEntryType);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_RequestLobbyData(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmaking_SetLobbyGameServer(IntPtr ISteamMatchmaking, ulong steamIDLobby, uint unGameServerIP, ushort unGameServerPort, ulong steamIDGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_GetLobbyGameServer(IntPtr ISteamMatchmaking, ulong steamIDLobby, out uint punGameServerIP, out ushort punGameServerPort, out ulong psteamIDGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_SetLobbyMemberLimit(IntPtr ISteamMatchmaking, ulong steamIDLobby, int cMaxMembers);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamMatchmaking_GetLobbyMemberLimit(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_SetLobbyType(IntPtr ISteamMatchmaking, ulong steamIDLobby, LobbyType eLobbyType);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_SetLobbyJoinable(IntPtr ISteamMatchmaking, ulong steamIDLobby, [MarshalAs(UnmanagedType.U1)] bool bLobbyJoinable);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamMatchmaking_GetLobbyOwner(IntPtr ISteamMatchmaking, ulong steamIDLobby);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_SetLobbyOwner(IntPtr ISteamMatchmaking, ulong steamIDLobby, ulong steamIDNewOwner);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmaking_SetLinkedLobby(IntPtr ISteamMatchmaking, ulong steamIDLobby, ulong steamIDLobbyDependent);

	[DllImport("steam_api64.dll")]
	internal static extern HServerListRequest SteamAPI_ISteamMatchmakingServers_RequestInternetServerList(IntPtr ISteamMatchmakingServers, uint iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern HServerListRequest SteamAPI_ISteamMatchmakingServers_RequestLANServerList(IntPtr ISteamMatchmakingServers, uint iApp, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern HServerListRequest SteamAPI_ISteamMatchmakingServers_RequestFriendsServerList(IntPtr ISteamMatchmakingServers, uint iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern HServerListRequest SteamAPI_ISteamMatchmakingServers_RequestFavoritesServerList(IntPtr ISteamMatchmakingServers, uint iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern HServerListRequest SteamAPI_ISteamMatchmakingServers_RequestHistoryServerList(IntPtr ISteamMatchmakingServers, uint iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern HServerListRequest SteamAPI_ISteamMatchmakingServers_RequestSpectatorServerList(IntPtr ISteamMatchmakingServers, uint iApp, IntPtr ppchFilters, uint nFilters, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmakingServers_ReleaseRequest(IntPtr ISteamMatchmakingServers, IntPtr hServerListRequest);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamMatchmakingServers_GetServerDetails(IntPtr ISteamMatchmakingServers, IntPtr hRequest, int iServer);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmakingServers_CancelQuery(IntPtr ISteamMatchmakingServers, IntPtr hRequest);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmakingServers_RefreshQuery(IntPtr ISteamMatchmakingServers, IntPtr hRequest);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMatchmakingServers_IsRefreshing(IntPtr ISteamMatchmakingServers, IntPtr hRequest);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamMatchmakingServers_GetServerCount(IntPtr ISteamMatchmakingServers, IntPtr hRequest);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmakingServers_RefreshServer(IntPtr ISteamMatchmakingServers, IntPtr hRequest, int iServer);

	[DllImport("steam_api64.dll")]
	internal static extern HServerQuery SteamAPI_ISteamMatchmakingServers_PingServer(IntPtr ISteamMatchmakingServers, uint unIP, ushort usPort, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern HServerQuery SteamAPI_ISteamMatchmakingServers_PlayerDetails(IntPtr ISteamMatchmakingServers, uint unIP, ushort usPort, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern HServerQuery SteamAPI_ISteamMatchmakingServers_ServerRules(IntPtr ISteamMatchmakingServers, uint unIP, ushort usPort, IntPtr pRequestServersResponse);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMatchmakingServers_CancelServerQuery(IntPtr ISteamMatchmakingServers, int hServerQuery);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileWrite(IntPtr ISteamRemoteStorage, string pchFile, IntPtr pvData, int cubData);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamRemoteStorage_FileRead(IntPtr ISteamRemoteStorage, string pchFile, IntPtr pvData, int cubDataToRead);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_FileWriteAsync(IntPtr ISteamRemoteStorage, string pchFile, IntPtr pvData, uint cubData);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_FileReadAsync(IntPtr ISteamRemoteStorage, string pchFile, uint nOffset, uint cubToRead);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileReadAsyncComplete(IntPtr ISteamRemoteStorage, ulong hReadCall, IntPtr pvBuffer, uint cubToRead);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileForget(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileDelete(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_FileShare(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_SetSyncPlatforms(IntPtr ISteamRemoteStorage, string pchFile, RemoteStoragePlatform eRemoteStoragePlatform);

	[DllImport("steam_api64.dll")]
	internal static extern UGCFileWriteStreamHandle_t SteamAPI_ISteamRemoteStorage_FileWriteStreamOpen(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileWriteStreamWriteChunk(IntPtr ISteamRemoteStorage, ulong writeHandle, IntPtr pvData, int cubData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileWriteStreamClose(IntPtr ISteamRemoteStorage, ulong writeHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileWriteStreamCancel(IntPtr ISteamRemoteStorage, ulong writeHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FileExists(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_FilePersisted(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamRemoteStorage_GetFileSize(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern long SteamAPI_ISteamRemoteStorage_GetFileTimestamp(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern RemoteStoragePlatform SteamAPI_ISteamRemoteStorage_GetSyncPlatforms(IntPtr ISteamRemoteStorage, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamRemoteStorage_GetFileCount(IntPtr ISteamRemoteStorage);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamRemoteStorage_GetFileNameAndSize(IntPtr ISteamRemoteStorage, int iFile, out int pnFileSizeInBytes);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_GetQuota(IntPtr ISteamRemoteStorage, out ulong pnTotalBytes, out ulong puAvailableBytes);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_IsCloudEnabledForAccount(IntPtr ISteamRemoteStorage);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_IsCloudEnabledForApp(IntPtr ISteamRemoteStorage);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamRemoteStorage_SetCloudEnabledForApp(IntPtr ISteamRemoteStorage, [MarshalAs(UnmanagedType.U1)] bool bEnabled);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_UGCDownload(IntPtr ISteamRemoteStorage, ulong hContent, uint unPriority);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_GetUGCDownloadProgress(IntPtr ISteamRemoteStorage, ulong hContent, out int pnBytesDownloaded, out int pnBytesExpected);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_GetUGCDetails(IntPtr ISteamRemoteStorage, ulong hContent, ref uint pnAppID, StringBuilder ppchName, out int pnFileSizeInBytes, out ulong pSteamIDOwner);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamRemoteStorage_UGCRead(IntPtr ISteamRemoteStorage, ulong hContent, IntPtr pvData, int cubDataToRead, uint cOffset, UGCReadAction eAction);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamRemoteStorage_GetCachedUGCCount(IntPtr ISteamRemoteStorage);

	[DllImport("steam_api64.dll")]
	internal static extern UGCHandle_t SteamAPI_ISteamRemoteStorage_GetCachedUGCHandle(IntPtr ISteamRemoteStorage, int iCachedContent);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_PublishWorkshopFile(IntPtr ISteamRemoteStorage, string pchFile, string pchPreviewFile, uint nConsumerAppId, string pchTitle, string pchDescription, RemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArray_t pTags, WorkshopFileType eWorkshopFileType);

	[DllImport("steam_api64.dll")]
	internal static extern PublishedFileUpdateHandle_t SteamAPI_ISteamRemoteStorage_CreatePublishedFileUpdateRequest(IntPtr ISteamRemoteStorage, ulong unPublishedFileId);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_UpdatePublishedFileFile(IntPtr ISteamRemoteStorage, ulong updateHandle, string pchFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_UpdatePublishedFilePreviewFile(IntPtr ISteamRemoteStorage, ulong updateHandle, string pchPreviewFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTitle(IntPtr ISteamRemoteStorage, ulong updateHandle, string pchTitle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_UpdatePublishedFileDescription(IntPtr ISteamRemoteStorage, ulong updateHandle, string pchDescription);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_UpdatePublishedFileVisibility(IntPtr ISteamRemoteStorage, ulong updateHandle, RemoteStoragePublishedFileVisibility eVisibility);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_UpdatePublishedFileTags(IntPtr ISteamRemoteStorage, ulong updateHandle, ref SteamParamStringArray_t pTags);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_CommitPublishedFileUpdate(IntPtr ISteamRemoteStorage, ulong updateHandle);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_GetPublishedFileDetails(IntPtr ISteamRemoteStorage, ulong unPublishedFileId, uint unMaxSecondsOld);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_DeletePublishedFile(IntPtr ISteamRemoteStorage, ulong unPublishedFileId);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_EnumerateUserPublishedFiles(IntPtr ISteamRemoteStorage, uint unStartIndex);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_SubscribePublishedFile(IntPtr ISteamRemoteStorage, ulong unPublishedFileId);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_EnumerateUserSubscribedFiles(IntPtr ISteamRemoteStorage, uint unStartIndex);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_UnsubscribePublishedFile(IntPtr ISteamRemoteStorage, ulong unPublishedFileId);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamRemoteStorage_UpdatePublishedFileSetChangeDescription(IntPtr ISteamRemoteStorage, ulong updateHandle, string pchChangeDescription);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_GetPublishedItemVoteDetails(IntPtr ISteamRemoteStorage, ulong unPublishedFileId);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_UpdateUserPublishedItemVote(IntPtr ISteamRemoteStorage, ulong unPublishedFileId, [MarshalAs(UnmanagedType.U1)] bool bVoteUp);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_GetUserPublishedItemVoteDetails(IntPtr ISteamRemoteStorage, ulong unPublishedFileId);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_EnumerateUserSharedWorkshopFiles(IntPtr ISteamRemoteStorage, ulong steamId, uint unStartIndex, ref SteamParamStringArray_t pRequiredTags, ref SteamParamStringArray_t pExcludedTags);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_PublishVideo(IntPtr ISteamRemoteStorage, WorkshopVideoProvider eVideoProvider, string pchVideoAccount, string pchVideoIdentifier, string pchPreviewFile, uint nConsumerAppId, string pchTitle, string pchDescription, RemoteStoragePublishedFileVisibility eVisibility, ref SteamParamStringArray_t pTags);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_SetUserPublishedFileAction(IntPtr ISteamRemoteStorage, ulong unPublishedFileId, WorkshopFileAction eAction);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_EnumeratePublishedFilesByUserAction(IntPtr ISteamRemoteStorage, WorkshopFileAction eAction, uint unStartIndex);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_EnumeratePublishedWorkshopFiles(IntPtr ISteamRemoteStorage, WorkshopEnumerationType eEnumerationType, uint unStartIndex, uint unCount, uint unDays, ref SteamParamStringArray_t pTags, ref SteamParamStringArray_t pUserTags);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamRemoteStorage_UGCDownloadToLocation(IntPtr ISteamRemoteStorage, ulong hContent, string pchLocation, uint unPriority);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_RequestCurrentStats(IntPtr ISteamUserStats);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetStat(IntPtr ISteamUserStats, string pchName, out int pData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetStat0(IntPtr ISteamUserStats, string pchName, out float pData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_SetStat(IntPtr ISteamUserStats, string pchName, int nData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_SetStat0(IntPtr ISteamUserStats, string pchName, float fData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_UpdateAvgRateStat(IntPtr ISteamUserStats, string pchName, float flCountThisSession, double dSessionLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetAchievement(IntPtr ISteamUserStats, string pchName, [MarshalAs(UnmanagedType.U1)] ref bool pbAchieved);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_SetAchievement(IntPtr ISteamUserStats, string pchName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_ClearAchievement(IntPtr ISteamUserStats, string pchName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetAchievementAndUnlockTime(IntPtr ISteamUserStats, string pchName, [MarshalAs(UnmanagedType.U1)] ref bool pbAchieved, out uint punUnlockTime);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_StoreStats(IntPtr ISteamUserStats);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUserStats_GetAchievementIcon(IntPtr ISteamUserStats, string pchName);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamUserStats_GetAchievementDisplayAttribute(IntPtr ISteamUserStats, string pchName, string pchKey);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_IndicateAchievementProgress(IntPtr ISteamUserStats, string pchName, uint nCurProgress, uint nMaxProgress);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUserStats_GetNumAchievements(IntPtr ISteamUserStats);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamUserStats_GetAchievementName(IntPtr ISteamUserStats, uint iAchievement);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_RequestUserStats(IntPtr ISteamUserStats, ulong steamIDUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetUserStat(IntPtr ISteamUserStats, ulong steamIDUser, string pchName, out int pData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetUserStat0(IntPtr ISteamUserStats, ulong steamIDUser, string pchName, out float pData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetUserAchievement(IntPtr ISteamUserStats, ulong steamIDUser, string pchName, [MarshalAs(UnmanagedType.U1)] ref bool pbAchieved);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetUserAchievementAndUnlockTime(IntPtr ISteamUserStats, ulong steamIDUser, string pchName, [MarshalAs(UnmanagedType.U1)] ref bool pbAchieved, out uint punUnlockTime);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_ResetAllStats(IntPtr ISteamUserStats, [MarshalAs(UnmanagedType.U1)] bool bAchievementsToo);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_FindOrCreateLeaderboard(IntPtr ISteamUserStats, string pchLeaderboardName, LeaderboardSortMethod eLeaderboardSortMethod, LeaderboardDisplayType eLeaderboardDisplayType);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_FindLeaderboard(IntPtr ISteamUserStats, string pchLeaderboardName);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamUserStats_GetLeaderboardName(IntPtr ISteamUserStats, ulong hSteamLeaderboard);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUserStats_GetLeaderboardEntryCount(IntPtr ISteamUserStats, ulong hSteamLeaderboard);

	[DllImport("steam_api64.dll")]
	internal static extern LeaderboardSortMethod SteamAPI_ISteamUserStats_GetLeaderboardSortMethod(IntPtr ISteamUserStats, ulong hSteamLeaderboard);

	[DllImport("steam_api64.dll")]
	internal static extern LeaderboardDisplayType SteamAPI_ISteamUserStats_GetLeaderboardDisplayType(IntPtr ISteamUserStats, ulong hSteamLeaderboard);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_DownloadLeaderboardEntries(IntPtr ISteamUserStats, ulong hSteamLeaderboard, LeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart, int nRangeEnd);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_DownloadLeaderboardEntriesForUsers(IntPtr ISteamUserStats, ulong hSteamLeaderboard, IntPtr prgUsers, int cUsers);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetDownloadedLeaderboardEntry(IntPtr ISteamUserStats, ulong hSteamLeaderboardEntries, int index, ref LeaderboardEntry_t pLeaderboardEntry, IntPtr pDetails, int cDetailsMax);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_UploadLeaderboardScore(IntPtr ISteamUserStats, ulong hSteamLeaderboard, LeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, int[] pScoreDetails, int cScoreDetailsCount);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_AttachLeaderboardUGC(IntPtr ISteamUserStats, ulong hSteamLeaderboard, ulong hUGC);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_GetNumberOfCurrentPlayers(IntPtr ISteamUserStats);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_RequestGlobalAchievementPercentages(IntPtr ISteamUserStats);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUserStats_GetMostAchievedAchievementInfo(IntPtr ISteamUserStats, StringBuilder pchName, uint unNameBufLen, out float pflPercent, [MarshalAs(UnmanagedType.U1)] ref bool pbAchieved);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUserStats_GetNextMostAchievedAchievementInfo(IntPtr ISteamUserStats, int iIteratorPrevious, StringBuilder pchName, uint unNameBufLen, out float pflPercent, [MarshalAs(UnmanagedType.U1)] ref bool pbAchieved);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetAchievementAchievedPercent(IntPtr ISteamUserStats, string pchName, out float pflPercent);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUserStats_RequestGlobalStats(IntPtr ISteamUserStats, int nHistoryDays);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetGlobalStat(IntPtr ISteamUserStats, string pchStatName, out long pData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUserStats_GetGlobalStat0(IntPtr ISteamUserStats, string pchStatName, out double pData);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUserStats_GetGlobalStatHistory(IntPtr ISteamUserStats, string pchStatName, out long pData, uint cubData);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamUserStats_GetGlobalStatHistory0(IntPtr ISteamUserStats, string pchStatName, out double pData, uint cubData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsSubscribed(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsLowViolence(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsCybercafe(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsVACBanned(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamApps_GetCurrentGameLanguage(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamApps_GetAvailableGameLanguages(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsSubscribedApp(IntPtr ISteamApps, uint appID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsDlcInstalled(IntPtr ISteamApps, uint appID);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamApps_GetEarliestPurchaseUnixTime(IntPtr ISteamApps, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsSubscribedFromFreeWeekend(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamApps_GetDLCCount(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BGetDLCDataByIndex(IntPtr ISteamApps, int iDLC, ref uint pAppID, [MarshalAs(UnmanagedType.U1)] ref bool pbAvailable, StringBuilder pchName, int cchNameBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamApps_InstallDLC(IntPtr ISteamApps, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamApps_UninstallDLC(IntPtr ISteamApps, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamApps_RequestAppProofOfPurchaseKey(IntPtr ISteamApps, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_GetCurrentBetaName(IntPtr ISteamApps, StringBuilder pchName, int cchNameBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_MarkContentCorrupt(IntPtr ISteamApps, [MarshalAs(UnmanagedType.U1)] bool bMissingFilesOnly);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamApps_GetInstalledDepots(IntPtr ISteamApps, uint appID, IntPtr pvecDepots, uint cMaxDepots);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamApps_GetAppInstallDir(IntPtr ISteamApps, uint appID, StringBuilder pchFolder, uint cchFolderBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_BIsAppInstalled(IntPtr ISteamApps, uint appID);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamApps_GetAppOwner(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamApps_GetLaunchQueryParam(IntPtr ISteamApps, string pchKey);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamApps_GetDlcDownloadProgress(IntPtr ISteamApps, uint nAppID, out ulong punBytesDownloaded, out ulong punBytesTotal);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamApps_GetAppBuildId(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamApps_RequestAllProofOfPurchaseKeys(IntPtr ISteamApps);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamApps_GetFileDetails(IntPtr ISteamApps, string pszFileName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_SendP2PPacket(IntPtr ISteamNetworking, ulong steamIDRemote, IntPtr pubData, uint cubData, P2PSend eP2PSendType, int nChannel);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_IsP2PPacketAvailable(IntPtr ISteamNetworking, out uint pcubMsgSize, int nChannel);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_ReadP2PPacket(IntPtr ISteamNetworking, IntPtr pubDest, uint cubDest, out uint pcubMsgSize, out ulong psteamIDRemote, int nChannel);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_AcceptP2PSessionWithUser(IntPtr ISteamNetworking, ulong steamIDRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_CloseP2PSessionWithUser(IntPtr ISteamNetworking, ulong steamIDRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_CloseP2PChannelWithUser(IntPtr ISteamNetworking, ulong steamIDRemote, int nChannel);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_GetP2PSessionState(IntPtr ISteamNetworking, ulong steamIDRemote, ref P2PSessionState_t pConnectionState);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_AllowP2PPacketRelay(IntPtr ISteamNetworking, [MarshalAs(UnmanagedType.U1)] bool bAllow);

	[DllImport("steam_api64.dll")]
	internal static extern SNetListenSocket_t SteamAPI_ISteamNetworking_CreateListenSocket(IntPtr ISteamNetworking, int nVirtualP2PPort, uint nIP, ushort nPort, [MarshalAs(UnmanagedType.U1)] bool bAllowUseOfPacketRelay);

	[DllImport("steam_api64.dll")]
	internal static extern SNetSocket_t SteamAPI_ISteamNetworking_CreateP2PConnectionSocket(IntPtr ISteamNetworking, ulong steamIDTarget, int nVirtualPort, int nTimeoutSec, [MarshalAs(UnmanagedType.U1)] bool bAllowUseOfPacketRelay);

	[DllImport("steam_api64.dll")]
	internal static extern SNetSocket_t SteamAPI_ISteamNetworking_CreateConnectionSocket(IntPtr ISteamNetworking, uint nIP, ushort nPort, int nTimeoutSec);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_DestroySocket(IntPtr ISteamNetworking, uint hSocket, [MarshalAs(UnmanagedType.U1)] bool bNotifyRemoteEnd);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_DestroyListenSocket(IntPtr ISteamNetworking, uint hSocket, [MarshalAs(UnmanagedType.U1)] bool bNotifyRemoteEnd);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_SendDataOnSocket(IntPtr ISteamNetworking, uint hSocket, IntPtr pubData, uint cubData, [MarshalAs(UnmanagedType.U1)] bool bReliable);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_IsDataAvailableOnSocket(IntPtr ISteamNetworking, uint hSocket, out uint pcubMsgSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_RetrieveDataFromSocket(IntPtr ISteamNetworking, uint hSocket, IntPtr pubDest, uint cubDest, out uint pcubMsgSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_IsDataAvailable(IntPtr ISteamNetworking, uint hListenSocket, out uint pcubMsgSize, ref uint phSocket);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_RetrieveData(IntPtr ISteamNetworking, uint hListenSocket, IntPtr pubDest, uint cubDest, out uint pcubMsgSize, ref uint phSocket);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_GetSocketInfo(IntPtr ISteamNetworking, uint hSocket, out ulong pSteamIDRemote, IntPtr peSocketStatus, out uint punIPRemote, out ushort punPortRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamNetworking_GetListenSocketInfo(IntPtr ISteamNetworking, uint hListenSocket, out uint pnIP, out ushort pnPort);

	[DllImport("steam_api64.dll")]
	internal static extern SNetSocketConnectionType SteamAPI_ISteamNetworking_GetSocketConnectionType(IntPtr ISteamNetworking, uint hSocket);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamNetworking_GetMaxPacketSize(IntPtr ISteamNetworking, uint hSocket);

	[DllImport("steam_api64.dll")]
	internal static extern ScreenshotHandle SteamAPI_ISteamScreenshots_WriteScreenshot(IntPtr ISteamScreenshots, IntPtr pubRGB, uint cubRGB, int nWidth, int nHeight);

	[DllImport("steam_api64.dll")]
	internal static extern ScreenshotHandle SteamAPI_ISteamScreenshots_AddScreenshotToLibrary(IntPtr ISteamScreenshots, string pchFilename, string pchThumbnailFilename, int nWidth, int nHeight);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamScreenshots_TriggerScreenshot(IntPtr ISteamScreenshots);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamScreenshots_HookScreenshots(IntPtr ISteamScreenshots, [MarshalAs(UnmanagedType.U1)] bool bHook);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamScreenshots_SetLocation(IntPtr ISteamScreenshots, uint hScreenshot, string pchLocation);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamScreenshots_TagUser(IntPtr ISteamScreenshots, uint hScreenshot, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamScreenshots_TagPublishedFile(IntPtr ISteamScreenshots, uint hScreenshot, ulong unPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamScreenshots_IsScreenshotsHooked(IntPtr ISteamScreenshots);

	[DllImport("steam_api64.dll")]
	internal static extern ScreenshotHandle SteamAPI_ISteamScreenshots_AddVRScreenshotToLibrary(IntPtr ISteamScreenshots, VRScreenshotType eType, string pchFilename, string pchVRFilename);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusic_BIsEnabled(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusic_BIsPlaying(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern AudioPlayback_Status SteamAPI_ISteamMusic_GetPlaybackStatus(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMusic_Play(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMusic_Pause(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMusic_PlayPrevious(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMusic_PlayNext(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamMusic_SetVolume(IntPtr ISteamMusic, float flVolume);

	[DllImport("steam_api64.dll")]
	internal static extern float SteamAPI_ISteamMusic_GetVolume(IntPtr ISteamMusic);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_RegisterSteamMusicRemote(IntPtr ISteamMusicRemote, string pchName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_DeregisterSteamMusicRemote(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_BIsCurrentMusicRemote(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_BActivationSuccess(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_SetDisplayName(IntPtr ISteamMusicRemote, string pchDisplayName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_SetPNGIcon_64x64(IntPtr ISteamMusicRemote, IntPtr pvBuffer, uint cbBufferLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_EnablePlayPrevious(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_EnablePlayNext(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_EnableShuffled(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_EnableLooped(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_EnableQueue(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_EnablePlaylists(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_UpdatePlaybackStatus(IntPtr ISteamMusicRemote, AudioPlayback_Status nStatus);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_UpdateShuffled(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_UpdateLooped(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_UpdateVolume(IntPtr ISteamMusicRemote, float flValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_CurrentEntryWillChange(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_CurrentEntryIsAvailable(IntPtr ISteamMusicRemote, [MarshalAs(UnmanagedType.U1)] bool bAvailable);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_UpdateCurrentEntryText(IntPtr ISteamMusicRemote, string pchText);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_UpdateCurrentEntryElapsedSeconds(IntPtr ISteamMusicRemote, int nValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_UpdateCurrentEntryCoverArt(IntPtr ISteamMusicRemote, IntPtr pvBuffer, uint cbBufferLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_CurrentEntryDidChange(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_QueueWillChange(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_ResetQueueEntries(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_SetQueueEntry(IntPtr ISteamMusicRemote, int nID, int nPosition, string pchEntryText);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_SetCurrentQueueEntry(IntPtr ISteamMusicRemote, int nID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_QueueDidChange(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_PlaylistWillChange(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_ResetPlaylistEntries(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_SetPlaylistEntry(IntPtr ISteamMusicRemote, int nID, int nPosition, string pchEntryText);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_SetCurrentPlaylistEntry(IntPtr ISteamMusicRemote, int nID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamMusicRemote_PlaylistDidChange(IntPtr ISteamMusicRemote);

	[DllImport("steam_api64.dll")]
	internal static extern HTTPRequestHandle SteamAPI_ISteamHTTP_CreateHTTPRequest(IntPtr ISteamHTTP, HTTPMethod eHTTPRequestMethod, string pchAbsoluteURL);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestContextValue(IntPtr ISteamHTTP, uint hRequest, ulong ulContextValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestNetworkActivityTimeout(IntPtr ISteamHTTP, uint hRequest, uint unTimeoutSeconds);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestHeaderValue(IntPtr ISteamHTTP, uint hRequest, string pchHeaderName, string pchHeaderValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestGetOrPostParameter(IntPtr ISteamHTTP, uint hRequest, string pchParamName, string pchParamValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SendHTTPRequest(IntPtr ISteamHTTP, uint hRequest, ref ulong pCallHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SendHTTPRequestAndStreamResponse(IntPtr ISteamHTTP, uint hRequest, ref ulong pCallHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_DeferHTTPRequest(IntPtr ISteamHTTP, uint hRequest);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_PrioritizeHTTPRequest(IntPtr ISteamHTTP, uint hRequest);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_GetHTTPResponseHeaderSize(IntPtr ISteamHTTP, uint hRequest, string pchHeaderName, out uint unResponseHeaderSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_GetHTTPResponseHeaderValue(IntPtr ISteamHTTP, uint hRequest, string pchHeaderName, out byte pHeaderValueBuffer, uint unBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_GetHTTPResponseBodySize(IntPtr ISteamHTTP, uint hRequest, out uint unBodySize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_GetHTTPResponseBodyData(IntPtr ISteamHTTP, uint hRequest, out byte pBodyDataBuffer, uint unBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_GetHTTPStreamingResponseBodyData(IntPtr ISteamHTTP, uint hRequest, uint cOffset, out byte pBodyDataBuffer, uint unBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_ReleaseHTTPRequest(IntPtr ISteamHTTP, uint hRequest);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_GetHTTPDownloadProgressPct(IntPtr ISteamHTTP, uint hRequest, out float pflPercentOut);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestRawPostBody(IntPtr ISteamHTTP, uint hRequest, string pchContentType, out byte pubBody, uint unBodyLen);

	[DllImport("steam_api64.dll")]
	internal static extern HTTPCookieContainerHandle SteamAPI_ISteamHTTP_CreateCookieContainer(IntPtr ISteamHTTP, [MarshalAs(UnmanagedType.U1)] bool bAllowResponsesToModify);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_ReleaseCookieContainer(IntPtr ISteamHTTP, uint hCookieContainer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetCookie(IntPtr ISteamHTTP, uint hCookieContainer, string pchHost, string pchUrl, string pchCookie);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestCookieContainer(IntPtr ISteamHTTP, uint hRequest, uint hCookieContainer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestUserAgentInfo(IntPtr ISteamHTTP, uint hRequest, string pchUserAgentInfo);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestRequiresVerifiedCertificate(IntPtr ISteamHTTP, uint hRequest, [MarshalAs(UnmanagedType.U1)] bool bRequireVerifiedCertificate);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_SetHTTPRequestAbsoluteTimeoutMS(IntPtr ISteamHTTP, uint hRequest, uint unMilliseconds);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTTP_GetHTTPRequestWasTimedOut(IntPtr ISteamHTTP, uint hRequest, [MarshalAs(UnmanagedType.U1)] ref bool pbWasTimedOut);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamController_Init(IntPtr ISteamController);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamController_Shutdown(IntPtr ISteamController);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_RunFrame(IntPtr ISteamController);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamController_GetConnectedControllers(IntPtr ISteamController, IntPtr handlesOut);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamController_ShowBindingPanel(IntPtr ISteamController, ulong controllerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerActionSetHandle_t SteamAPI_ISteamController_GetActionSetHandle(IntPtr ISteamController, string pszActionSetName);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_ActivateActionSet(IntPtr ISteamController, ulong controllerHandle, ulong actionSetHandle);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerActionSetHandle_t SteamAPI_ISteamController_GetCurrentActionSet(IntPtr ISteamController, ulong controllerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_ActivateActionSetLayer(IntPtr ISteamController, ulong controllerHandle, ulong actionSetLayerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_DeactivateActionSetLayer(IntPtr ISteamController, ulong controllerHandle, ulong actionSetLayerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_DeactivateAllActionSetLayers(IntPtr ISteamController, ulong controllerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamController_GetActiveActionSetLayers(IntPtr ISteamController, ulong controllerHandle, IntPtr handlesOut);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerDigitalActionHandle_t SteamAPI_ISteamController_GetDigitalActionHandle(IntPtr ISteamController, string pszActionName);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerDigitalActionData_t SteamAPI_ISteamController_GetDigitalActionData(IntPtr ISteamController, ulong controllerHandle, ulong digitalActionHandle);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamController_GetDigitalActionOrigins(IntPtr ISteamController, ulong controllerHandle, ulong actionSetHandle, ulong digitalActionHandle, out ControllerActionOrigin originsOut);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerAnalogActionHandle_t SteamAPI_ISteamController_GetAnalogActionHandle(IntPtr ISteamController, string pszActionName);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerAnalogActionData_t SteamAPI_ISteamController_GetAnalogActionData(IntPtr ISteamController, ulong controllerHandle, ulong analogActionHandle);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamController_GetAnalogActionOrigins(IntPtr ISteamController, ulong controllerHandle, ulong actionSetHandle, ulong analogActionHandle, out ControllerActionOrigin originsOut);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_StopAnalogActionMomentum(IntPtr ISteamController, ulong controllerHandle, ulong eAction);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_TriggerHapticPulse(IntPtr ISteamController, ulong controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_TriggerRepeatedHapticPulse(IntPtr ISteamController, ulong controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, uint nFlags);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_TriggerVibration(IntPtr ISteamController, ulong controllerHandle, ushort usLeftSpeed, ushort usRightSpeed);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamController_SetLEDColor(IntPtr ISteamController, ulong controllerHandle, byte nColorR, byte nColorG, byte nColorB, uint nFlags);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamController_GetGamepadIndexForController(IntPtr ISteamController, ulong ulControllerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerHandle_t SteamAPI_ISteamController_GetControllerForGamepadIndex(IntPtr ISteamController, int nIndex);

	[DllImport("steam_api64.dll")]
	internal static extern ControllerMotionData_t SteamAPI_ISteamController_GetMotionData(IntPtr ISteamController, ulong controllerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamController_ShowDigitalActionOrigins(IntPtr ISteamController, ulong controllerHandle, ulong digitalActionHandle, float flScale, float flXPosition, float flYPosition);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamController_ShowAnalogActionOrigins(IntPtr ISteamController, ulong controllerHandle, ulong analogActionHandle, float flScale, float flXPosition, float flYPosition);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamController_GetStringForActionOrigin(IntPtr ISteamController, ControllerActionOrigin eOrigin);

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamAPI_ISteamController_GetGlyphForActionOrigin(IntPtr ISteamController, ControllerActionOrigin eOrigin);

	[DllImport("steam_api64.dll")]
	internal static extern SteamInputType SteamAPI_ISteamController_GetInputTypeForHandle(IntPtr ISteamController, ulong controllerHandle);

	[DllImport("steam_api64.dll")]
	internal static extern UGCQueryHandle_t SteamAPI_ISteamUGC_CreateQueryUserUGCRequest(IntPtr ISteamUGC, uint unAccountID, UserUGCList eListType, UGCMatchingUGCType eMatchingUGCType, UserUGCListSortOrder eSortOrder, uint nCreatorAppID, uint nConsumerAppID, uint unPage);

	[DllImport("steam_api64.dll")]
	internal static extern UGCQueryHandle_t SteamAPI_ISteamUGC_CreateQueryAllUGCRequest(IntPtr ISteamUGC, UGCQuery eQueryType, UGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, uint nCreatorAppID, uint nConsumerAppID, uint unPage);

	[DllImport("steam_api64.dll")]
	internal static extern UGCQueryHandle_t SteamAPI_ISteamUGC_CreateQueryUGCDetailsRequest(IntPtr ISteamUGC, IntPtr pvecPublishedFileID, uint unNumPublishedFileIDs);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_SendQueryUGCRequest(IntPtr ISteamUGC, ulong handle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetQueryUGCResult(IntPtr ISteamUGC, ulong handle, uint index, ref SteamUGCDetails_t pDetails);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetQueryUGCPreviewURL(IntPtr ISteamUGC, ulong handle, uint index, StringBuilder pchURL, uint cchURLSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetQueryUGCMetadata(IntPtr ISteamUGC, ulong handle, uint index, StringBuilder pchMetadata, uint cchMetadatasize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetQueryUGCChildren(IntPtr ISteamUGC, ulong handle, uint index, IntPtr pvecPublishedFileID, uint cMaxEntries);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetQueryUGCStatistic(IntPtr ISteamUGC, ulong handle, uint index, ItemStatistic eStatType, out ulong pStatValue);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUGC_GetQueryUGCNumAdditionalPreviews(IntPtr ISteamUGC, ulong handle, uint index);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetQueryUGCAdditionalPreview(IntPtr ISteamUGC, ulong handle, uint index, uint previewIndex, StringBuilder pchURLOrVideoID, uint cchURLSize, StringBuilder pchOriginalFileName, uint cchOriginalFileNameSize, out ItemPreviewType pPreviewType);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUGC_GetQueryUGCNumKeyValueTags(IntPtr ISteamUGC, ulong handle, uint index);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetQueryUGCKeyValueTag(IntPtr ISteamUGC, ulong handle, uint index, uint keyValueTagIndex, StringBuilder pchKey, uint cchKeySize, StringBuilder pchValue, uint cchValueSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_ReleaseQueryUGCRequest(IntPtr ISteamUGC, ulong handle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_AddRequiredTag(IntPtr ISteamUGC, ulong handle, string pTagName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_AddExcludedTag(IntPtr ISteamUGC, ulong handle, string pTagName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnOnlyIDs(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bReturnOnlyIDs);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnKeyValueTags(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bReturnKeyValueTags);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnLongDescription(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bReturnLongDescription);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnMetadata(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bReturnMetadata);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnChildren(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bReturnChildren);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnAdditionalPreviews(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bReturnAdditionalPreviews);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnTotalOnly(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bReturnTotalOnly);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetReturnPlaytimeStats(IntPtr ISteamUGC, ulong handle, uint unDays);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetLanguage(IntPtr ISteamUGC, ulong handle, string pchLanguage);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetAllowCachedResponse(IntPtr ISteamUGC, ulong handle, uint unMaxAgeSeconds);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetCloudFileNameFilter(IntPtr ISteamUGC, ulong handle, string pMatchCloudFileName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetMatchAnyTag(IntPtr ISteamUGC, ulong handle, [MarshalAs(UnmanagedType.U1)] bool bMatchAnyTag);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetSearchText(IntPtr ISteamUGC, ulong handle, string pSearchText);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetRankedByTrendDays(IntPtr ISteamUGC, ulong handle, uint unDays);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_AddRequiredKeyValueTag(IntPtr ISteamUGC, ulong handle, string pKey, string pValue);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_RequestUGCDetails(IntPtr ISteamUGC, ulong nPublishedFileID, uint unMaxAgeSeconds);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_CreateItem(IntPtr ISteamUGC, uint nConsumerAppId, WorkshopFileType eFileType);

	[DllImport("steam_api64.dll")]
	internal static extern UGCUpdateHandle_t SteamAPI_ISteamUGC_StartItemUpdate(IntPtr ISteamUGC, uint nConsumerAppId, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemTitle(IntPtr ISteamUGC, ulong handle, string pchTitle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemDescription(IntPtr ISteamUGC, ulong handle, string pchDescription);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemUpdateLanguage(IntPtr ISteamUGC, ulong handle, string pchLanguage);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemMetadata(IntPtr ISteamUGC, ulong handle, string pchMetaData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemVisibility(IntPtr ISteamUGC, ulong handle, RemoteStoragePublishedFileVisibility eVisibility);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemTags(IntPtr ISteamUGC, ulong updateHandle, ref SteamParamStringArray_t pTags);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemContent(IntPtr ISteamUGC, ulong handle, string pszContentFolder);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_SetItemPreview(IntPtr ISteamUGC, ulong handle, string pszPreviewFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_RemoveItemKeyValueTags(IntPtr ISteamUGC, ulong handle, string pchKey);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_AddItemKeyValueTag(IntPtr ISteamUGC, ulong handle, string pchKey, string pchValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_AddItemPreviewFile(IntPtr ISteamUGC, ulong handle, string pszPreviewFile, ItemPreviewType type);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_AddItemPreviewVideo(IntPtr ISteamUGC, ulong handle, string pszVideoID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_UpdateItemPreviewFile(IntPtr ISteamUGC, ulong handle, uint index, string pszPreviewFile);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_UpdateItemPreviewVideo(IntPtr ISteamUGC, ulong handle, uint index, string pszVideoID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_RemoveItemPreview(IntPtr ISteamUGC, ulong handle, uint index);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_SubmitItemUpdate(IntPtr ISteamUGC, ulong handle, string pchChangeNote);

	[DllImport("steam_api64.dll")]
	internal static extern ItemUpdateStatus SteamAPI_ISteamUGC_GetItemUpdateProgress(IntPtr ISteamUGC, ulong handle, out ulong punBytesProcessed, out ulong punBytesTotal);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_SetUserItemVote(IntPtr ISteamUGC, ulong nPublishedFileID, [MarshalAs(UnmanagedType.U1)] bool bVoteUp);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_GetUserItemVote(IntPtr ISteamUGC, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_AddItemToFavorites(IntPtr ISteamUGC, uint nAppId, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_RemoveItemFromFavorites(IntPtr ISteamUGC, uint nAppId, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_SubscribeItem(IntPtr ISteamUGC, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_UnsubscribeItem(IntPtr ISteamUGC, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUGC_GetNumSubscribedItems(IntPtr ISteamUGC);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUGC_GetSubscribedItems(IntPtr ISteamUGC, IntPtr pvecPublishedFileID, uint cMaxEntries);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamUGC_GetItemState(IntPtr ISteamUGC, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetItemInstallInfo(IntPtr ISteamUGC, ulong nPublishedFileID, out ulong punSizeOnDisk, StringBuilder pchFolder, uint cchFolderSize, out uint punTimeStamp);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_GetItemDownloadInfo(IntPtr ISteamUGC, ulong nPublishedFileID, out ulong punBytesDownloaded, out ulong punBytesTotal);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_DownloadItem(IntPtr ISteamUGC, ulong nPublishedFileID, [MarshalAs(UnmanagedType.U1)] bool bHighPriority);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamUGC_BInitWorkshopForGameServer(IntPtr ISteamUGC, uint unWorkshopDepotID, string pszFolder);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamUGC_SuspendDownloads(IntPtr ISteamUGC, [MarshalAs(UnmanagedType.U1)] bool bSuspend);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_StartPlaytimeTracking(IntPtr ISteamUGC, IntPtr pvecPublishedFileID, uint unNumPublishedFileIDs);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_StopPlaytimeTracking(IntPtr ISteamUGC, IntPtr pvecPublishedFileID, uint unNumPublishedFileIDs);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_StopPlaytimeTrackingForAllItems(IntPtr ISteamUGC);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_AddDependency(IntPtr ISteamUGC, ulong nParentPublishedFileID, ulong nChildPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_RemoveDependency(IntPtr ISteamUGC, ulong nParentPublishedFileID, ulong nChildPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_AddAppDependency(IntPtr ISteamUGC, ulong nPublishedFileID, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_RemoveAppDependency(IntPtr ISteamUGC, ulong nPublishedFileID, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_GetAppDependencies(IntPtr ISteamUGC, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamUGC_DeleteItem(IntPtr ISteamUGC, ulong nPublishedFileID);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamAppList_GetNumInstalledApps(IntPtr ISteamAppList);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamAppList_GetInstalledApps(IntPtr ISteamAppList, IntPtr pvecAppID, uint unMaxAppIDs);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamAppList_GetAppName(IntPtr ISteamAppList, uint nAppID, StringBuilder pchName, int cchNameMax);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamAppList_GetAppInstallDir(IntPtr ISteamAppList, uint nAppID, StringBuilder pchDirectory, int cchNameMax);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamAppList_GetAppBuildId(IntPtr ISteamAppList, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_DestructISteamHTMLSurface(IntPtr ISteamHTMLSurface);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTMLSurface_Init(IntPtr ISteamHTMLSurface);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamHTMLSurface_Shutdown(IntPtr ISteamHTMLSurface);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamHTMLSurface_CreateBrowser(IntPtr ISteamHTMLSurface, string pchUserAgent, string pchUserCSS);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_RemoveBrowser(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_LoadURL(IntPtr ISteamHTMLSurface, uint unBrowserHandle, string pchURL, string pchPostData);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetSize(IntPtr ISteamHTMLSurface, uint unBrowserHandle, uint unWidth, uint unHeight);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_StopLoad(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_Reload(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_GoBack(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_GoForward(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_AddHeader(IntPtr ISteamHTMLSurface, uint unBrowserHandle, string pchKey, string pchValue);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_ExecuteJavascript(IntPtr ISteamHTMLSurface, uint unBrowserHandle, string pchScript);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_MouseUp(IntPtr ISteamHTMLSurface, uint unBrowserHandle, HTMLMouseButton eMouseButton);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_MouseDown(IntPtr ISteamHTMLSurface, uint unBrowserHandle, HTMLMouseButton eMouseButton);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_MouseDoubleClick(IntPtr ISteamHTMLSurface, uint unBrowserHandle, HTMLMouseButton eMouseButton);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_MouseMove(IntPtr ISteamHTMLSurface, uint unBrowserHandle, int x, int y);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_MouseWheel(IntPtr ISteamHTMLSurface, uint unBrowserHandle, int nDelta);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_KeyDown(IntPtr ISteamHTMLSurface, uint unBrowserHandle, uint nNativeKeyCode, HTMLKeyModifiers eHTMLKeyModifiers);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_KeyUp(IntPtr ISteamHTMLSurface, uint unBrowserHandle, uint nNativeKeyCode, HTMLKeyModifiers eHTMLKeyModifiers);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_KeyChar(IntPtr ISteamHTMLSurface, uint unBrowserHandle, uint cUnicodeChar, HTMLKeyModifiers eHTMLKeyModifiers);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetHorizontalScroll(IntPtr ISteamHTMLSurface, uint unBrowserHandle, uint nAbsolutePixelScroll);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetVerticalScroll(IntPtr ISteamHTMLSurface, uint unBrowserHandle, uint nAbsolutePixelScroll);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetKeyFocus(IntPtr ISteamHTMLSurface, uint unBrowserHandle, [MarshalAs(UnmanagedType.U1)] bool bHasKeyFocus);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_ViewSource(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_CopyToClipboard(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_PasteFromClipboard(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_Find(IntPtr ISteamHTMLSurface, uint unBrowserHandle, string pchSearchStr, [MarshalAs(UnmanagedType.U1)] bool bCurrentlyInFind, [MarshalAs(UnmanagedType.U1)] bool bReverse);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_StopFind(IntPtr ISteamHTMLSurface, uint unBrowserHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_GetLinkAtPosition(IntPtr ISteamHTMLSurface, uint unBrowserHandle, int x, int y);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetCookie(IntPtr ISteamHTMLSurface, string pchHostname, string pchKey, string pchValue, string pchPath, uint nExpires, [MarshalAs(UnmanagedType.U1)] bool bSecure, [MarshalAs(UnmanagedType.U1)] bool bHTTPOnly);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetPageScaleFactor(IntPtr ISteamHTMLSurface, uint unBrowserHandle, float flZoom, int nPointX, int nPointY);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetBackgroundMode(IntPtr ISteamHTMLSurface, uint unBrowserHandle, [MarshalAs(UnmanagedType.U1)] bool bBackgroundMode);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_SetDPIScalingFactor(IntPtr ISteamHTMLSurface, uint unBrowserHandle, float flDPIScaling);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_AllowStartRequest(IntPtr ISteamHTMLSurface, uint unBrowserHandle, [MarshalAs(UnmanagedType.U1)] bool bAllowed);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamHTMLSurface_JSDialogResponse(IntPtr ISteamHTMLSurface, uint unBrowserHandle, [MarshalAs(UnmanagedType.U1)] bool bResult);

	[DllImport("steam_api64.dll")]
	internal static extern Result SteamAPI_ISteamInventory_GetResultStatus(IntPtr ISteamInventory, int resultHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetResultItems(IntPtr ISteamInventory, int resultHandle, IntPtr pOutItemsArray, out uint punOutItemsArraySize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetResultItemProperty(IntPtr ISteamInventory, int resultHandle, uint unItemIndex, string pchPropertyName, StringBuilder pchValueBuffer, out uint punValueBufferSizeOut);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamInventory_GetResultTimestamp(IntPtr ISteamInventory, int resultHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_CheckResultSteamID(IntPtr ISteamInventory, int resultHandle, ulong steamIDExpected);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamInventory_DestroyResult(IntPtr ISteamInventory, int resultHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetAllItems(IntPtr ISteamInventory, ref int pResultHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetItemsByID(IntPtr ISteamInventory, ref int pResultHandle, ulong[] pInstanceIDs, uint unCountInstanceIDs);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_SerializeResult(IntPtr ISteamInventory, int resultHandle, IntPtr pOutBuffer, out uint punOutBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_DeserializeResult(IntPtr ISteamInventory, ref int pOutResultHandle, IntPtr pBuffer, uint unBufferSize, [MarshalAs(UnmanagedType.U1)] bool bRESERVED_MUST_BE_FALSE);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GenerateItems(IntPtr ISteamInventory, ref int pResultHandle, int[] pArrayItemDefs, uint[] punArrayQuantity, uint unArrayLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GrantPromoItems(IntPtr ISteamInventory, ref int pResultHandle);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_AddPromoItem(IntPtr ISteamInventory, ref int pResultHandle, int itemDef);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_AddPromoItems(IntPtr ISteamInventory, ref int pResultHandle, int[] pArrayItemDefs, uint unArrayLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_ConsumeItem(IntPtr ISteamInventory, ref int pResultHandle, ulong itemConsume, uint unQuantity);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_ExchangeItems(IntPtr ISteamInventory, ref int pResultHandle, int[] pArrayGenerate, uint[] punArrayGenerateQuantity, uint unArrayGenerateLength, ulong[] pArrayDestroy, uint[] punArrayDestroyQuantity, uint unArrayDestroyLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_TransferItemQuantity(IntPtr ISteamInventory, ref int pResultHandle, ulong itemIdSource, uint unQuantity, ulong itemIdDest);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamInventory_SendItemDropHeartbeat(IntPtr ISteamInventory);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_TriggerItemDrop(IntPtr ISteamInventory, ref int pResultHandle, int dropListDefinition);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_TradeItems(IntPtr ISteamInventory, ref int pResultHandle, ulong steamIDTradePartner, ulong[] pArrayGive, uint[] pArrayGiveQuantity, uint nArrayGiveLength, ulong[] pArrayGet, uint[] pArrayGetQuantity, uint nArrayGetLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_LoadItemDefinitions(IntPtr ISteamInventory);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetItemDefinitionIDs(IntPtr ISteamInventory, IntPtr pItemDefIDs, out uint punItemDefIDsArraySize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetItemDefinitionProperty(IntPtr ISteamInventory, int iDefinition, string pchPropertyName, StringBuilder pchValueBuffer, out uint punValueBufferSizeOut);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamInventory_RequestEligiblePromoItemDefinitionsIDs(IntPtr ISteamInventory, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetEligiblePromoItemDefinitionIDs(IntPtr ISteamInventory, ulong steamID, IntPtr pItemDefIDs, out uint punItemDefIDsArraySize);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamInventory_StartPurchase(IntPtr ISteamInventory, int[] pArrayItemDefs, uint[] punArrayQuantity, uint unArrayLength);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamInventory_RequestPrices(IntPtr ISteamInventory);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamInventory_GetNumItemsWithPrices(IntPtr ISteamInventory);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetItemsWithPrices(IntPtr ISteamInventory, IntPtr pArrayItemDefs, IntPtr pPrices, uint unArrayLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_GetItemPrice(IntPtr ISteamInventory, int iDefinition, out ulong pPrice);

	[DllImport("steam_api64.dll")]
	internal static extern SteamInventoryUpdateHandle_t SteamAPI_ISteamInventory_StartUpdateProperties(IntPtr ISteamInventory);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_RemoveProperty(IntPtr ISteamInventory, ulong handle, ulong nItemID, string pchPropertyName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_SetProperty(IntPtr ISteamInventory, ulong handle, ulong nItemID, string pchPropertyName, string pchPropertyValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_SetProperty0(IntPtr ISteamInventory, ulong handle, ulong nItemID, string pchPropertyName, [MarshalAs(UnmanagedType.U1)] bool bValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_SetProperty0(IntPtr ISteamInventory, ulong handle, ulong nItemID, string pchPropertyName, long nValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_SetProperty0(IntPtr ISteamInventory, ulong handle, ulong nItemID, string pchPropertyName, float flValue);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamInventory_SubmitUpdateProperties(IntPtr ISteamInventory, ulong handle, ref int pResultHandle);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamVideo_GetVideoURL(IntPtr ISteamVideo, uint unVideoAppID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamVideo_IsBroadcasting(IntPtr ISteamVideo, IntPtr pnNumViewers);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamVideo_GetOPFSettings(IntPtr ISteamVideo, uint unVideoAppID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamVideo_GetOPFStringForApp(IntPtr ISteamVideo, uint unVideoAppID, StringBuilder pchBuffer, out int pnBufferSize);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamParentalSettings_BIsParentalLockEnabled(IntPtr ISteamParentalSettings);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamParentalSettings_BIsParentalLockLocked(IntPtr ISteamParentalSettings);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamParentalSettings_BIsAppBlocked(IntPtr ISteamParentalSettings, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamParentalSettings_BIsAppInBlockList(IntPtr ISteamParentalSettings, uint nAppID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamParentalSettings_BIsFeatureBlocked(IntPtr ISteamParentalSettings, ParentalFeature eFeature);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamParentalSettings_BIsFeatureInBlockList(IntPtr ISteamParentalSettings, ParentalFeature eFeature);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_InitGameServer(IntPtr ISteamGameServer, uint unIP, ushort usGamePort, ushort usQueryPort, uint unFlags, uint nGameAppId, string pchVersionString);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetProduct(IntPtr ISteamGameServer, string pszProduct);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetGameDescription(IntPtr ISteamGameServer, string pszGameDescription);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetModDir(IntPtr ISteamGameServer, string pszModDir);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetDedicatedServer(IntPtr ISteamGameServer, [MarshalAs(UnmanagedType.U1)] bool bDedicated);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_LogOn(IntPtr ISteamGameServer, string pszToken);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_LogOnAnonymous(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_LogOff(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_BLoggedOn(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_BSecure(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamGameServer_GetSteamID(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_WasRestartRequested(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetMaxPlayerCount(IntPtr ISteamGameServer, int cPlayersMax);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetBotPlayerCount(IntPtr ISteamGameServer, int cBotplayers);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetServerName(IntPtr ISteamGameServer, string pszServerName);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetMapName(IntPtr ISteamGameServer, string pszMapName);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetPasswordProtected(IntPtr ISteamGameServer, [MarshalAs(UnmanagedType.U1)] bool bPasswordProtected);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetSpectatorPort(IntPtr ISteamGameServer, ushort unSpectatorPort);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetSpectatorServerName(IntPtr ISteamGameServer, string pszSpectatorServerName);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_ClearAllKeyValues(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetKeyValue(IntPtr ISteamGameServer, string pKey, string pValue);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetGameTags(IntPtr ISteamGameServer, string pchGameTags);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetGameData(IntPtr ISteamGameServer, string pchGameData);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetRegion(IntPtr ISteamGameServer, string pszRegion);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_SendUserConnectAndAuthenticate(IntPtr ISteamGameServer, uint unIPClient, IntPtr pvAuthBlob, uint cubAuthBlobSize, out ulong pSteamIDUser);

	[DllImport("steam_api64.dll")]
	internal static extern CSteamID SteamAPI_ISteamGameServer_CreateUnauthenticatedUserConnection(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SendUserDisconnect(IntPtr ISteamGameServer, ulong steamIDUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_BUpdateUserData(IntPtr ISteamGameServer, ulong steamIDUser, string pchPlayerName, uint uScore);

	[DllImport("steam_api64.dll")]
	internal static extern HAuthTicket SteamAPI_ISteamGameServer_GetAuthSessionTicket(IntPtr ISteamGameServer, IntPtr pTicket, int cbMaxTicket, out uint pcbTicket);

	[DllImport("steam_api64.dll")]
	internal static extern BeginAuthSessionResult SteamAPI_ISteamGameServer_BeginAuthSession(IntPtr ISteamGameServer, IntPtr pAuthTicket, int cbAuthTicket, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_EndAuthSession(IntPtr ISteamGameServer, ulong steamID);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_CancelAuthTicket(IntPtr ISteamGameServer, uint hAuthTicket);

	[DllImport("steam_api64.dll")]
	internal static extern UserHasLicenseForAppResult SteamAPI_ISteamGameServer_UserHasLicenseForApp(IntPtr ISteamGameServer, ulong steamID, uint appID);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_RequestUserGroupStatus(IntPtr ISteamGameServer, ulong steamIDUser, ulong steamIDGroup);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_GetGameplayStats(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamGameServer_GetServerReputation(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern uint SteamAPI_ISteamGameServer_GetPublicIP(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServer_HandleIncomingPacket(IntPtr ISteamGameServer, IntPtr pData, int cbData, uint srcIP, ushort srcPort);

	[DllImport("steam_api64.dll")]
	internal static extern int SteamAPI_ISteamGameServer_GetNextOutgoingPacket(IntPtr ISteamGameServer, IntPtr pOut, int cbMaxOut, out uint pNetAdr, out ushort pPort);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_EnableHeartbeats(IntPtr ISteamGameServer, [MarshalAs(UnmanagedType.U1)] bool bActive);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_SetHeartbeatInterval(IntPtr ISteamGameServer, int iHeartbeatInterval);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_ISteamGameServer_ForceHeartbeat(IntPtr ISteamGameServer);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamGameServer_AssociateWithClan(IntPtr ISteamGameServer, ulong steamIDClan);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamGameServer_ComputeNewPlayerCompatibility(IntPtr ISteamGameServer, ulong steamIDNewPlayer);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamGameServerStats_RequestUserStats(IntPtr ISteamGameServerStats, ulong steamIDUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_GetUserStat(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName, out int pData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_GetUserStat0(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName, out float pData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_GetUserAchievement(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName, [MarshalAs(UnmanagedType.U1)] ref bool pbAchieved);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_SetUserStat(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName, int nData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_SetUserStat0(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName, float fData);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_UpdateUserAvgRateStat(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName, float flCountThisSession, double dSessionLength);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_SetUserAchievement(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_ISteamGameServerStats_ClearUserAchievement(IntPtr ISteamGameServerStats, ulong steamIDUser, string pchName);

	[DllImport("steam_api64.dll")]
	internal static extern SteamAPICall_t SteamAPI_ISteamGameServerStats_StoreUserStats(IntPtr ISteamGameServerStats, ulong steamIDUser);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_Init();

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_RunCallbacks();

	[DllImport("steam_api64.dll")]
	internal static extern void SteamGameServer_RunCallbacks();

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_RegisterCallback(IntPtr pCallback, int callback);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_UnregisterCallback(IntPtr pCallback);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_RegisterCallResult(IntPtr pCallback, ulong callback);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_UnregisterCallResult(IntPtr pCallback, ulong callback);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamInternal_GameServer_Init(uint unIP, ushort usPort, ushort usGamePort, ushort usQueryPort, int eServerMode, string pchVersionString);

	[DllImport("steam_api64.dll")]
	internal static extern void SteamAPI_Shutdown();

	[DllImport("steam_api64.dll")]
	internal static extern void SteamGameServer_Shutdown();

	[DllImport("steam_api64.dll")]
	internal static extern HSteamUser SteamAPI_GetHSteamUser();

	[DllImport("steam_api64.dll")]
	internal static extern HSteamPipe SteamAPI_GetHSteamPipe();

	[DllImport("steam_api64.dll")]
	internal static extern HSteamUser SteamGameServer_GetHSteamUser();

	[DllImport("steam_api64.dll")]
	internal static extern HSteamPipe SteamGameServer_GetHSteamPipe();

	[DllImport("steam_api64.dll")]
	internal static extern IntPtr SteamInternal_CreateInterface(string version);

	[DllImport("steam_api64.dll")]
	internal static extern bool SteamAPI_RestartAppIfNecessary(uint unOwnAppID);
}
