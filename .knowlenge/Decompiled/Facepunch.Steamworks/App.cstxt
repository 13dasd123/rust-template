using System;
using Facepunch.Steamworks;

public class App : IDisposable
{
	internal Client client;

	internal App(Client c)
	{
		client = c;
	}

	public void Dispose()
	{
		client = null;
	}

	public void MarkContentCorrupt(bool missingFilesOnly = false)
	{
		client.native.apps.MarkContentCorrupt(missingFilesOnly);
	}

	public void InstallDlc(uint appId)
	{
		client.native.apps.InstallDLC(appId);
	}

	public void UninstallDlc(uint appId)
	{
		client.native.apps.UninstallDLC(appId);
	}

	public DateTime PurchaseTime(uint appId)
	{
		uint earliestPurchaseUnixTime = client.native.apps.GetEarliestPurchaseUnixTime(appId);
		if (earliestPurchaseUnixTime == 0)
		{
			return DateTime.MinValue;
		}
		return Utility.Epoch.ToDateTime(earliestPurchaseUnixTime);
	}

	public bool IsSubscribed(uint appId)
	{
		return client.native.apps.BIsSubscribedApp(appId);
	}

	public bool IsInstalled(uint appId)
	{
		return client.native.apps.BIsAppInstalled(appId);
	}
}
