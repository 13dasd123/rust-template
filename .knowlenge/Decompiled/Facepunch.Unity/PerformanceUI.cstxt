using Facepunch;
using UnityEngine;
using UnityEngine.UI;

public class PerformanceUI : MonoBehaviour
{
	public LayoutElement[] rainbow;

	public Text info;

	public Text fps;

	public Text ms;

	public Text mb;

	public Text gc;

	private Canvas Canvas;

	private float updateTime;

	private void Awake()
	{
		Canvas = GetComponent<Canvas>();
		Canvas.enabled = false;
		if (BuildInfo.Current.Valid)
		{
			string text = BuildInfo.Current.Scm.ChangeId;
			if (text.Length > 8)
			{
				text = text.Substring(0, 8);
			}
			string text2 = string.Concat("<color=#bbbbbb>Build Date</color> <b>", BuildInfo.Current.BuildDate, "</b>");
			text2 = text2 + "\n<color=#bbbbbb>Change</color> <b>" + text + "</b> <color=#bbbbbb>by</color> <b>" + BuildInfo.Current.Scm.Author + "</b>";
			text2 = text2 + "\n<color=#bbbbbb>Build</color> <b>" + BuildInfo.Current.Build.Number + "</b> <color=#bbbbbb>on</color> <b>" + BuildInfo.Current.Build.Node + "</b>";
			info.text = text2;
		}
		else
		{
			info.transform.parent.gameObject.SetActive(value: false);
		}
	}

	private void Update()
	{
		if (Input.GetKeyDown(KeyCode.F8))
		{
			Canvas.enabled = !Canvas.enabled;
		}
		if (Canvas.enabled && !(updateTime - Time.realtimeSinceStartup > 0f))
		{
			updateTime = Time.realtimeSinceStartup + 0.5f;
			if (Performance.FrameCountLastSecond < 30)
			{
				fps.color = Color.red;
			}
			else if (Performance.FrameCountLastSecond < 50)
			{
				fps.color = Color.yellow;
			}
			else
			{
				fps.color = Color.white;
			}
			fps.text = Performance.FrameCountLastSecond.ToString("0");
			ms.text = Performance.AvgFrameTimeLastSecond.ToString("0.00");
			mb.text = Performance.MemoryUsage.ToString("N0");
			gc.text = Performance.GarbageCollections.ToString("N0");
			UpdateRainbow();
		}
	}

	private void UpdateRainbow()
	{
		for (int i = 0; i < 6; i++)
		{
			rainbow[i].flexibleWidth = Performance.GetFrameFraction((FrameRateCategory)i) * 1000f;
		}
	}

	public static void SpawnPrefab()
	{
		Object.DontDestroyOnLoad(Object.Instantiate(Resources.Load<GameObject>("Facepunch.Performance")));
	}
}
