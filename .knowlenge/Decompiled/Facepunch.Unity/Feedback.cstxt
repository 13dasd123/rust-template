using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Net;
using System.Text;
using Facepunch;
using Facepunch.Models;
using Facepunch.Models.Feedback;
using Newtonsoft.Json;
using UnityEngine;

public static class Feedback
{
	public static Action<List<PlayerInfo>> GetPlayersForFeedback;

	public static bool IsOpening { get; private set; }

	internal static void Frame()
	{
		if (Input.GetKeyDown(KeyCode.F7))
		{
			Open();
		}
	}

	public static void Open()
	{
		if (string.IsNullOrEmpty(Facepunch.Application.Manifest.FeedbackUrl) || IsOpening)
		{
			return;
		}
		GameInfo gameInfo = default(GameInfo);
		gameInfo.Auth = Facepunch.Application.Integration.Auth;
		GameInfo gameInfo2 = gameInfo;
		List<PlayerInfo> list = new List<PlayerInfo>();
		if (GetPlayersForFeedback != null)
		{
			GetPlayersForFeedback(list);
		}
		gameInfo2.Players = list.Take(100).ToArray();
		NameValueCollection data = new NameValueCollection();
		data.Add("data", JsonConvert.SerializeObject(gameInfo2));
		Uri url = new Uri(Facepunch.Application.Manifest.FeedbackUrl);
		WebClient wc = new WebClient();
		wc.UploadValuesCompleted += delegate
		{
			Debug.Log("[Feedback] Got Response");
			byte[] bytes = wc.UploadValues(url, "POST", data);
			string str = Encoding.UTF8.GetString(bytes);
			Threading.QueueOnMainThread(delegate
			{
				Debug.Log($"[Feedback] Opening Url: {str}");
				UnityEngine.Application.OpenURL(str);
			});
		};
		Debug.Log("[Feedback] Querying Feedback..");
		wc.UploadValuesAsync(url, "POST", data);
	}
}
