using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using Facepunch;
using UnityEngine;

public static class WebUtil
{
	internal static void Get(string url, Action<string> result)
	{
		if (url.Contains("https://localhost"))
		{
			url = url.Replace("https://localhost", "http://localhost");
		}
		if (Facepunch.Application.Integration.DebugOutput)
		{
			UnityEngine.Debug.Log($"[Get] \"{url}\"");
		}
		WWW www = new WWW(url);
		Facepunch.Application.Controller.StartCoroutine(DownloadStringCoroutine(www, result));
	}

	private static IEnumerator DownloadStringCoroutine(WWW www, Action<string> result)
	{
		yield return www;
		if (www.error == null)
		{
			result?.Invoke(www.text);
		}
		www.Dispose();
	}

	internal static void Post(string url, Dictionary<string, string> data, bool wait, Action<string> result)
	{
		if (url.Contains("https://localhost"))
		{
			url = url.Replace("https://localhost", "http://localhost");
		}
		WWWForm wWWForm = new WWWForm();
		foreach (KeyValuePair<string, string> datum in data)
		{
			wWWForm.AddField(datum.Key, datum.Value);
		}
		if (Facepunch.Application.Integration.DebugOutput)
		{
			UnityEngine.Debug.Log($"[Post] \"{url}\"");
		}
		WWW wWW = new WWW(url, wWWForm);
		if (wait)
		{
			Stopwatch stopwatch = Stopwatch.StartNew();
			while (!wWW.isDone && stopwatch.Elapsed.Seconds <= 5)
			{
			}
			wWW.Dispose();
		}
		else
		{
			Facepunch.Application.Controller.StartCoroutine(PostValuesCoroutine(wWW, result));
		}
	}

	private static IEnumerator PostValuesCoroutine(WWW www, Action<string> result)
	{
		yield return www;
		if (www.error == null)
		{
			result?.Invoke(www.text);
		}
		if (Facepunch.Application.Integration.DebugOutput)
		{
			if (www.error != null)
			{
				UnityEngine.Debug.LogWarning($"[Post] Error: \"{www.error}\" - \"{www.text}\" ");
			}
			else
			{
				UnityEngine.Debug.Log($"[Post] Response: \"{www.text}\"");
			}
		}
		www.Dispose();
	}

	internal static string Escape(string type)
	{
		return WWW.EscapeURL(type);
	}
}
