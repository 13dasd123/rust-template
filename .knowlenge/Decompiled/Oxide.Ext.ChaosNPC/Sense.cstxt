using Oxide.Ext.ChaosNPC;
using UnityEngine;

public static class Sense
{
	private static BaseEntity[] query = new BaseEntity[512];

	private static bool IsAbleToBeStimulated(BaseEntity entity)
	{
		return entity is CustomScientistNPC;
	}

	public static void Stimulate(Sensation sensation)
	{
		int inSphere = BaseEntity.Query.Server.GetInSphere(sensation.Position, sensation.Radius, query, IsAbleToBeStimulated);
		float num = sensation.Radius * sensation.Radius;
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		Vector3 vector = default(Vector3);
		int num4 = default(int);
		while (true)
		{
			int num2 = -834703350;
			while (true)
			{
				uint num3;
				switch ((num3 = (uint)(num2 ^ -977060850)) % 12)
				{
				case 0u:
					break;
				default:
					return;
				case 7u:
				{
					int num10;
					int num11;
					if (customScientistNPC.IsDestroyed)
					{
						num10 = 51546826;
						num11 = num10;
					}
					else
					{
						num10 = 963066305;
						num11 = num10;
					}
					num2 = num10 ^ ((int)num3 * -1417665613);
					continue;
				}
				case 2u:
					vector = customScientistNPC.transform.position - sensation.Position;
					num2 = ((int)num3 * -1446410726) ^ 0x390C0B9E;
					continue;
				case 8u:
				{
					int num6;
					int num7;
					if (vector.sqrMagnitude > num)
					{
						num6 = 1023993503;
						num7 = num6;
					}
					else
					{
						num6 = 1788108901;
						num7 = num6;
					}
					num2 = num6 ^ ((int)num3 * -1697280370);
					continue;
				}
				case 11u:
					customScientistNPC.OnSensation(sensation);
					num2 = ((int)num3 * -801113330) ^ -433060883;
					continue;
				case 3u:
				{
					int num8;
					int num9;
					if ((bool)customScientistNPC)
					{
						num8 = -525124759;
						num9 = num8;
					}
					else
					{
						num8 = -1082512609;
						num9 = num8;
					}
					num2 = num8 ^ ((int)num3 * -1628306168);
					continue;
				}
				case 6u:
					num2 = (int)(num3 * 1826603607) ^ -1345934026;
					continue;
				case 5u:
					num4++;
					num2 = -1974443520;
					continue;
				case 10u:
				{
					int num5;
					if (num4 >= inSphere)
					{
						num2 = -1014836289;
						num5 = num2;
					}
					else
					{
						num2 = -1471390529;
						num5 = num2;
					}
					continue;
				}
				case 9u:
					customScientistNPC = query[num4] as CustomScientistNPC;
					num2 = -1485567567;
					continue;
				case 4u:
					num4 = 0;
					num2 = ((int)num3 * -386185565) ^ 0x2E758638;
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
	}
}
