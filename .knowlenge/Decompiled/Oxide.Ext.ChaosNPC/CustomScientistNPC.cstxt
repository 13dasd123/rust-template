using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Oxide.Core;
using Oxide.Core.Plugins;
using Oxide.Ext.ChaosNPC;
using Oxide.Plugins;
using ProtoBuf;
using Rust;
using Spatial;
using UnityEngine;
using UnityEngine.AI;

public class CustomScientistNPC : HumanNPC, IAIAttack, IAIMounted
{
	internal static Plugin \u202b\u206c\u206d\u206e\u202c\u202a\u206b\u206a\u206d\u206d\u206d\u200b\u200e\u206c\u202a\u206f\u202a\u200b\u206c\u200c\u200d\u202e\u202b\u202c\u202e\u200e\u200f\u200d\u200f\u200e\u202c\u206e\u200d\u202b\u200b\u202d\u202e\u206b\u202e\u206c\u202e;

	internal static Plugin \u206c\u200c\u202b\u202e\u200c\u206c\u206e\u206b\u202d\u202d\u202b\u206c\u200e\u202e\u202a\u200c\u206c\u206e\u202c\u206c\u206a\u202d\u202c\u206c\u206b\u200f\u206b\u200f\u202d\u200d\u202c\u200c\u200e\u202a\u206c\u200f\u206d\u202c\u206a\u200f\u202e;

	internal static readonly Grid<CustomScientistNPC> \u206d\u200f\u206f\u202e\u206e\u202e\u200e\u206d\u200d\u202e\u206a\u202e\u200f\u202c\u202e\u200c\u200d\u206d\u200f\u202b\u202c\u200c\u202a\u200d\u206e\u202c\u206e\u206b\u206d\u202b\u202b\u200f\u200b\u200f\u200c\u206f\u200c\u206d\u206b\u206f\u202e = new Grid<CustomScientistNPC>(32, 8096f);

	private static readonly CustomScientistNPC[] \u202e\u202a\u200c\u200c\u202a\u206f\u206f\u206f\u200b\u206b\u206a\u206e\u202b\u206c\u206d\u200b\u206a\u202d\u200b\u206d\u202a\u206d\u200c\u202a\u200f\u200f\u200f\u200f\u202e\u206e\u206a\u206c\u206c\u206c\u206b\u206e\u202b\u202c\u200d\u206f\u202e = new CustomScientistNPC[4];

	[CompilerGenerated]
	private Plugin \u200c\u206a\u200d\u200d\u202a\u206e\u206e\u200e\u206e\u202a\u206e\u202b\u202c\u206c\u202c\u200e\u200d\u200b\u206b\u200d\u202d\u206f\u202e\u202a\u202b\u200f\u206a\u206f\u202d\u202e\u200f\u200d\u206f\u206e\u202c\u202e\u206d\u200b\u206f\u202c\u202e;

	[CompilerGenerated]
	private NPCSettings \u202e\u200b\u206a\u206c\u202b\u202e\u200b\u206b\u200b\u202a\u202e\u206b\u206d\u200c\u206f\u206d\u206a\u202e\u202c\u206e\u206e\u206d\u202c\u206a\u200b\u202c\u202d\u206e\u200d\u206d\u200b\u206d\u206a\u206c\u206e\u206b\u202d\u200c\u206a\u202e;

	[CompilerGenerated]
	private Transform \u206b\u206e\u202a\u202a\u206a\u206c\u202d\u202a\u200c\u200c\u200b\u206c\u206e\u206f\u206d\u200c\u202e\u202b\u200f\u200b\u206a\u200c\u206f\u200e\u206a\u206e\u200d\u206c\u200e\u206a\u200c\u202e\u206f\u200c\u206c\u200e\u200c\u206d\u200f\u206b\u202e;

	[CompilerGenerated]
	private BaseEntity \u206d\u202a\u202e\u200c\u202a\u202c\u206f\u202e\u200d\u202a\u200f\u206f\u200f\u200d\u206b\u202e\u206a\u202d\u206a\u202c\u206a\u202c\u206c\u206b\u200f\u200b\u200f\u206c\u206d\u202b\u202c\u202b\u202d\u206d\u202d\u206a\u206b\u200f\u200b\u206f\u202e;

	[CompilerGenerated]
	private AttackEntity \u200e\u200b\u206d\u202a\u206d\u200b\u202b\u206e\u200f\u206e\u206f\u202b\u206c\u202e\u206f\u202c\u206a\u202b\u202e\u206a\u206e\u200f\u202e\u200e\u206f\u200b\u206d\u206d\u200f\u202a\u206a\u200c\u206f\u202b\u200e\u206e\u206b\u206a\u200e\u200c\u202e;

	[CompilerGenerated]
	private AIState \u202a\u200f\u202e\u200d\u202c\u202a\u202a\u202d\u202a\u200c\u202d\u202b\u206a\u200e\u200b\u206e\u206e\u200d\u202b\u206b\u206e\u202e\u206f\u206d\u206e\u206c\u206a\u202a\u206e\u202e\u200d\u200f\u202e\u206e\u202b\u202d\u206e\u202c\u202c\u200e\u202e = AIState.Idle;

	[CompilerGenerated]
	private Vector3 \u202d\u206d\u202c\u202d\u206e\u206b\u206d\u206e\u206f\u202d\u206f\u200d\u200e\u206a\u206a\u202a\u206b\u206a\u202b\u206f\u202e\u206c\u202d\u200f\u200c\u202c\u202c\u200c\u200c\u206d\u206f\u200c\u200e\u206e\u202d\u206d\u206f\u200b\u200f\u206c\u202e;

	[CompilerGenerated]
	private bool \u206b\u206d\u202e\u206a\u202e\u202e\u200d\u206e\u202e\u202b\u206f\u206d\u200c\u200d\u206c\u200d\u200e\u202a\u206c\u200b\u206b\u206f\u206b\u206b\u200e\u202c\u202a\u200e\u206c\u202d\u202c\u202e\u202c\u202a\u200d\u202b\u206e\u206e\u202e\u206b\u202e;

	[CompilerGenerated]
	private bool \u206d\u206d\u202b\u206a\u202d\u206b\u206b\u200d\u202d\u202a\u200c\u202e\u206b\u202b\u206f\u206f\u206f\u206f\u202b\u200f\u200f\u206e\u206a\u200e\u202b\u200b\u206e\u200d\u200d\u200f\u202c\u206b\u200d\u200d\u206c\u200e\u206e\u202c\u202b\u200e\u202e;

	protected float nextAlertTime;

	[CompilerGenerated]
	private Vector3 \u200e\u200e\u200f\u206e\u200e\u206b\u200b\u202c\u206c\u206b\u206e\u200e\u202a\u206c\u202e\u200f\u200f\u200e\u200e\u200c\u200b\u202e\u206b\u202a\u206f\u202a\u206a\u202b\u200c\u200c\u206d\u202c\u206d\u200f\u200e\u206c\u202c\u206f\u200e\u206e\u202e;

	internal Action \u200f\u200f\u206a\u200b\u206c\u202a\u202e\u202a\u202e\u206d\u206a\u206d\u200e\u206b\u206f\u200c\u206f\u202b\u202a\u206f\u202b\u202b\u206e\u202c\u200b\u200b\u206a\u202c\u200f\u200b\u206f\u202a\u206f\u200e\u206c\u202a\u206a\u202a\u202c\u202b\u202e;

	protected bool isEquippingWeapon;

	protected NPCType npcType;

	public GameObjectRef[] RadioChatterEffects;

	public GameObjectRef[] DeathEffects;

	public Vector2 IdleChatterRepeatRange = new Vector2(10f, 15f);

	public ScientistNPC.RadioChatterType radioChatterType;

	public float lastAlertedTime = -100f;

	protected const int AREA_MASK = 1;

	protected const int AGENT_TYPE_ID = -1372625422;

	protected static readonly LootContainer.LootSpawnSlot[] EMPTY_SLOTS;

	private static readonly Hash<string, float> \u206b\u206b\u202e\u206a\u200c\u202d\u206d\u200d\u206d\u202a\u200f\u206b\u200f\u202e\u206e\u206a\u202e\u200d\u200b\u206a\u202c\u202c\u206c\u200d\u202a\u200b\u202a\u206d\u200b\u206d\u206e\u206c\u200d\u202a\u200e\u206b\u202c\u206a\u200c\u200d\u202e;

	private static Hash<string, float> \u200c\u200d\u206e\u206b\u206b\u202d\u202b\u202e\u202c\u200e\u206e\u200c\u202e\u200d\u206a\u202a\u202a\u200e\u200f\u206d\u202c\u206f\u200e\u206b\u206c\u206d\u206f\u206b\u202e\u206b\u200d\u206d\u206f\u206b\u200b\u200b\u200e\u206a\u206b\u200c\u202e;

	public Plugin Plugin
	{
		[CompilerGenerated]
		get
		{
			return \u200c\u206a\u200d\u200d\u202a\u206e\u206e\u200e\u206e\u202a\u206e\u202b\u202c\u206c\u202c\u200e\u200d\u200b\u206b\u200d\u202d\u206f\u202e\u202a\u202b\u200f\u206a\u206f\u202d\u202e\u200f\u200d\u206f\u206e\u202c\u202e\u206d\u200b\u206f\u202c\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u200c\u206a\u200d\u200d\u202a\u206e\u206e\u200e\u206e\u202a\u206e\u202b\u202c\u206c\u202c\u200e\u200d\u200b\u206b\u200d\u202d\u206f\u202e\u202a\u202b\u200f\u206a\u206f\u202d\u202e\u200f\u200d\u206f\u206e\u202c\u202e\u206d\u200b\u206f\u202c\u202e = value;
		}
	}

	public NPCSettings Settings
	{
		[CompilerGenerated]
		get
		{
			return \u202e\u200b\u206a\u206c\u202b\u202e\u200b\u206b\u200b\u202a\u202e\u206b\u206d\u200c\u206f\u206d\u206a\u202e\u202c\u206e\u206e\u206d\u202c\u206a\u200b\u202c\u202d\u206e\u200d\u206d\u200b\u206d\u206a\u206c\u206e\u206b\u202d\u200c\u206a\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u202e\u200b\u206a\u206c\u202b\u202e\u200b\u206b\u200b\u202a\u202e\u206b\u206d\u200c\u206f\u206d\u206a\u202e\u202c\u206e\u206e\u206d\u202c\u206a\u200b\u202c\u202d\u206e\u200d\u206d\u200b\u206d\u206a\u206c\u206e\u206b\u202d\u200c\u206a\u202e = value;
		}
	}

	public Transform Transform
	{
		[CompilerGenerated]
		get
		{
			return \u206b\u206e\u202a\u202a\u206a\u206c\u202d\u202a\u200c\u200c\u200b\u206c\u206e\u206f\u206d\u200c\u202e\u202b\u200f\u200b\u206a\u200c\u206f\u200e\u206a\u206e\u200d\u206c\u200e\u206a\u200c\u202e\u206f\u200c\u206c\u200e\u200c\u206d\u200f\u206b\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u206b\u206e\u202a\u202a\u206a\u206c\u202d\u202a\u200c\u200c\u200b\u206c\u206e\u206f\u206d\u200c\u202e\u202b\u200f\u200b\u206a\u200c\u206f\u200e\u206a\u206e\u200d\u206c\u200e\u206a\u200c\u202e\u206f\u200c\u206c\u200e\u200c\u206d\u200f\u206b\u202e = value;
		}
	}

	public BaseEntity CurrentTarget
	{
		[CompilerGenerated]
		get
		{
			return \u206d\u202a\u202e\u200c\u202a\u202c\u206f\u202e\u200d\u202a\u200f\u206f\u200f\u200d\u206b\u202e\u206a\u202d\u206a\u202c\u206a\u202c\u206c\u206b\u200f\u200b\u200f\u206c\u206d\u202b\u202c\u202b\u202d\u206d\u202d\u206a\u206b\u200f\u200b\u206f\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u206d\u202a\u202e\u200c\u202a\u202c\u206f\u202e\u200d\u202a\u200f\u206f\u200f\u200d\u206b\u202e\u206a\u202d\u206a\u202c\u206a\u202c\u206c\u206b\u200f\u200b\u200f\u206c\u206d\u202b\u202c\u202b\u202d\u206d\u202d\u206a\u206b\u200f\u200b\u206f\u202e = value;
		}
	}

	public AttackEntity CurrentWeapon
	{
		[CompilerGenerated]
		get
		{
			return \u200e\u200b\u206d\u202a\u206d\u200b\u202b\u206e\u200f\u206e\u206f\u202b\u206c\u202e\u206f\u202c\u206a\u202b\u202e\u206a\u206e\u200f\u202e\u200e\u206f\u200b\u206d\u206d\u200f\u202a\u206a\u200c\u206f\u202b\u200e\u206e\u206b\u206a\u200e\u200c\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u200e\u200b\u206d\u202a\u206d\u200b\u202b\u206e\u200f\u206e\u206f\u202b\u206c\u202e\u206f\u202c\u206a\u202b\u202e\u206a\u206e\u200f\u202e\u200e\u206f\u200b\u206d\u206d\u200f\u202a\u206a\u200c\u206f\u202b\u200e\u206e\u206b\u206a\u200e\u200c\u202e = value;
		}
	}

	public AIState CurrentState
	{
		[CompilerGenerated]
		get
		{
			return \u202a\u200f\u202e\u200d\u202c\u202a\u202a\u202d\u202a\u200c\u202d\u202b\u206a\u200e\u200b\u206e\u206e\u200d\u202b\u206b\u206e\u202e\u206f\u206d\u206e\u206c\u206a\u202a\u206e\u202e\u200d\u200f\u202e\u206e\u202b\u202d\u206e\u202c\u202c\u200e\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u202a\u200f\u202e\u200d\u202c\u202a\u202a\u202d\u202a\u200c\u202d\u202b\u206a\u200e\u200b\u206e\u206e\u200d\u202b\u206b\u206e\u202e\u206f\u206d\u206e\u206c\u206a\u202a\u206e\u202e\u200d\u200f\u202e\u206e\u202b\u202d\u206e\u202c\u202c\u200e\u202e = value;
		}
	}

	public Vector3 HomePosition
	{
		[CompilerGenerated]
		get
		{
			return \u202d\u206d\u202c\u202d\u206e\u206b\u206d\u206e\u206f\u202d\u206f\u200d\u200e\u206a\u206a\u202a\u206b\u206a\u202b\u206f\u202e\u206c\u202d\u200f\u200c\u202c\u202c\u200c\u200c\u206d\u206f\u200c\u200e\u206e\u202d\u206d\u206f\u200b\u200f\u206c\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u202d\u206d\u202c\u202d\u206e\u206b\u206d\u206e\u206f\u202d\u206f\u200d\u200e\u206a\u206a\u202a\u206b\u206a\u202b\u206f\u202e\u206c\u202d\u200f\u200c\u202c\u202c\u200c\u200c\u206d\u206f\u200c\u200e\u206e\u202d\u206d\u206f\u200b\u200f\u206c\u202e = value;
		}
	}

	public bool IsPaused
	{
		[CompilerGenerated]
		get
		{
			return \u206b\u206d\u202e\u206a\u202e\u202e\u200d\u206e\u202e\u202b\u206f\u206d\u200c\u200d\u206c\u200d\u200e\u202a\u206c\u200b\u206b\u206f\u206b\u206b\u200e\u202c\u202a\u200e\u206c\u202d\u202c\u202e\u202c\u202a\u200d\u202b\u206e\u206e\u202e\u206b\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u206b\u206d\u202e\u206a\u202e\u202e\u200d\u206e\u202e\u202b\u206f\u206d\u200c\u200d\u206c\u200d\u200e\u202a\u206c\u200b\u206b\u206f\u206b\u206b\u200e\u202c\u202a\u200e\u206c\u202d\u202c\u202e\u202c\u202a\u200d\u202b\u206e\u206e\u202e\u206b\u202e = value;
		}
	}

	public bool IsAlert
	{
		[CompilerGenerated]
		get
		{
			return \u206d\u206d\u202b\u206a\u202d\u206b\u206b\u200d\u202d\u202a\u200c\u202e\u206b\u202b\u206f\u206f\u206f\u206f\u202b\u200f\u200f\u206e\u206a\u200e\u202b\u200b\u206e\u200d\u200d\u200f\u202c\u206b\u200d\u200d\u206c\u200e\u206e\u202c\u202b\u200e\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u206d\u206d\u202b\u206a\u202d\u206b\u206b\u200d\u202d\u202a\u200c\u202e\u206b\u202b\u206f\u206f\u206f\u206f\u202b\u200f\u200f\u206e\u206a\u200e\u202b\u200b\u206e\u200d\u200d\u200f\u202c\u206b\u200d\u200d\u206c\u200e\u206e\u202c\u202b\u200e\u202e = value;
		}
	}

	public Vector3 DestinationOverride
	{
		[CompilerGenerated]
		get
		{
			return \u200e\u200e\u200f\u206e\u200e\u206b\u200b\u202c\u206c\u206b\u206e\u200e\u202a\u206c\u202e\u200f\u200f\u200e\u200e\u200c\u200b\u202e\u206b\u202a\u206f\u202a\u206a\u202b\u200c\u200c\u206d\u202c\u206d\u200f\u200e\u206c\u202c\u206f\u200e\u206e\u202e;
		}
		[CompilerGenerated]
		set
		{
			\u200e\u200e\u200f\u206e\u200e\u206b\u200b\u202c\u206c\u206b\u206e\u200e\u202a\u206c\u202e\u200f\u200f\u200e\u200e\u200c\u200b\u202e\u206b\u202a\u206f\u202a\u206a\u202b\u200c\u200c\u206d\u202c\u206d\u200f\u200e\u206c\u202c\u206f\u200e\u206e\u202e = value;
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public override void ServerInit()
	{
		AssignDeathIconOverride();
		bool flag = default(bool);
		while (true)
		{
			int num = 1386014998;
			while (true)
			{
				uint num2;
				int num13;
				int num3;
				int num14;
				switch ((num2 = (uint)(num ^ 0x36B00000)) % 34)
				{
				case 17u:
					break;
				default:
					return;
				case 5u:
					num13 = (Settings.StartDead ? 1 : 0);
					goto IL_00b6;
				case 12u:
					GetComponent<BaseNavigator>().DefaultArea = global::<Module>.\u206f\u206a\u206d\u202c\u200c\u206d\u206b\u200f\u202a\u202c\u206c\u202e\u206d\u206e\u200c\u200c\u206d\u202a\u206e\u200b\u206e\u206d\u200b\u200b\u206b\u200c\u206c\u200f\u206a\u202a\u206e\u200c\u206b\u202d\u206e\u200b\u202b\u206d\u202c\u202e<string>(-1113449824);
					num = 1958887144;
					continue;
				case 20u:
				{
					string[] kits = Settings.Kits;
					loadouts = ((kits != null && kits.Length != 0) ? null : GetLoadoutForType(npcType));
					int num4;
					if (!Settings.StripCorpseLoot)
					{
						num = 2000000794;
						num4 = num;
					}
					else
					{
						num = 2030956420;
						num4 = num;
					}
					continue;
				}
				case 22u:
					\u202c\u206c\u202b\u200b\u206e\u202e\u200c\u206c\u202d\u206a\u202a\u202e\u202e\u202d\u206f\u206e\u202b\u206c\u200c\u202e\u200d\u206e\u200c\u202a\u206d\u206f\u206e\u200b\u200d\u202d\u206d\u206b\u206c\u200b\u200d\u202d\u202a\u200f\u206c\u202e();
					num = 1855555045;
					continue;
				case 14u:
				{
					Plugin plugin = \u202b\u206c\u206d\u206e\u202c\u202a\u206b\u206a\u206d\u206d\u206d\u200b\u200e\u206c\u202a\u206f\u202a\u200b\u206c\u200c\u200d\u202e\u202b\u202c\u202e\u200e\u200f\u200d\u200f\u200e\u202c\u206e\u200d\u202b\u200b\u202d\u202e\u206b\u202e\u206c\u202e;
					if (plugin == null)
					{
						goto case 22u;
					}
					plugin.Call(global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(816031784), this, Settings.Kits.GetRandom());
					num = 178718872;
					continue;
				}
				case 16u:
					SetChatterType(ScientistNPC.RadioChatterType.Idle);
					num = 623435893;
					continue;
				case 3u:
					npcType = Settings.Types.GetRandom();
					num = ((int)num2 * -1121188210) ^ 0x63CBDC8C;
					continue;
				case 21u:
				{
					base.ServerInit();
					int num11;
					int num12;
					if (npcType != 0)
					{
						num11 = -2068712763;
						num12 = num11;
					}
					else
					{
						num11 = -1206337528;
						num12 = num11;
					}
					num = num11 ^ (int)(num2 * 1285312446);
					continue;
				}
				case 6u:
				{
					int num10;
					if (Settings.StartDead)
					{
						num = 1160514324;
						num10 = num;
					}
					else
					{
						num = 271154185;
						num10 = num;
					}
					continue;
				}
				case 9u:
				{
					int num7;
					if (Settings.DespawnTime <= 0f)
					{
						num = 1284534438;
						num7 = num;
					}
					else
					{
						num = 1488842134;
						num7 = num;
					}
					continue;
				}
				case 33u:
					NavAgent = GetComponent<NavMeshAgent>();
					num = ((int)num2 * -876090605) ^ -1609840447;
					continue;
				case 18u:
					LootSpawnSlots = GetLootSpawnSlotsForType(npcType);
					num = 1096980453;
					continue;
				case 13u:
				{
					string[] kits2 = Settings.Kits;
					if (kits2 != null && kits2.Length != 0)
					{
						num = 1909953330;
						continue;
					}
					goto case 22u;
				}
				case 4u:
					CancelInvoke(base.EquipTest);
					num = ((int)num2 * -1132661276) ^ -1506164208;
					continue;
				case 32u:
					startHealth = Settings.Vitals.Health;
					num = (int)((num2 * 1715872008) ^ 0x24639F6B);
					continue;
				case 27u:
					SetPlayerFlag(PlayerFlags.Wounded, b: true);
					Invoke(delegate
					{
						base.Brain.SwitchToState(AIState.Orbit, 4);
					}, 1f);
					num = (int)((num2 * 2017376017) ^ 0x6D523AA0);
					continue;
				case 2u:
					if (Settings.WoundedChance > 0f)
					{
						num = ((int)num2 * -455113495) ^ -390185499;
						continue;
					}
					num3 = 0;
					goto IL_0568;
				case 26u:
					return;
				case 8u:
					Transform = base.transform;
					HomePosition = base.transform.position;
					num = ((int)num2 * -2071222749) ^ -1680638223;
					continue;
				case 25u:
				{
					int num8;
					int num9;
					if (npcType != NPCType.Scientist)
					{
						num8 = -1132453044;
						num9 = num8;
					}
					else
					{
						num8 = -572191559;
						num9 = num8;
					}
					num = num8 ^ (int)(num2 * 2031088021);
					continue;
				}
				case 29u:
				{
					int num6;
					if (NavAgent == null)
					{
						num = 137106975;
						num6 = num;
					}
					else
					{
						num = 351719820;
						num6 = num;
					}
					continue;
				}
				case 19u:
					InvokeRandomized(IdleCheck, 0f, 20f, 1f);
					num = (int)((num2 * 1246666680) ^ 0x7086F40F);
					continue;
				case 31u:
					Invoke(\u202e\u202d\u206f\u200b\u200c\u206a\u202a\u206a\u200b\u202b\u202c\u206f\u200d\u206a\u202e\u200d\u200b\u206a\u202e\u206d\u206a\u202b\u200d\u202a\u206b\u206f\u202a\u206c\u200f\u200e\u206e\u202b\u206a\u200d\u200c\u206a\u206f\u202c\u206e\u202a\u202e, 1f);
					num = 687783309;
					continue;
				case 28u:
					NavAgent.areaMask = 1;
					NavAgent.agentTypeID = -1372625422;
					num = 2077152958;
					continue;
				case 24u:
					InvokeRepeating(\u200f\u200f\u200d\u202a\u200c\u206d\u206c\u202a\u200f\u206b\u200f\u206f\u206f\u200e\u206f\u206e\u202a\u200e\u206e\u206d\u206e\u206a\u200c\u202d\u200c\u200e\u206b\u202d\u206e\u206e\u206f\u206c\u200b\u206e\u202d\u200b\u202e\u200c\u202b\u202b\u202e, 1f, 30f);
					\u206d\u200f\u206f\u202e\u206e\u202e\u200e\u206d\u200d\u202e\u206a\u202e\u200f\u202c\u202e\u200c\u200d\u206d\u200f\u202b\u202c\u200c\u202a\u200d\u206e\u202c\u206e\u206b\u206d\u202b\u202b\u200f\u200b\u200f\u200c\u206f\u200c\u206d\u206b\u206f\u202e.Add(this, Transform.position.x, Transform.position.z);
					num = 384058943;
					continue;
				case 1u:
				{
					int num5;
					if (!flag)
					{
						num = 1569996449;
						num5 = num;
					}
					else
					{
						num = 1680006641;
						num5 = num;
					}
					continue;
				}
				case 0u:
					Invoke(\u202b\u206d\u200e\u200b\u202e\u200e\u206a\u206b\u200d\u202c\u200e\u206a\u200c\u202c\u202d\u202b\u206e\u200c\u202e\u202d\u206f\u200c\u200b\u206f\u206b\u200d\u206f\u206e\u202a\u202b\u200d\u206d\u206f\u206f\u202b\u202d\u200e\u206c\u200b\u202e\u202e, Settings.DespawnTime);
					num = (int)(num2 * 701823854) ^ -189376302;
					continue;
				case 30u:
					Invoke(\u206d\u202a\u202a\u206f\u200d\u202a\u206d\u206a\u202a\u202e\u200f\u206e\u202c\u202e\u200e\u206f\u206e\u202a\u206c\u206c\u202a\u200f\u206e\u206c\u206c\u206d\u200c\u202d\u200d\u202d\u202c\u200e\u200c\u206b\u202c\u202e\u206a\u200b\u200f\u202d\u202e, 1.5f);
					num = ((int)num2 * -1235183420) ^ -452187124;
					continue;
				case 10u:
					LootSpawnSlots = EMPTY_SLOTS;
					num = ((int)num2 * -1657164805) ^ 0x3B8CBAF3;
					continue;
				case 15u:
					if (!(Settings.WoundedChance >= 100f))
					{
						num = ((int)num2 * -1664169218) ^ -1610461706;
						continue;
					}
					num3 = 1;
					goto IL_0568;
				case 7u:
					num3 = ((UnityEngine.Random.Range(0f, 100f) <= Settings.WoundedChance) ? 1 : 0);
					goto IL_0568;
				case 23u:
					num = (int)(num2 * 916641781) ^ -1286754610;
					continue;
				case 11u:
					return;
					IL_0568:
					flag = (byte)num3 != 0;
					if (!Settings.EquipWeapon)
					{
						num13 = 1;
						goto IL_00b6;
					}
					num = 94645767;
					continue;
					IL_00b6:
					if (((uint)num13 | (flag ? 1u : 0u)) == 0)
					{
						num = 2089371536;
						num14 = num;
					}
					else
					{
						num = 942453856;
						num14 = num;
					}
					continue;
				}
				break;
			}
		}
	}

	public virtual void AssignDeathIconOverride()
	{
		if (loadouts != null)
		{
			while (true)
			{
				int num = -1767335834;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ -1038620891)) % 4)
					{
					case 0u:
						break;
					case 3u:
						DeathIconOverride = loadouts.GetRandom().DeathIconPrefab;
						num = (int)(num2 * 693028121) ^ -1152305704;
						continue;
					case 2u:
						return;
					default:
						goto end_IL_0008;
					}
					break;
				}
				continue;
				end_IL_0008:
				break;
			}
		}
		DeathIconOverride = new GameObjectRef();
	}

	public override void DestroyShared()
	{
		\u206d\u200f\u206f\u202e\u206e\u202e\u200e\u206d\u200d\u202e\u206a\u202e\u200f\u202c\u202e\u200c\u200d\u206d\u200f\u202b\u202c\u200c\u202a\u200d\u206e\u202c\u206e\u206b\u206d\u202b\u202b\u200f\u200b\u200f\u200c\u206f\u200c\u206d\u206b\u206f\u202e.Remove(this);
		while (true)
		{
			int num = -673723809;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1927413502)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
					goto IL_002e;
				case 1u:
					return;
				}
				break;
				IL_002e:
				base.DestroyShared();
				num = (int)(num2 * 1233813900) ^ -1363125671;
			}
		}
	}

	private void \u202e\u202d\u206f\u200b\u200c\u206a\u202a\u206a\u200b\u202b\u202c\u206f\u200d\u206a\u202e\u200d\u200b\u206a\u202e\u206d\u206a\u202b\u200d\u202a\u206b\u206f\u202a\u206c\u200f\u200e\u206e\u202b\u206a\u200d\u200c\u206a\u206f\u202c\u206e\u202a\u202e()
	{
		displayName = ((Settings.DisplayNames.Length != 0) ? Settings.DisplayNames.GetRandom() : npcType.ToString());
	}

	private void \u206d\u202a\u202a\u206f\u200d\u202a\u206d\u206a\u202a\u202e\u200f\u206e\u202c\u202e\u200e\u206f\u206e\u202a\u206c\u206c\u202a\u200f\u206e\u206c\u206c\u206d\u200c\u202d\u200d\u202d\u202c\u200e\u200c\u206b\u202c\u202e\u206a\u200b\u200f\u202d\u202e()
	{
		Die(new HitInfo(this, this, DamageType.Explosion, 1000f));
	}

	private void \u202b\u206d\u200e\u200b\u202e\u200e\u206a\u206b\u200d\u202c\u200e\u206a\u200c\u202c\u202d\u202b\u206e\u200c\u202e\u202d\u206f\u200c\u200b\u206f\u206b\u200d\u206f\u206e\u202a\u202b\u200d\u206d\u206f\u206f\u202b\u202d\u200e\u206c\u200b\u202e\u202e()
	{
		Kill();
	}

	public bool IsMounted()
	{
		return base.isMounted;
	}

	bool IAIMounted.IsMounted()
	{
		//ILSpy generated this explicit interface implementation from .override directive in IsMounted
		return this.IsMounted();
	}

	public void IdleCheck()
	{
		if (!(Time.time > lastAlertedTime + 20f))
		{
			return;
		}
		while (true)
		{
			int num = 1767686893;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x4F475135)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
					goto IL_0035;
				case 1u:
					return;
				}
				break;
				IL_0035:
				SetChatterType(ScientistNPC.RadioChatterType.Idle);
				num = (int)(num2 * 576334796) ^ -1139277673;
			}
		}
	}

	public void SetChatterType(ScientistNPC.RadioChatterType newType)
	{
		if (newType == radioChatterType)
		{
			goto IL_0009;
		}
		goto IL_004b;
		IL_0009:
		int num = 769229283;
		goto IL_000e;
		IL_000e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x3B380A43)) % 7)
			{
			case 4u:
				break;
			default:
				return;
			case 6u:
				return;
			case 0u:
				goto IL_004b;
			case 3u:
				CancelInvoke(PlayRadioChatter);
				num = 60300913;
				continue;
			case 5u:
				return;
			case 1u:
				QueueRadioChatter();
				num = (int)(num2 * 985093786) ^ -249792772;
				continue;
			case 2u:
				return;
			}
			break;
		}
		goto IL_0009;
		IL_004b:
		int num3;
		if (newType != ScientistNPC.RadioChatterType.Idle)
		{
			num = 201395129;
			num3 = num;
		}
		else
		{
			num = 444639922;
			num3 = num;
		}
		goto IL_000e;
	}

	public void QueueRadioChatter()
	{
		if (!IsAlive())
		{
			return;
		}
		while (true)
		{
			int num = 1983562027;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x4AC6F6FD)) % 5)
				{
				case 0u:
					break;
				default:
					return;
				case 1u:
				{
					int num3;
					int num4;
					if (!base.IsDestroyed)
					{
						num3 = -541241555;
						num4 = num3;
					}
					else
					{
						num3 = -707133503;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 1649838491);
					continue;
				}
				case 3u:
					return;
				case 4u:
					Invoke(PlayRadioChatter, UnityEngine.Random.Range(IdleChatterRepeatRange.x, IdleChatterRepeatRange.y));
					num = 539549081;
					continue;
				case 2u:
					return;
				}
				break;
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public void PlayRadioChatter()
	{
		if (RadioChatterEffects.Length == 0)
		{
			goto IL_000c;
		}
		goto IL_00b2;
		IL_000c:
		int num = -528897803;
		goto IL_0011;
		IL_0011:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -1831725450)) % 9)
			{
			case 7u:
				break;
			default:
				return;
			case 2u:
				CancelInvoke(PlayRadioChatter);
				num = -917411455;
				continue;
			case 0u:
				QueueRadioChatter();
				num = ((int)num2 * -913791121) ^ 0x775BCBFB;
				continue;
			case 6u:
				return;
			case 4u:
			{
				int num3;
				int num4;
				if (!(base.transform == null))
				{
					num3 = -2023780950;
					num4 = num3;
				}
				else
				{
					num3 = -1387325194;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -669344080);
				continue;
			}
			case 5u:
				goto IL_00b2;
			case 8u:
				return;
			case 1u:
				Effect.server.Run(RadioChatterEffects[UnityEngine.Random.Range(0, RadioChatterEffects.Length)].resourcePath, this, StringPool.Get(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(-113548702)), Vector3.zero, Vector3.zero);
				num = -307391606;
				continue;
			case 3u:
				return;
			}
			break;
		}
		goto IL_000c;
		IL_00b2:
		int num5;
		if (base.IsDestroyed)
		{
			num = -1160829178;
			num5 = num;
		}
		else
		{
			num = -708525237;
			num5 = num;
		}
		goto IL_0011;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public override void OnAttacked(HitInfo info)
	{
		base.OnAttacked(info);
		Alert();
		while (true)
		{
			int num = 394787346;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x5184BF57)) % 4)
				{
				case 2u:
					break;
				default:
					return;
				case 1u:
				{
					int num3;
					int num4;
					if (npcType == NPCType.GingerBreadMan)
					{
						num3 = 548556063;
						num4 = num3;
					}
					else
					{
						num3 = 666102920;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -1302927524);
					continue;
				}
				case 0u:
					info.HitMaterial = StringPool.Get(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(541394676));
					num = 2087701316;
					continue;
				case 3u:
					return;
				}
				break;
			}
		}
	}

	public void Alert()
	{
		if (npcType != 0)
		{
			goto IL_0008;
		}
		goto IL_006a;
		IL_0008:
		int num = 562411662;
		goto IL_000d;
		IL_000d:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x1A96E847)) % 5)
			{
			case 0u:
				break;
			default:
				return;
			case 4u:
			{
				int num3;
				int num4;
				if (npcType != NPCType.Scientist)
				{
					num3 = -1927032275;
					num4 = num3;
				}
				else
				{
					num3 = -1398584939;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -550029590);
				continue;
			}
			case 1u:
				SetChatterType(ScientistNPC.RadioChatterType.Alert);
				num = (int)((num2 * 1054064320) ^ 0x141E9297);
				continue;
			case 2u:
				goto IL_006a;
			case 3u:
				return;
			}
			break;
		}
		goto IL_0008;
		IL_006a:
		lastAlertedTime = Time.time;
		num = 695454683;
		goto IL_000d;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public virtual void OnKilled(HitInfo info)
	{
		((BasePlayer)this).OnKilled(info);
		while (true)
		{
			int num = 176042724;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x4BBE5C97)) % 11)
				{
				case 3u:
					break;
				default:
					return;
				case 10u:
				{
					int num7;
					int num8;
					if ((bool)info.InitiatorPlayer)
					{
						num7 = -309739329;
						num8 = num7;
					}
					else
					{
						num7 = -556669682;
						num8 = num7;
					}
					num = num7 ^ ((int)num2 * -928142755);
					continue;
				}
				case 0u:
				{
					int num5;
					int num6;
					if (npcType == NPCType.Scientist)
					{
						num5 = -776762970;
						num6 = num5;
					}
					else
					{
						num5 = -1165579116;
						num6 = num5;
					}
					num = num5 ^ (int)(num2 * 308124264);
					continue;
				}
				case 4u:
				{
					int num12;
					int num13;
					if (DeathEffects.Length != 0)
					{
						num12 = -1187957748;
						num13 = num12;
					}
					else
					{
						num12 = -426096188;
						num13 = num12;
					}
					num = num12 ^ ((int)num2 * -139504651);
					continue;
				}
				case 9u:
					SetChatterType(ScientistNPC.RadioChatterType.NONE);
					num = 1320773669;
					continue;
				case 8u:
				{
					int num9;
					int num10;
					if (info.InitiatorPlayer.IsNpc)
					{
						num9 = 1873305966;
						num10 = num9;
					}
					else
					{
						num9 = 1297678592;
						num10 = num9;
					}
					num = num9 ^ ((int)num2 * -1562352155);
					continue;
				}
				case 5u:
				{
					int num11;
					if (info == null)
					{
						num = 829530372;
						num11 = num;
					}
					else
					{
						num = 902531845;
						num11 = num;
					}
					continue;
				}
				case 1u:
				{
					int num3;
					int num4;
					if (npcType == NPCType.HeavyScientist)
					{
						num3 = -708383647;
						num4 = num3;
					}
					else
					{
						num3 = -1375756358;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 1604608397);
					continue;
				}
				case 7u:
					Effect.server.Run(DeathEffects[UnityEngine.Random.Range(0, DeathEffects.Length)].resourcePath, ServerPosition, Vector3.up);
					num = ((int)num2 * -847207165) ^ -514316579;
					continue;
				case 6u:
					info.InitiatorPlayer.stats.Add(global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(-312777505), 1, (Stats)5);
					num = 829530372;
					continue;
				case 2u:
					return;
				}
				break;
			}
		}
	}

	protected virtual LootContainer.LootSpawnSlot[] GetLootSpawnSlotsForType(NPCType type)
	{
		switch (type)
		{
		default:
			while (true)
			{
				int num = 890426621;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ 0x1EE16409)) % 9)
					{
					case 6u:
						break;
					case 2u:
						goto end_IL_001e;
					case 7u:
						goto IL_006e;
					case 1u:
						num = (int)(num2 * 1975394407) ^ -1771587075;
						continue;
					case 0u:
						goto IL_008f;
					case 3u:
						goto IL_00a1;
					case 4u:
						goto IL_00b6;
					case 5u:
						goto end_IL_0001;
					default:
						return null;
					}
					break;
				}
				continue;
				end_IL_001e:
				break;
			}
			goto case NPCType.TunnelDweller;
		case NPCType.TunnelDweller:
			return Definitions.TunnelDweller.LootSpawns;
		case NPCType.BanditGuard:
			goto IL_006e;
		case NPCType.GingerBreadMan:
			goto IL_008f;
		case NPCType.Scarecrow:
			goto IL_00a1;
		case NPCType.Scientist:
			goto IL_00b6;
		case NPCType.HeavyScientist:
			break;
			IL_00b6:
			return Definitions.Scientist.LootSpawns;
			IL_00a1:
			return Definitions.Scarecrow.LootSpawns;
			IL_008f:
			return Definitions.GingerBreadMan.LootSpawns;
			IL_006e:
			return Definitions.BanditGuard.LootSpawns;
			end_IL_0001:
			break;
		}
		return LootSpawnSlots;
	}

	protected virtual PlayerInventoryProperties[] GetLoadoutForType(NPCType type)
	{
		switch (type)
		{
		default:
			while (true)
			{
				int num = -1019854522;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ -1553588628)) % 9)
					{
					case 4u:
						break;
					case 8u:
						goto end_IL_001e;
					case 1u:
						goto IL_006e;
					case 2u:
						goto IL_0080;
					case 3u:
						goto IL_0092;
					case 6u:
						goto IL_00a7;
					case 7u:
						num = (int)((num2 * 1963051328) ^ 0x150750BD);
						continue;
					case 0u:
						goto end_IL_0001;
					default:
						return null;
					}
					break;
				}
				continue;
				end_IL_001e:
				break;
			}
			goto case NPCType.GingerBreadMan;
		case NPCType.GingerBreadMan:
			return Definitions.GingerBreadMan.Loadouts;
		case NPCType.BanditGuard:
			goto IL_006e;
		case NPCType.Scarecrow:
			goto IL_0080;
		case NPCType.TunnelDweller:
			goto IL_0092;
		case NPCType.HeavyScientist:
			goto IL_00a7;
		case NPCType.Scientist:
			break;
			IL_00a7:
			return loadouts;
			IL_0092:
			return Definitions.TunnelDweller.Loadouts;
			IL_0080:
			return Definitions.Scarecrow.Loadouts;
			IL_006e:
			return Definitions.BanditGuard.Loadouts;
			end_IL_0001:
			break;
		}
		return Definitions.Scientist.Loadouts;
	}

	public virtual void OnSensation(Sensation sensation)
	{
		if (!sensation.Initiator)
		{
			return;
		}
		while (true)
		{
			int num = 2046971039;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x210409F3)) % 5)
				{
				case 0u:
					break;
				default:
					return;
				case 4u:
				{
					int num5;
					int num6;
					if (sensation.Initiator is CustomScientistNPC)
					{
						num5 = 167431389;
						num6 = num5;
					}
					else
					{
						num5 = 1717497941;
						num6 = num5;
					}
					num = num5 ^ ((int)num2 * -88227624);
					continue;
				}
				case 3u:
					MoveTowardsTarget(sensation.Initiator, force: false);
					num = (int)((num2 * 954232571) ^ 0x2B07369);
					continue;
				case 2u:
				{
					int num3;
					int num4;
					if (CurrentState >= AIState.Chase)
					{
						num3 = -1519012937;
						num4 = num3;
					}
					else
					{
						num3 = -773671739;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 50052215);
					continue;
				}
				case 1u:
					return;
				}
				break;
			}
		}
	}

	public new BaseEntity GetBestTarget()
	{
		BaseEntity baseEntity = null;
		float num = -1f;
		using (List<BaseEntity>.Enumerator enumerator = base.Brain.Senses.Memory.Targets.GetEnumerator())
		{
			float num8 = default(float);
			BaseEntity current = default(BaseEntity);
			float num7 = default(float);
			float num14 = default(float);
			while (true)
			{
				IL_0113:
				int num2;
				int num3;
				if (enumerator.MoveNext())
				{
					num2 = -1335439987;
					num3 = num2;
				}
				else
				{
					num2 = -465827641;
					num3 = num2;
				}
				while (true)
				{
					uint num4;
					switch ((num4 = (uint)(num2 ^ -1639103756)) % 21)
					{
					case 16u:
						num2 = -1335439987;
						continue;
					default:
						goto end_IL_002d;
					case 18u:
					{
						int num10;
						int num11;
						if (!(num8 >= base.Brain.VisionCone))
						{
							num10 = 1064480150;
							num11 = num10;
						}
						else
						{
							num10 = 1778384280;
							num11 = num10;
						}
						num2 = num10 ^ ((int)num4 * -990891909);
						continue;
					}
					case 8u:
					{
						int num17;
						int num18;
						if (!(current.Health() <= 0f))
						{
							num17 = -2135557303;
							num18 = num17;
						}
						else
						{
							num17 = -1593937906;
							num18 = num17;
						}
						num2 = num17 ^ (int)(num4 * 557820423);
						continue;
					}
					case 10u:
					{
						int num27;
						int num28;
						if (CanTargetEntity(current))
						{
							num27 = -781531411;
							num28 = num27;
						}
						else
						{
							num27 = -910621124;
							num28 = num27;
						}
						num2 = num27 ^ ((int)num4 * -774555374);
						continue;
					}
					case 6u:
						break;
					case 15u:
						num = num7;
						num2 = (int)((num4 * 867281452) ^ 0x6CC5BB82);
						continue;
					case 20u:
						current = enumerator.Current;
						num2 = -1908538678;
						continue;
					case 4u:
					{
						int num12;
						int num13;
						if (lastAttacker != current)
						{
							num12 = -913100578;
							num13 = num12;
						}
						else
						{
							num12 = -830998070;
							num13 = num12;
						}
						num2 = num12 ^ (int)(num4 * 1423491686);
						continue;
					}
					case 19u:
					{
						int num19;
						int num20;
						if (!(num7 > num))
						{
							num19 = -2113817816;
							num20 = num19;
						}
						else
						{
							num19 = -80612913;
							num20 = num19;
						}
						num2 = num19 ^ (int)(num4 * 844490094);
						continue;
					}
					case 14u:
					{
						int num29;
						int num30;
						if (!Settings.Sensory.IgnoreNonVisionSneakers)
						{
							num29 = 1837450840;
							num30 = num29;
						}
						else
						{
							num29 = 661186068;
							num30 = num29;
						}
						num2 = num29 ^ (int)(num4 * 1768535938);
						continue;
					}
					case 0u:
					{
						int num23;
						int num24;
						if (lastAttacker != current)
						{
							num23 = 480760713;
							num24 = num23;
						}
						else
						{
							num23 = 1943415575;
							num24 = num23;
						}
						num2 = num23 ^ (int)(num4 * 1238342792);
						continue;
					}
					case 13u:
					{
						num7 += Mathf.InverseLerp(base.Brain.VisionCone, 1f, num8) / 2f;
						num7 += (base.Brain.Senses.Memory.IsLOS(current) ? 2f : 0f);
						int num9;
						if (lastAttacker != current)
						{
							num2 = -1221129963;
							num9 = num2;
						}
						else
						{
							num2 = -1492111775;
							num9 = num2;
						}
						continue;
					}
					case 1u:
					{
						int num25;
						int num26;
						if (current is BasePlayer)
						{
							num25 = 436322606;
							num26 = num25;
						}
						else
						{
							num25 = 221682163;
							num26 = num25;
						}
						num2 = num25 ^ (int)(num4 * 2118998106);
						continue;
					}
					case 3u:
						num8 = Vector3.Dot((current.transform.position - base.eyes.position).normalized, base.eyes.BodyForward());
						num2 = ((int)num4 * -760708835) ^ 0x12CF0DB8;
						continue;
					case 17u:
						num14 = Vector3.Distance(current.transform.position, Transform.position);
						num2 = -1345108810;
						continue;
					case 2u:
						num7 = 1f - Mathf.InverseLerp(1f, base.Brain.SenseRange, num14);
						num2 = -837220425;
						continue;
					case 5u:
						baseEntity = current;
						num2 = -1790294889;
						continue;
					case 12u:
					{
						int num21;
						int num22;
						if (CanTargetBasePlayer(current as BasePlayer))
						{
							num21 = -1731994647;
							num22 = num21;
						}
						else
						{
							num21 = -1644444718;
							num22 = num21;
						}
						num2 = num21 ^ (int)(num4 * 1450956913);
						continue;
					}
					case 7u:
					{
						int num15;
						int num16;
						if (!(num14 <= base.Brain.Senses.TargetLostRange))
						{
							num15 = -499411048;
							num16 = num15;
						}
						else
						{
							num15 = -957588711;
							num16 = num15;
						}
						num2 = num15 ^ (int)(num4 * 20247766);
						continue;
					}
					case 11u:
					{
						int num5;
						int num6;
						if (current == null)
						{
							num5 = 713664720;
							num6 = num5;
						}
						else
						{
							num5 = 37518234;
							num6 = num5;
						}
						num2 = num5 ^ (int)(num4 * 1322962037);
						continue;
					}
					case 9u:
						goto end_IL_002d;
					}
					goto IL_0113;
					continue;
					end_IL_002d:
					break;
				}
				break;
			}
		}
		CurrentTarget = baseEntity;
		return baseEntity;
	}

	BaseEntity IAIAttack.GetBestTarget()
	{
		//ILSpy generated this explicit interface implementation from .override directive in GetBestTarget
		return this.GetBestTarget();
	}

	public virtual bool CanTargetBasePlayer(BasePlayer player)
	{
		if (player.IsFlying)
		{
			goto IL_000b;
		}
		goto IL_0156;
		IL_000b:
		int num = -679885759;
		goto IL_0010;
		IL_0010:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -927128524)) % 12)
			{
			case 0u:
				break;
			case 3u:
			{
				int num7;
				int num8;
				if (!player.userID.IsSteamId())
				{
					num7 = 1192301155;
					num8 = num7;
				}
				else
				{
					num7 = 1209876376;
					num8 = num7;
				}
				num = num7 ^ ((int)num2 * -1246227933);
				continue;
			}
			case 8u:
			{
				int num5;
				int num6;
				if (player.InSafeZone())
				{
					num5 = -104580965;
					num6 = num5;
				}
				else
				{
					num5 = -1647662665;
					num6 = num5;
				}
				num = num5 ^ ((int)num2 * -489458462);
				continue;
			}
			case 7u:
				return false;
			case 9u:
				goto IL_00b3;
			case 10u:
			{
				int num3;
				int num4;
				if (player.faction != Faction.Horror)
				{
					num3 = -857604716;
					num4 = num3;
				}
				else
				{
					num3 = -1471393893;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -1094700541);
				continue;
			}
			case 1u:
				return false;
			case 5u:
				goto IL_0112;
			case 2u:
				return false;
			case 4u:
				return false;
			case 6u:
				goto IL_0156;
			default:
				return true;
			}
			break;
			IL_0112:
			int num9;
			if (!player.IsNpc)
			{
				num = -106362577;
				num9 = num;
			}
			else
			{
				num = -347394263;
				num9 = num;
			}
			continue;
			IL_00b3:
			int num10;
			if (Settings.Sensory.IgnoreSafeZonePlayers)
			{
				num = -26115132;
				num10 = num;
			}
			else
			{
				num = -94394281;
				num10 = num;
			}
		}
		goto IL_000b;
		IL_0156:
		int num11;
		if (player.IsSleeping())
		{
			num = -516011864;
			num11 = num;
		}
		else
		{
			num = -1280871771;
			num11 = num;
		}
		goto IL_0010;
	}

	public virtual bool CanTargetEntity(BaseEntity baseEntity)
	{
		if (!(baseEntity is BasePlayer))
		{
			while (true)
			{
				uint num;
				switch ((num = 154845857u) % 3)
				{
				case 0u:
					continue;
				case 2u:
					return baseEntity is BaseNpc;
				}
				break;
			}
		}
		return true;
	}

	public bool IsValidDistance(float distanceToTarget)
	{
		if (Settings.ChaseRange > 0f)
		{
			goto IL_0012;
		}
		goto IL_0040;
		IL_0012:
		int num = 1254113293;
		goto IL_0017;
		IL_0017:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x61ADED2A)) % 6)
			{
			case 3u:
				break;
			case 4u:
				goto IL_0040;
			case 0u:
				return false;
			case 1u:
			{
				int num3;
				int num4;
				if (distanceToTarget <= Settings.ChaseRange)
				{
					num3 = 1403996852;
					num4 = num3;
				}
				else
				{
					num3 = 1084802122;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -34576528);
				continue;
			}
			case 2u:
				return false;
			default:
				return true;
			}
			break;
		}
		goto IL_0012;
		IL_0040:
		int num5;
		if (distanceToTarget > base.Brain.TargetLostRange)
		{
			num = 704713200;
			num5 = num;
		}
		else
		{
			num = 1810360547;
			num5 = num;
		}
		goto IL_0017;
	}

	public void NotifyNearby()
	{
		if (CurrentTarget == null)
		{
			goto IL_0011;
		}
		goto IL_0105;
		IL_0011:
		int num = -1340962173;
		goto IL_0016;
		IL_0016:
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		int num3 = default(int);
		int num12 = default(int);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -1140596643)) % 14)
			{
			case 12u:
				break;
			default:
				return;
			case 8u:
			{
				int num10;
				int num11;
				if (customScientistNPC.CurrentState >= AIState.Chase)
				{
					num10 = -1876127366;
					num11 = num10;
				}
				else
				{
					num10 = -439652403;
					num11 = num10;
				}
				num = num10 ^ (int)(num2 * 325693363);
				continue;
			}
			case 4u:
			{
				int num8;
				int num9;
				if (!(customScientistNPC.CurrentTarget == null))
				{
					num8 = 1818970602;
					num9 = num8;
				}
				else
				{
					num8 = 1167561526;
					num9 = num8;
				}
				num = num8 ^ (int)(num2 * 689572801);
				continue;
			}
			case 11u:
				num = (int)((num2 * 763518821) ^ 0x11DC603E);
				continue;
			case 7u:
				customScientistNPC.MoveTowardsTarget(CurrentTarget, force: true);
				num = (int)((num2 * 250887588) ^ 0x3917E22);
				continue;
			case 6u:
				return;
			case 3u:
				customScientistNPC = \u202e\u202a\u200c\u200c\u202a\u206f\u206f\u206f\u200b\u206b\u206a\u206e\u202b\u206c\u206d\u200b\u206a\u202d\u200b\u206d\u202a\u206d\u200c\u202a\u200f\u200f\u200f\u200f\u202e\u206e\u206a\u206c\u206c\u206c\u206b\u206e\u202b\u202c\u200d\u206f\u202e[num3];
				num = -1534142845;
				continue;
			case 5u:
				goto IL_0105;
			case 13u:
				num3++;
				num = -1402008095;
				continue;
			case 9u:
			{
				int num6;
				int num7;
				if (!(customScientistNPC != this))
				{
					num6 = 874323640;
					num7 = num6;
				}
				else
				{
					num6 = 1646753399;
					num7 = num6;
				}
				num = num6 ^ ((int)num2 * -1501236898);
				continue;
			}
			case 2u:
			{
				int num4;
				int num5;
				if (!customScientistNPC)
				{
					num4 = 1204709236;
					num5 = num4;
				}
				else
				{
					num4 = 39675610;
					num5 = num4;
				}
				num = num4 ^ ((int)num2 * -1844953525);
				continue;
			}
			case 10u:
				goto IL_01a7;
			case 1u:
				num3 = 0;
				num = ((int)num2 * -292624532) ^ 0x2714DA72;
				continue;
			case 0u:
				return;
			}
			break;
			IL_01a7:
			int num13;
			if (num3 >= num12)
			{
				num = -720595487;
				num13 = num;
			}
			else
			{
				num = -380840628;
				num13 = num;
			}
		}
		goto IL_0011;
		IL_0105:
		num12 = \u206d\u200f\u206f\u202e\u206e\u202e\u200e\u206d\u200d\u202e\u206a\u202e\u200f\u202c\u202e\u200c\u200d\u206d\u200f\u202b\u202c\u200c\u202a\u200d\u206e\u202c\u206e\u206b\u206d\u202b\u202b\u200f\u200b\u200f\u200c\u206f\u200c\u206d\u206b\u206f\u202e.Query(Transform.position.x, Transform.position.z, 80f, \u202e\u202a\u200c\u200c\u202a\u206f\u206f\u206f\u200b\u206b\u206a\u206e\u202b\u206c\u206d\u200b\u206a\u202d\u200b\u206d\u202a\u206d\u200c\u202a\u200f\u200f\u200f\u200f\u202e\u206e\u206a\u206c\u206c\u206c\u206b\u206e\u202b\u202c\u200d\u206f\u202e, (CustomScientistNPC P_0) => \u202d\u200e\u206d\u206a\u202c\u200d\u200e\u202d\u206a\u206e\u202d\u200c\u200d\u202d\u200e\u202a\u202c\u206f\u206c\u206c\u206f\u206b\u202c\u206b\u206e\u202a\u200d\u202c\u202a\u200e\u200c\u202a\u206b\u206b\u202e\u206f\u206f\u200e\u200c\u202a\u202e(this, P_0));
		num = -1539224248;
		goto IL_0016;
	}

	public void MoveTowardsTarget(BaseEntity target, bool force)
	{
		if (!target)
		{
			goto IL_0008;
		}
		goto IL_0086;
		IL_0008:
		int num = -875140134;
		goto IL_000d;
		IL_000d:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -509974010)) % 10)
			{
			case 8u:
				break;
			default:
				return;
			case 1u:
				IsAlert = true;
				num = ((int)num2 * -1451498118) ^ -1704381589;
				continue;
			case 7u:
			{
				int num5;
				int num6;
				if (!base.Brain)
				{
					num5 = 2052092987;
					num6 = num5;
				}
				else
				{
					num5 = 688235244;
					num6 = num5;
				}
				num = num5 ^ (int)(num2 * 961634709);
				continue;
			}
			case 6u:
				goto IL_0086;
			case 4u:
				return;
			case 0u:
				base.Brain.SwitchToState(AIState.Idle, 0);
				num = (int)(num2 * 13637524) ^ -2092831130;
				continue;
			case 5u:
			{
				base.Brain.Senses.Memory.SetKnown(target, this, null);
				int num3;
				int num4;
				if (base.Brain.states == null)
				{
					num3 = 176370285;
					num4 = num3;
				}
				else
				{
					num3 = 1038426993;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -1416784467);
				continue;
			}
			case 9u:
				DestinationOverride = target.transform.position;
				num = (int)((num2 * 1711548015) ^ 0x66DB5042);
				continue;
			case 3u:
				nextAlertTime = Time.time + 3f;
				num = (int)((num2 * 564476339) ^ 0x449A23AA);
				continue;
			case 2u:
				return;
			}
			break;
		}
		goto IL_0008;
		IL_0086:
		int num7;
		if (Time.time > nextAlertTime || force)
		{
			num = -1985690483;
			num7 = num;
		}
		else
		{
			num = -2112567658;
			num7 = num;
		}
		goto IL_000d;
	}

	private static bool \u202d\u200e\u206d\u206a\u202c\u200d\u200e\u202d\u206a\u206e\u202d\u200c\u200d\u202d\u200e\u202a\u202c\u206f\u206c\u206c\u206f\u206b\u202c\u206b\u206e\u202a\u200d\u202c\u202a\u200e\u200c\u202a\u206b\u206b\u202e\u206f\u206f\u200e\u200c\u202a\u202e(CustomScientistNPC P_0, CustomScientistNPC P_1)
	{
		if (P_0.Plugin == P_1.Plugin)
		{
			while (true)
			{
				uint num;
				switch ((num = 1701525349u) % 3)
				{
				case 2u:
					continue;
				case 1u:
					return P_0 != P_1;
				}
				break;
			}
		}
		return false;
	}

	public override void Hurt(HitInfo info)
	{
		if (info != null)
		{
			goto IL_0006;
		}
		goto IL_017d;
		IL_0006:
		int num = 1161224124;
		goto IL_000b;
		IL_000b:
		Vector3 position = default(Vector3);
		int stateContainer = default(int);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x3330DDB5)) % 9)
			{
			case 8u:
				break;
			default:
				return;
			case 6u:
			{
				int num7;
				int num8;
				if (!info.Initiator)
				{
					num7 = -1031329357;
					num8 = num7;
				}
				else
				{
					num7 = -1727831431;
					num8 = num7;
				}
				num = num7 ^ (int)(num2 * 356584813);
				continue;
			}
			case 0u:
				position = info.Initiator.transform.position;
				num = ((int)num2 * -1142360748) ^ 0xCDD0;
				continue;
			case 1u:
			{
				int num5;
				int num6;
				if ((base.Brain as CustomScientistBrain).GetStateContainerForStateType(AIState.MoveToPoint, out stateContainer))
				{
					num5 = -854790898;
					num6 = num5;
				}
				else
				{
					num5 = -1894694002;
					num6 = num5;
				}
				num = num5 ^ ((int)num2 * -1562601985);
				continue;
			}
			case 2u:
			{
				Vector2 vector = UnityEngine.Random.insideUnitCircle * 10f;
				base.Brain.Events.Memory.Position.Set(position + new Vector3(vector.x, 0f, vector.y), 5);
				base.Brain.SwitchToState(AIState.MoveToPoint, stateContainer);
				num = (int)(num2 * 478726524) ^ -1898356870;
				continue;
			}
			case 4u:
			{
				int num9;
				int num10;
				if (!(info.Initiator is FireBall))
				{
					num9 = 290154211;
					num10 = num9;
				}
				else
				{
					num9 = 2034308292;
					num10 = num9;
				}
				num = num9 ^ (int)(num2 * 205837645);
				continue;
			}
			case 3u:
			{
				int num3;
				int num4;
				if (base.Brain.states.ContainsKey(AIState.MoveToPoint))
				{
					num3 = -1316245343;
					num4 = num3;
				}
				else
				{
					num3 = -913456790;
					num4 = num3;
				}
				num = num3 ^ (int)(num2 * 570584767);
				continue;
			}
			case 7u:
				goto IL_017d;
			case 5u:
				return;
			}
			break;
		}
		goto IL_0006;
		IL_017d:
		base.Hurt(info);
		num = 630156319;
		goto IL_000b;
	}

	public override void EquipWeapon(bool skipDeployDelay = false)
	{
		if (isEquippingWeapon)
		{
			return;
		}
		while (true)
		{
			int num = -1615262962;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1957820915)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 1u:
					goto IL_002a;
				case 2u:
					return;
				}
				break;
				IL_002a:
				StartCoroutine(\u206f\u200b\u206a\u206c\u200b\u206b\u206a\u200d\u200f\u202c\u200d\u206f\u200e\u202d\u206c\u200c\u202c\u202a\u202b\u200f\u200c\u200d\u200c\u206e\u206d\u206a\u202e\u206e\u200b\u200b\u206e\u202b\u206f\u206a\u206b\u202b\u202c\u200b\u202a\u202a\u202e());
				num = ((int)num2 * -18008783) ^ -1885697094;
			}
		}
	}

	public void HolsterWeapon()
	{
		svActiveItemID = default(ItemId);
		HeldEntity heldEntity = default(HeldEntity);
		Item activeItem = default(Item);
		while (true)
		{
			int num = 1883628359;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x183909C0)) % 10)
				{
				case 6u:
					break;
				default:
					return;
				case 4u:
					SendNetworkUpdate();
					num = 1569990170;
					continue;
				case 8u:
					heldEntity.SetHeld(bHeld: false);
					num = (int)((num2 * 1540833261) ^ 0x4B0DB2C);
					continue;
				case 2u:
					base.inventory.UpdatedVisibleHolsteredItems();
					num = (int)(num2 * 1284916460) ^ -1675447361;
					continue;
				case 3u:
					CurrentWeapon = null;
					num = ((int)num2 * -765863341) ^ 0x33BD3B6C;
					continue;
				case 5u:
				{
					int num5;
					int num6;
					if ((bool)heldEntity)
					{
						num5 = -2064625207;
						num6 = num5;
					}
					else
					{
						num5 = -268662731;
						num6 = num5;
					}
					num = num5 ^ ((int)num2 * -1552621345);
					continue;
				}
				case 0u:
					heldEntity = activeItem.GetHeldEntity() as HeldEntity;
					num = (int)(num2 * 734609131) ^ -1181155229;
					continue;
				case 7u:
					activeItem = GetActiveItem();
					num = (int)((num2 * 935828225) ^ 0x1E021D82);
					continue;
				case 9u:
				{
					int num3;
					int num4;
					if (activeItem == null)
					{
						num3 = 1852335726;
						num4 = num3;
					}
					else
					{
						num3 = 557609318;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 1933513070);
					continue;
				}
				case 1u:
					return;
				}
				break;
			}
		}
	}

	private IEnumerator \u206f\u200b\u206a\u206c\u200b\u206b\u206a\u200d\u200f\u202c\u200d\u206f\u200e\u202d\u206c\u200c\u202c\u202a\u202b\u200f\u200c\u200d\u200c\u206e\u206d\u206a\u202e\u206e\u200b\u200b\u206e\u202b\u206f\u206a\u206b\u202b\u202c\u200b\u202a\u202a\u202e(Item P_0 = null)
	{
		HeldEntity heldEntity = default(HeldEntity);
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		Item slot = default(Item);
		int num3 = default(int);
		while (true)
		{
			int num = -1785278384;
			while (true)
			{
				uint num2;
				int num4;
				switch ((num2 = (uint)(num ^ -1712346533)) % 32)
				{
				case 19u:
					break;
				default:
					yield break;
				case 0u:
					(heldEntity as Chainsaw).ServerNPCStart();
					num = ((int)num2 * -1528610687) ^ -1638461489;
					continue;
				case 1u:
					customScientistNPC.isEquippingWeapon = true;
					num = (int)((num2 * 290206493) ^ 0x79E6460E);
					continue;
				case 8u:
					num = ((P_0 == null) ? (-2104004171) : (-2066753144)) ^ ((int)num2 * -1437329131);
					continue;
				case 26u:
					yield return CoroutineEx.waitForSeconds(0.5f);
					/*Error: Unable to find new state assignment for yield return*/;
				case 2u:
					P_0 = slot;
					num = (int)((num2 * 1893910067) ^ 0x44AD2006);
					continue;
				case 10u:
					num3++;
					num = -1187697294;
					continue;
				case 11u:
					customScientistNPC = this;
					num = ((num4 != 0) ? 1870262083 : 115381863) ^ (int)(num2 * 1856969159);
					continue;
				case 24u:
					(heldEntity as AttackEntity).TopUpAmmo();
					num = (int)(num2 * 88492218) ^ -1247932324;
					continue;
				case 30u:
					num = ((!(slot.GetHeldEntity() is AttackEntity)) ? (-1275074387) : (-1074371739)) ^ (int)(num2 * 321842866);
					continue;
				case 18u:
					num = ((customScientistNPC.inventory.containerBelt != null) ? 753547058 : 1124899164) ^ (int)(num2 * 1078215588);
					continue;
				case 22u:
					yield break;
				case 29u:
					num = ((slot != null) ? 1286809148 : 1539567848) ^ ((int)num2 * -166661395);
					continue;
				case 12u:
					heldEntity = P_0.GetHeldEntity() as HeldEntity;
					num = ((int)num2 * -1523882549) ^ -977470781;
					continue;
				case 16u:
					customScientistNPC.isEquippingWeapon = false;
					num = -1876454188;
					continue;
				case 21u:
					num = ((num4 == 1) ? (-641008007) : (-64438198)) ^ ((int)num2 * -936019861);
					continue;
				case 20u:
					customScientistNPC.CurrentWeapon = heldEntity as AttackEntity;
					num = -1791117589;
					continue;
				case 6u:
					num3 = 0;
					num = ((int)num2 * -935438692) ^ 0x1622845A;
					continue;
				case 7u:
					slot = customScientistNPC.inventory.containerBelt.GetSlot(num3);
					num = -708561722;
					continue;
				case 13u:
					try
					{
						num = (int)((num2 * 328886225) ^ 0x2A25608);
					}
					finally
					{
						/*Error: Could not find finallyMethod for state=1.
Possibly this method is affected by a C# compiler bug that causes the finally body
not to run in case of an exception or early 'break;' out of a loop consuming this iterable.*/;
					}
				case 9u:
					num = ((num3 < customScientistNPC.inventory.containerBelt.itemList.Count) ? (-343981316) : (-1347607872));
					continue;
				case 25u:
					num = ((heldEntity is AttackEntity) ? 440173989 : 341152842) ^ ((int)num2 * -557332522);
					continue;
				case 5u:
					customScientistNPC.UpdateActiveItem(P_0.uid);
					num = -160081897;
					continue;
				case 31u:
					num = (customScientistNPC.CurrentWeapon ? (-1038499140) : (-383912574)) ^ (int)(num2 * 756528605);
					continue;
				case 3u:
					customScientistNPC.SendNetworkUpdate();
					customScientistNPC.inventory.UpdatedVisibleHolsteredItems();
					num = ((int)num2 * -483519745) ^ 0x76C5A97C;
					continue;
				case 23u:
					num = ((heldEntity is Chainsaw) ? (-661807813) : (-2078086993));
					continue;
				case 28u:
					num = ((!heldEntity) ? (-1764440717) : (-117983906)) ^ (int)(num2 * 2074609217);
					continue;
				case 4u:
					customScientistNPC.CurrentWeapon.SetHeld(bHeld: false);
					customScientistNPC.CurrentWeapon = null;
					num = ((int)num2 * -169926858) ^ 0x4EFE3240;
					continue;
				case 17u:
					num = ((!customScientistNPC.inventory) ? (-1876454188) : (-552029879));
					continue;
				case 27u:
					num = ((P_0 == null) ? (-1791117589) : (-1605665532));
					continue;
				case 14u:
					/*Error near IL_043b: Unexpected return in MoveNext()*/;
				}
				break;
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	private string \u200c\u202b\u200b\u206b\u200e\u200e\u206f\u202d\u200c\u202e\u200f\u200c\u206e\u206f\u200c\u200c\u202c\u202a\u206a\u206a\u202a\u200b\u206d\u206b\u202c\u200c\u202e\u202c\u202b\u200d\u200c\u202c\u202e\u200d\u206f\u206c\u202b\u200b\u202d\u206f\u202e()
	{
		if (npcType == NPCType.GingerBreadMan)
		{
			while (true)
			{
				int num = 385289090;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ 0x7602AB5E)) % 5)
					{
					case 4u:
						break;
					case 1u:
					{
						UnityEngine.Random.State state = UnityEngine.Random.state;
						UnityEngine.Random.InitState((int)(4332 + (ulong)userID));
						float num3 = UnityEngine.Random.Range(0f, 1f);
						UnityEngine.Random.state = state;
						int num4;
						int num5;
						if (num3 <= 0.5f)
						{
							num4 = 2067756732;
							num5 = num4;
						}
						else
						{
							num4 = 1539816130;
							num5 = num4;
						}
						num = num4 ^ ((int)num2 * -899220816);
						continue;
					}
					case 0u:
						return global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(-1274884386);
					case 3u:
						return global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(1814257761);
					default:
						goto end_IL_000c;
					}
					break;
				}
				continue;
				end_IL_000c:
				break;
			}
		}
		return global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(-2139835912);
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public override BaseCorpse CreateCorpse(PlayerFlags flagsOnDeath, Vector3 posOnDeath, Quaternion rotOnDeath, List<TriggerBase> triggersOnDeath, bool forceServerside = false)
	{
		\u202e\u200b\u202a\u202e\u200b\u206c\u202c\u206b\u202d\u200b\u202e\u206e\u202c\u202b\u200c\u202e\u206c\u206b\u200c\u200b\u202e\u206a\u206e\u200d\u206b\u202b\u206a\u200b\u202b\u202d\u200e\u200e\u202b\u202b\u202e\u206f\u202c\u200f\u200b\u200c\u202e();
		int num15 = default(int);
		LootContainer.LootSpawnSlot lootSpawnSlot = default(LootContainer.LootSpawnSlot);
		ItemContainer newcontainer = default(ItemContainer);
		NPCPlayerCorpse nPCPlayerCorpse = default(NPCPlayerCorpse);
		int num7 = default(int);
		object obj = default(object);
		Item item = default(Item);
		LootContainer.LootSpawnSlot[] lootSpawnSlots = default(LootContainer.LootSpawnSlot[]);
		int num17 = default(int);
		int num11 = default(int);
		int num3 = default(int);
		ItemContainer itemContainer2 = default(ItemContainer);
		string random = default(string);
		ItemContainer[] containers = default(ItemContainer[]);
		ItemContainer itemContainer = default(ItemContainer);
		while (true)
		{
			int num = -674195325;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1796775868)) % 62)
				{
				case 37u:
					break;
				case 19u:
				{
					int num6;
					if (LootSpawnSlots.Length != 0)
					{
						num = -1926233685;
						num6 = num;
					}
					else
					{
						num = -1720064859;
						num6 = num;
					}
					continue;
				}
				case 54u:
					num = ((int)num2 * -929699519) ^ 0x7F8E85ED;
					continue;
				case 59u:
				{
					int num28;
					if (num15 < lootSpawnSlot.numberToSpawn)
					{
						num = -435205111;
						num28 = num;
					}
					else
					{
						num = -1651083336;
						num28 = num;
					}
					continue;
				}
				case 5u:
					newcontainer = nPCPlayerCorpse.containers[0];
					num = (int)((num2 * 1639065563) ^ 0x40B25420);
					continue;
				case 52u:
				{
					int num8;
					int num9;
					if (num7 != 1)
					{
						num8 = -804946098;
						num9 = num8;
					}
					else
					{
						num8 = -849936462;
						num9 = num8;
					}
					num = num8 ^ (int)(num2 * 2082595400);
					continue;
				}
				case 51u:
				{
					int num23;
					if (UnityEngine.Random.Range(0f, 1f) <= lootSpawnSlot.probability)
					{
						num = -904368728;
						num23 = num;
					}
					else
					{
						num = -1999846025;
						num23 = num;
					}
					continue;
				}
				case 55u:
					return (BaseCorpse)obj;
				case 43u:
				{
					nPCPlayerCorpse.SetFlag(Flags.Reserved2, b: true);
					int num34;
					int num35;
					if (!CopyInventoryToCorpse)
					{
						num34 = 697698355;
						num35 = num34;
					}
					else
					{
						num34 = 750491227;
						num35 = num34;
					}
					num = num34 ^ (int)(num2 * 1820449667);
					continue;
				}
				case 26u:
					item.DropAndTossUpwards(base.transform.position);
					num = (int)((num2 * 2097104665) ^ 0x41743440);
					continue;
				case 8u:
				{
					string[] dropAlphaLootProfiles = Settings.DropAlphaLootProfiles;
					if (dropAlphaLootProfiles != null && dropAlphaLootProfiles.Length != 0)
					{
						num = -459070202;
						continue;
					}
					goto case 32u;
				}
				case 18u:
					lootSpawnSlot = lootSpawnSlots[num17];
					num = -142137219;
					continue;
				case 56u:
					return nPCPlayerCorpse;
				case 11u:
					num = (int)((num2 * 506233669) ^ 0xD867F5C);
					continue;
				case 14u:
				{
					int num38;
					int num39;
					if ((Plugin as IChaosNPCPlugin).WantsToPopulateLoot(this, nPCPlayerCorpse))
					{
						num38 = -674434369;
						num39 = num38;
					}
					else
					{
						num38 = -1828829933;
						num39 = num38;
					}
					num = num38 ^ (int)(num2 * 941324668);
					continue;
				}
				case 9u:
					num = ((int)num2 * -660867202) ^ 0x30B74575;
					continue;
				case 36u:
					nPCPlayerCorpse.containers[1].Clear();
					num = ((int)num2 * -346159875) ^ 0x2FE5EA2F;
					continue;
				case 24u:
					num11--;
					num = -294011494;
					continue;
				case 27u:
				{
					int num31;
					if (num3 >= nPCPlayerCorpse.containers.Length)
					{
						num = -2056352949;
						num31 = num;
					}
					else
					{
						num = -608360574;
						num31 = num;
					}
					continue;
				}
				case 13u:
				{
					int num25;
					int num26;
					if (num3 == 1)
					{
						num25 = -1699921065;
						num26 = num25;
					}
					else
					{
						num25 = -803986730;
						num26 = num25;
					}
					num = num25 ^ (int)(num2 * 678207364);
					continue;
				}
				case 0u:
					num17++;
					num = ((int)num2 * -1360049063) ^ 0x6C088AD9;
					continue;
				case 41u:
				{
					int num20;
					int num21;
					if (nPCPlayerCorpse.containers.Length != 3)
					{
						num20 = 1952772471;
						num21 = num20;
					}
					else
					{
						num20 = 1479990938;
						num21 = num20;
					}
					num = num20 ^ ((int)num2 * -2067624674);
					continue;
				}
				case 12u:
					num = ((int)num2 * -327170595) ^ 0x34230A3A;
					continue;
				case 57u:
					nPCPlayerCorpse.playerName = displayName;
					num = -948050868;
					continue;
				case 49u:
				{
					int num13;
					int num14;
					if (item != null)
					{
						num13 = 258226635;
						num14 = num13;
					}
					else
					{
						num13 = 1487600352;
						num14 = num13;
					}
					num = num13 ^ ((int)num2 * -381958982);
					continue;
				}
				case 28u:
					nPCPlayerCorpse.transform.position += Vector3.down * NavAgent.baseOffset;
					num = ((int)num2 * -1897859284) ^ 0x467BC5E4;
					continue;
				case 58u:
					nPCPlayerCorpse.CreateEmptyContainer(base.inventory.containerMain.capacity);
					num = -1832497829;
					continue;
				case 39u:
				{
					int num40;
					int num41;
					if (!item.MoveToContainer(newcontainer))
					{
						num40 = -502255944;
						num41 = num40;
					}
					else
					{
						num40 = -1926176116;
						num41 = num40;
					}
					num = num40 ^ (int)(num2 * 64212610);
					continue;
				}
				case 17u:
				{
					nPCPlayerCorpse = DropCorpse(\u200c\u202b\u200b\u206b\u200e\u200e\u206f\u202d\u200c\u202e\u200f\u200c\u206e\u206f\u200c\u200c\u202c\u202a\u206a\u206a\u202a\u200b\u206d\u206b\u202c\u200c\u202e\u202c\u202b\u200d\u200c\u202c\u202e\u200d\u206f\u206c\u202b\u200b\u202d\u206f\u202e()) as NPCPlayerCorpse;
					int num36;
					int num37;
					if ((bool)nPCPlayerCorpse)
					{
						num36 = -1196285927;
						num37 = num36;
					}
					else
					{
						num36 = -171642328;
						num37 = num36;
					}
					num = num36 ^ (int)(num2 * 1813342731);
					continue;
				}
				case 34u:
				{
					nPCPlayerCorpse.playerSteamID = userID;
					nPCPlayerCorpse.Spawn();
					int num32;
					int num33;
					if (!ShouldCorpseTakeChildren)
					{
						num32 = -1118792868;
						num33 = num32;
					}
					else
					{
						num32 = -1716304569;
						num33 = num32;
					}
					num = num32 ^ ((int)num2 * -1389914136);
					continue;
				}
				case 42u:
				{
					int num29;
					if (num11 < 0)
					{
						num = -1720095274;
						num29 = num;
					}
					else
					{
						num = -1797866052;
						num29 = num;
					}
					continue;
				}
				case 45u:
					num15++;
					num = -2116417343;
					continue;
				case 60u:
					lootSpawnSlot.definition.SpawnIntoContainer(nPCPlayerCorpse.containers[0]);
					num = ((int)num2 * -410430328) ^ 0x7901017;
					continue;
				case 3u:
				{
					int num27;
					if (num17 >= lootSpawnSlots.Length)
					{
						num = -1720064859;
						num27 = num;
					}
					else
					{
						num = -858040672;
						num27 = num;
					}
					continue;
				}
				case 33u:
					lootSpawnSlots = LootSpawnSlots;
					num17 = 0;
					num = -1051237503;
					continue;
				case 2u:
				{
					int num24;
					if (!(bool)\u206c\u200c\u202b\u202e\u200c\u206c\u206e\u206b\u202d\u202d\u202b\u206c\u200e\u202e\u202a\u200c\u206c\u206e\u202c\u206c\u206a\u202d\u202c\u206c\u206b\u200f\u206b\u200f\u202d\u200d\u202c\u200c\u200e\u202a\u206c\u200f\u206d\u202c\u206a\u200f\u202e)
					{
						num = -1562579490;
						num24 = num;
					}
					else
					{
						num = -1319479344;
						num24 = num;
					}
					continue;
				}
				case 32u:
				{
					int num30;
					if (Settings.DropInventoryOnDeath)
					{
						num = -257920189;
						num30 = num;
					}
					else
					{
						num = -655318402;
						num30 = num;
					}
					continue;
				}
				case 16u:
					itemContainer2.Clear();
					num = -1845959365;
					continue;
				case 23u:
				{
					int num22;
					if (!\u206c\u200c\u202b\u202e\u200c\u206c\u206e\u206b\u202d\u202d\u202b\u206c\u200e\u202e\u202a\u200c\u206c\u206e\u202c\u206c\u206a\u202d\u202c\u206c\u206b\u200f\u206b\u200f\u202d\u200d\u202c\u200c\u200e\u202a\u206c\u200f\u206d\u202c\u206a\u200f\u202e.Call<bool>(global::<Module>.\u206f\u206a\u206d\u202c\u200c\u206d\u206b\u200f\u202a\u202c\u206c\u202e\u206d\u206e\u200c\u200c\u206d\u202a\u206e\u200b\u206e\u206d\u200b\u200b\u206b\u200c\u206c\u200f\u206a\u202a\u206e\u200c\u206b\u202d\u206e\u200b\u202b\u206d\u202c\u202e<string>(-1687994990), new object[2]
					{
						nPCPlayerCorpse.containers[0],
						random
					}))
					{
						num = -1562579490;
						num22 = num;
					}
					else
					{
						num = -653484318;
						num22 = num;
					}
					continue;
				}
				case 4u:
					random = Settings.DropAlphaLootProfiles.GetRandom();
					num = ((int)num2 * -2000926251) ^ 0x7AC4F0C7;
					continue;
				case 50u:
					containers[num7].Clear();
					num = -570448238;
					continue;
				case 29u:
				{
					int num19;
					if (KeepCorpseClothingIntact)
					{
						num = -1434908096;
						num19 = num;
					}
					else
					{
						num = -1062459794;
						num19 = num;
					}
					continue;
				}
				case 46u:
					nPCPlayerCorpse.SetLootableIn(2f);
					nPCPlayerCorpse.SetFlag(Flags.Reserved5, HasPlayerFlag(PlayerFlags.DisplaySash));
					num = (int)(num2 * 1724968436) ^ -629732499;
					continue;
				case 22u:
					itemContainer = nPCPlayerCorpse.containers[2];
					num = (int)((num2 * 578240719) ^ 0x7707E8F);
					continue;
				case 44u:
					num3 = 0;
					num = ((int)num2 * -1442539822) ^ 0x429068D6;
					continue;
				case 15u:
					num = (int)((num2 * 2144705227) ^ 0x443E4D6D);
					continue;
				case 40u:
				{
					itemContainer2 = nPCPlayerCorpse.containers[num3];
					int num18;
					if (!KeepCorpseClothingIntact)
					{
						num = -616463174;
						num18 = num;
					}
					else
					{
						num = -1384632129;
						num18 = num;
					}
					continue;
				}
				case 20u:
					containers = nPCPlayerCorpse.containers;
					num7 = 0;
					num = -865215694;
					continue;
				case 10u:
					nPCPlayerCorpse.TakeFrom(this, base.inventory.containerMain, base.inventory.containerWear, base.inventory.containerBelt);
					num = ((int)num2 * -1325718287) ^ 0x4CFF68C9;
					continue;
				case 35u:
					num = ((int)num2 * -1566242157) ^ 0x29D02368;
					continue;
				case 38u:
					num7++;
					num = -844322588;
					continue;
				case 21u:
					nPCPlayerCorpse.TakeChildren(this);
					num = (int)(num2 * 1237842898) ^ -1460652054;
					continue;
				case 48u:
				{
					int num16;
					if (num7 < containers.Length)
					{
						num = -773625269;
						num16 = num;
					}
					else
					{
						num = -2047390116;
						num16 = num;
					}
					continue;
				}
				case 1u:
					return nPCPlayerCorpse;
				case 53u:
					num15 = 0;
					num = (int)(num2 * 2041835954) ^ -1291351371;
					continue;
				case 47u:
				{
					obj = Interface.CallHook(global::<Module>.\u202b\u206a\u206f\u200d\u202e\u202e\u202e\u202c\u202d\u206f\u202a\u206f\u202b\u200c\u206d\u206f\u202b\u200e\u202e\u202c\u206b\u202d\u202c\u200d\u202e\u200c\u202a\u206a\u206b\u202b\u202b\u200f\u200d\u200c\u200d\u206b\u202e\u206f\u200e\u206c\u202e<string>(-1461393204), this, nPCPlayerCorpse);
					int num12;
					if (!(obj is BaseCorpse))
					{
						num = -1891498179;
						num12 = num;
					}
					else
					{
						num = -1993095235;
						num12 = num;
					}
					continue;
				}
				case 6u:
					item = itemContainer.itemList[num11];
					num = -381061625;
					continue;
				case 25u:
					num11 = itemContainer.itemList.Count - 1;
					num = (int)(num2 * 2130059424) ^ -1290323487;
					continue;
				case 61u:
				{
					int num10;
					if (!\u206c\u200c\u202b\u202e\u200c\u206c\u206e\u206b\u202d\u202d\u202b\u206c\u200e\u202e\u202a\u200c\u206c\u206e\u202c\u206c\u206a\u202d\u202c\u206c\u206b\u200f\u206b\u200f\u202d\u200d\u202c\u200c\u200e\u202a\u206c\u200f\u206d\u202c\u206a\u200f\u202e.Call<bool>(global::<Module>.\u206f\u206a\u206d\u202c\u200c\u206d\u206b\u200f\u202a\u202c\u206c\u202e\u206d\u206e\u200c\u200c\u206d\u202a\u206e\u200b\u206e\u206d\u200b\u200b\u206b\u200c\u206c\u200f\u206a\u202a\u206e\u200c\u206b\u202d\u206e\u200b\u202b\u206d\u202c\u202e<string>(-63962989), new object[1] { random }))
					{
						num = -1562579490;
						num10 = num;
					}
					else
					{
						num = -1007530140;
						num10 = num;
					}
					continue;
				}
				case 30u:
				{
					int num4;
					int num5;
					if (KeepCorpseClothingIntact)
					{
						num4 = 45943835;
						num5 = num4;
					}
					else
					{
						num4 = 1980926760;
						num5 = num4;
					}
					num = num4 ^ ((int)num2 * -1798165017);
					continue;
				}
				case 31u:
					num3++;
					num = -562744641;
					continue;
				default:
					return nPCPlayerCorpse;
				}
				break;
			}
		}
	}

	private void \u202c\u206c\u202b\u200b\u206e\u202e\u200c\u206c\u202d\u206a\u202a\u202e\u202e\u202d\u206f\u206e\u202b\u206c\u200c\u202e\u200d\u206e\u200c\u202a\u206d\u206f\u206e\u200b\u200d\u202d\u206d\u206b\u206c\u200b\u200d\u202d\u202a\u200f\u206c\u202e()
	{
		int num = 0;
		Item item = default(Item);
		BaseProjectile baseProjectile = default(BaseProjectile);
		float value = default(float);
		while (true)
		{
			int num2 = 1073812758;
			while (true)
			{
				uint num3;
				switch ((num3 = (uint)(num2 ^ 0x46CF93E2)) % 12)
				{
				case 3u:
					break;
				default:
					return;
				case 9u:
					num++;
					num2 = 1821197860;
					continue;
				case 4u:
					item = base.inventory.containerBelt.itemList[num];
					num2 = 1811477274;
					continue;
				case 6u:
				{
					int num6;
					if (num >= base.inventory.containerBelt.itemList.Count)
					{
						num2 = 662827371;
						num6 = num2;
					}
					else
					{
						num2 = 879311194;
						num6 = num2;
					}
					continue;
				}
				case 2u:
				{
					int num9;
					int num10;
					if (!\u200c\u200d\u206e\u206b\u206b\u202d\u202b\u202e\u202c\u200e\u206e\u200c\u202e\u200d\u206a\u202a\u202a\u200e\u200f\u206d\u202c\u206f\u200e\u206b\u206c\u206d\u206f\u206b\u202e\u206b\u200d\u206d\u206f\u206b\u200b\u200b\u200e\u206a\u206b\u200c\u202e.ContainsKey(item.info.shortname))
					{
						num9 = 537451753;
						num10 = num9;
					}
					else
					{
						num9 = 1886378955;
						num10 = num9;
					}
					num2 = num9 ^ ((int)num3 * -19334614);
					continue;
				}
				case 11u:
					\u200c\u200d\u206e\u206b\u206b\u202d\u202b\u202e\u202c\u200e\u206e\u200c\u202e\u200d\u206a\u202a\u202a\u200e\u200f\u206d\u202c\u206f\u200e\u206b\u206c\u206d\u206f\u206b\u202e\u206b\u200d\u206d\u206f\u206b\u200b\u200b\u200e\u206a\u206b\u200c\u202e[item.info.shortname] = baseProjectile.effectiveRange;
					num2 = ((int)num3 * -1745745164) ^ -1475770629;
					continue;
				case 1u:
					baseProjectile.effectiveRange = value;
					num2 = 1536222935;
					continue;
				case 10u:
				{
					baseProjectile = (item.GetHeldEntity() as HeldEntity) as BaseProjectile;
					int num11;
					int num12;
					if ((object)baseProjectile == null)
					{
						num11 = 488758615;
						num12 = num11;
					}
					else
					{
						num11 = 1697058661;
						num12 = num11;
					}
					num2 = num11 ^ ((int)num3 * -2126392768);
					continue;
				}
				case 7u:
				{
					int num7;
					int num8;
					if (\u206b\u206b\u202e\u206a\u200c\u202d\u206d\u200d\u206d\u202a\u200f\u206b\u200f\u202e\u206e\u206a\u202e\u200d\u200b\u206a\u202c\u202c\u206c\u200d\u202a\u200b\u202a\u206d\u200b\u206d\u206e\u206c\u200d\u202a\u200e\u206b\u202c\u206a\u200c\u200d\u202e.TryGetValue(item.info.shortname, out value))
					{
						num7 = 1048678102;
						num8 = num7;
					}
					else
					{
						num7 = 1876321365;
						num8 = num7;
					}
					num2 = num7 ^ ((int)num3 * -1399818514);
					continue;
				}
				case 8u:
					num2 = (int)(num3 * 1058587529) ^ -994094416;
					continue;
				case 0u:
				{
					int num4;
					int num5;
					if (item == null)
					{
						num4 = -221663937;
						num5 = num4;
					}
					else
					{
						num4 = -1667600524;
						num5 = num4;
					}
					num2 = num4 ^ (int)(num3 * 1283389155);
					continue;
				}
				case 5u:
					return;
				}
				break;
			}
		}
	}

	private void \u202e\u200b\u202a\u202e\u200b\u206c\u202c\u206b\u202d\u200b\u202e\u206e\u202c\u202b\u200c\u202e\u206c\u206b\u200c\u200b\u202e\u206a\u206e\u200d\u206b\u202b\u206a\u200b\u202b\u202d\u200e\u200e\u202b\u202b\u202e\u206f\u202c\u200f\u200b\u200c\u202e()
	{
		int num = 0;
		BaseProjectile baseProjectile = default(BaseProjectile);
		float effectiveRange = default(float);
		Item item = default(Item);
		while (true)
		{
			int num2 = 1266989583;
			while (true)
			{
				uint num3;
				switch ((num3 = (uint)(num2 ^ 0x688A190)) % 9)
				{
				case 0u:
					break;
				default:
					return;
				case 8u:
					baseProjectile.effectiveRange = effectiveRange;
					num2 = (int)(num3 * 1679358332) ^ -1209830396;
					continue;
				case 7u:
				{
					baseProjectile = (item.GetHeldEntity() as HeldEntity) as BaseProjectile;
					int num8;
					int num9;
					if ((object)baseProjectile == null)
					{
						num8 = -587637724;
						num9 = num8;
					}
					else
					{
						num8 = -948378168;
						num9 = num8;
					}
					num2 = num8 ^ (int)(num3 * 1735388138);
					continue;
				}
				case 6u:
				{
					item = base.inventory.containerBelt.itemList[num];
					int num5;
					if (item == null)
					{
						num2 = 833400864;
						num5 = num2;
					}
					else
					{
						num2 = 1130715946;
						num5 = num2;
					}
					continue;
				}
				case 1u:
				{
					int num6;
					int num7;
					if (!\u200c\u200f\u202d\u202a\u206b\u206e\u206b\u202c\u202b\u202c\u206c\u206f\u206f\u206d\u206c\u206c\u200d\u200e\u202e\u206b\u206c\u200b\u206c\u206e\u202c\u200e\u206b\u200e\u202a\u202e\u206d\u206d\u202e\u206d\u200d\u206e\u200c\u202b\u206f\u200e\u202e(item.info.shortname, out effectiveRange))
					{
						num6 = 1152348468;
						num7 = num6;
					}
					else
					{
						num6 = 1404393747;
						num7 = num6;
					}
					num2 = num6 ^ (int)(num3 * 1561992707);
					continue;
				}
				case 2u:
					num++;
					num2 = 227560854;
					continue;
				case 4u:
				{
					int num4;
					if (num >= base.inventory.containerBelt.itemList.Count)
					{
						num2 = 77925881;
						num4 = num2;
					}
					else
					{
						num2 = 1650957698;
						num4 = num2;
					}
					continue;
				}
				case 5u:
					num2 = ((int)num3 * -1233343385) ^ -2132689553;
					continue;
				case 3u:
					return;
				}
				break;
			}
		}
	}

	private static bool \u200c\u200f\u202d\u202a\u206b\u206e\u206b\u202c\u202b\u202c\u206c\u206f\u206f\u206d\u206c\u206c\u200d\u200e\u202e\u206b\u206c\u200b\u206c\u206e\u202c\u200e\u206b\u200e\u202a\u202e\u206d\u206d\u202e\u206d\u200d\u206e\u200c\u202b\u206f\u200e\u202e(string P_0, out float P_1)
	{
		return \u200c\u200d\u206e\u206b\u206b\u202d\u202b\u202e\u202c\u200e\u206e\u200c\u202e\u200d\u206a\u202a\u202a\u200e\u200f\u206d\u202c\u206f\u200e\u206b\u206c\u206d\u206f\u206b\u202e\u206b\u200d\u206d\u206f\u206b\u200b\u200b\u200e\u206a\u206b\u200c\u202e.TryGetValue(P_0, out P_1);
	}

	public override void ServerThink(float delta)
	{
		base.ServerThink(delta);
		if (IsDead())
		{
			return;
		}
		float num3 = default(float);
		bool flag = default(bool);
		while (true)
		{
			int num = -1313375572;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -700856620)) % 15)
				{
				case 10u:
					break;
				default:
					return;
				case 0u:
					modelState.waterLevel = num3;
					num = (int)(num2 * 202912809) ^ -94200236;
					continue;
				case 11u:
					return;
				case 5u:
				{
					int num8;
					if (Settings?.Movement?.CanSwim != true)
					{
						num = -1650739951;
						num8 = num;
					}
					else
					{
						num = -787258781;
						num8 = num;
					}
					continue;
				}
				case 12u:
				{
					int num11;
					int num12;
					if (base.Brain.Navigator.IsSwimming())
					{
						num11 = 2139773884;
						num12 = num11;
					}
					else
					{
						num11 = 2022938176;
						num12 = num11;
					}
					num = num11 ^ (int)(num2 * 295653310);
					continue;
				}
				case 8u:
				{
					int num6;
					int num7;
					if (!(CurrentWeapon is Chainsaw))
					{
						num6 = -984129574;
						num7 = num6;
					}
					else
					{
						num6 = -611859371;
						num7 = num6;
					}
					num = num6 ^ (int)(num2 * 141174547);
					continue;
				}
				case 14u:
					\u202e\u202e\u200e\u200f\u200c\u200f\u206a\u206b\u200e\u202c\u200f\u202b\u202d\u206a\u202c\u200e\u206f\u206e\u202e\u206b\u200c\u202e\u200b\u200e\u202c\u200b\u206f\u202a\u202d\u206f\u202e\u202d\u200f\u206d\u206b\u200d\u202a\u202b\u206e\u206b\u202e(CurrentWeapon as Chainsaw);
					num = (int)(num2 * 1675928210) ^ -558541681;
					continue;
				case 13u:
				{
					int num9;
					int num10;
					if ((bool)base.Brain.Navigator)
					{
						num9 = 782195198;
						num10 = num9;
					}
					else
					{
						num9 = 1686357701;
						num10 = num9;
					}
					num = num9 ^ (int)(num2 * 1332597367);
					continue;
				}
				case 6u:
					num3 = WaterFactor();
					num = ((int)num2 * -1908003296) ^ -257201747;
					continue;
				case 3u:
					SendNetworkUpdate();
					num = -715758177;
					continue;
				case 1u:
					base.Brain.Navigator.CanUseCustomNav = flag;
					num = (int)((num2 * 946662988) ^ 0x4F8FFDAD);
					continue;
				case 4u:
				{
					int num4;
					int num5;
					if (modelState.waterLevel == num3)
					{
						num4 = -730138172;
						num5 = num4;
					}
					else
					{
						num4 = -1921683152;
						num5 = num4;
					}
					num = num4 ^ ((int)num2 * -228852717);
					continue;
				}
				case 7u:
					flag = base.Brain.Navigator.IsSwimming();
					base.Brain.Navigator.CanUseNavMesh = !flag;
					num = -1923019103;
					continue;
				case 2u:
					\u206d\u200b\u202c\u200d\u202a\u206b\u200b\u202e\u200b\u206a\u200e\u206f\u202d\u200d\u202d\u202e\u200c\u202b\u200d\u202e\u200e\u200e\u200c\u202d\u202a\u202e\u206c\u202e\u202c\u202b\u202a\u206e\u202a\u202d\u202e\u202c\u200b\u200e\u206e\u202d\u202e(CurrentWeapon as Chainsaw);
					num = -378352017;
					continue;
				case 9u:
					return;
				}
				break;
			}
		}
	}

	private void \u200f\u200f\u200d\u202a\u200c\u206d\u206c\u202a\u200f\u206b\u200f\u206f\u206f\u200e\u206f\u206e\u202a\u200e\u206e\u206d\u206e\u206a\u200c\u202d\u200c\u200e\u206b\u202d\u206e\u206e\u206f\u206c\u200b\u206e\u202d\u200b\u202e\u200c\u202b\u202b\u202e()
	{
		if (!(TOD_Sky.Instance.Cycle.Hour > 18f))
		{
			goto IL_0019;
		}
		goto IL_00ed;
		IL_0019:
		int num = -1737431519;
		goto IL_001e;
		IL_001e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -2123804065)) % 9)
			{
			case 0u:
				break;
			default:
				return;
			case 2u:
			{
				int num7;
				int num8;
				if (TOD_Sky.Instance.Cycle.Hour >= 6f)
				{
					num7 = -1623828858;
					num8 = num7;
				}
				else
				{
					num7 = -540070047;
					num8 = num7;
				}
				num = num7 ^ (int)(num2 * 1004366335);
				continue;
			}
			case 5u:
			{
				int num5;
				int num6;
				if (lightsOn)
				{
					num5 = -2060104186;
					num6 = num5;
				}
				else
				{
					num5 = -114076209;
					num6 = num5;
				}
				num = num5 ^ ((int)num2 * -1394834408);
				continue;
			}
			case 3u:
				goto IL_00aa;
			case 6u:
				\u200d\u200b\u202a\u200d\u206b\u202d\u202b\u200f\u200e\u206d\u206b\u202a\u206b\u202c\u202e\u200b\u202b\u200d\u200d\u206f\u202d\u202b\u200c\u206d\u200c\u200f\u202a\u202b\u206f\u200d\u206e\u206e\u206a\u200d\u202d\u206b\u202a\u202b\u206c\u206c\u202e(true);
				num = ((int)num2 * -102768536) ^ -1021200596;
				continue;
			case 7u:
				goto IL_00ed;
			case 4u:
			{
				int num3;
				int num4;
				if (TOD_Sky.Instance.Cycle.Hour > 6f)
				{
					num3 = -541588575;
					num4 = num3;
				}
				else
				{
					num3 = -1184994785;
					num4 = num3;
				}
				num = num3 ^ (int)(num2 * 247166752);
				continue;
			}
			case 8u:
				\u200d\u200b\u202a\u200d\u206b\u202d\u202b\u200f\u200e\u206d\u206b\u202a\u206b\u202c\u202e\u200b\u202b\u200d\u200d\u206f\u202d\u202b\u200c\u206d\u200c\u200f\u202a\u202b\u206f\u200d\u206e\u206e\u206a\u200d\u202d\u206b\u202a\u202b\u206c\u206c\u202e(false);
				num = (int)(num2 * 974403881) ^ -1264288786;
				continue;
			case 1u:
				return;
			}
			break;
			IL_00aa:
			int num9;
			if (TOD_Sky.Instance.Cycle.Hour < 18f)
			{
				num = -165781857;
				num9 = num;
			}
			else
			{
				num = -1353666017;
				num9 = num;
			}
		}
		goto IL_0019;
		IL_00ed:
		int num10;
		if (!lightsOn)
		{
			num = -1164863034;
			num10 = num;
		}
		else
		{
			num = -111271676;
			num10 = num;
		}
		goto IL_001e;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	private void \u200d\u200b\u202a\u200d\u206b\u202d\u202b\u200f\u200e\u206d\u206b\u202a\u206b\u202c\u202e\u200b\u202b\u200d\u200d\u206f\u202d\u202b\u200c\u206d\u200c\u200f\u202a\u202b\u206f\u200d\u206e\u206e\u206a\u200d\u202d\u206b\u202a\u202b\u206c\u206c\u202e(bool P_0)
	{
		Item activeItem = GetActiveItem();
		HeldEntity heldEntity = default(HeldEntity);
		ItemModWearable component = default(ItemModWearable);
		Item current = default(Item);
		while (true)
		{
			int num = 1904656305;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0xCB4B982)) % 5)
				{
				case 4u:
					break;
				case 2u:
				{
					int num12;
					int num13;
					if (activeItem != null)
					{
						num12 = 1789878050;
						num13 = num12;
					}
					else
					{
						num12 = 1210369866;
						num13 = num12;
					}
					num = num12 ^ (int)(num2 * 1877025587);
					continue;
				}
				case 3u:
					heldEntity.SendMessage(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(1203810223), P_0, SendMessageOptions.DontRequireReceiver);
					num = 529003107;
					continue;
				case 1u:
				{
					heldEntity = activeItem.GetHeldEntity() as HeldEntity;
					int num10;
					int num11;
					if ((bool)heldEntity)
					{
						num10 = -1705429990;
						num11 = num10;
					}
					else
					{
						num10 = -680095045;
						num11 = num10;
					}
					num = num10 ^ ((int)num2 * -1766708200);
					continue;
				}
				default:
				{
					using (List<Item>.Enumerator enumerator = base.inventory.containerWear.itemList.GetEnumerator())
					{
						while (true)
						{
							IL_00ee:
							int num3;
							int num4;
							if (!enumerator.MoveNext())
							{
								num3 = 1328703882;
								num4 = num3;
							}
							else
							{
								num3 = 1557910758;
								num4 = num3;
							}
							while (true)
							{
								switch ((num2 = (uint)(num3 ^ 0xCB4B982)) % 7)
								{
								case 0u:
									num3 = 1557910758;
									continue;
								default:
									goto end_IL_00bd;
								case 2u:
									break;
								case 1u:
								{
									int num7;
									int num8;
									if (!component)
									{
										num7 = -350231509;
										num8 = num7;
									}
									else
									{
										num7 = -920957176;
										num8 = num7;
									}
									num3 = num7 ^ ((int)num2 * -1584464710);
									continue;
								}
								case 5u:
									current = enumerator.Current;
									component = current.info.GetComponent<ItemModWearable>();
									num3 = 518054117;
									continue;
								case 3u:
									current.SetFlag(Item.Flag.IsOn, P_0);
									current.MarkDirty();
									num3 = ((int)num2 * -715391987) ^ -372664763;
									continue;
								case 4u:
								{
									int num5;
									int num6;
									if (component.emissive)
									{
										num5 = 264751142;
										num6 = num5;
									}
									else
									{
										num5 = 1762001601;
										num6 = num5;
									}
									num3 = num5 ^ ((int)num2 * -1693058359);
									continue;
								}
								case 6u:
									goto end_IL_00bd;
								}
								goto IL_00ee;
								continue;
								end_IL_00bd:
								break;
							}
							break;
						}
					}
					if (base.isMounted)
					{
						while (true)
						{
							int num9 = 476290715;
							while (true)
							{
								switch ((num2 = (uint)(num9 ^ 0xCB4B982)) % 3)
								{
								case 2u:
									break;
								case 1u:
									GetMounted().LightToggle(this);
									num9 = (int)(num2 * 1617380541) ^ -452692240;
									continue;
								default:
									goto end_IL_01a9;
								}
								break;
							}
							continue;
							end_IL_01a9:
							break;
						}
					}
					lightsOn = P_0;
					return;
				}
				}
				break;
			}
		}
	}

	private void \u206d\u200b\u202c\u200d\u202a\u206b\u200b\u202e\u200b\u206a\u200e\u206f\u202d\u200d\u202d\u202e\u200c\u202b\u200d\u202e\u200e\u200e\u200c\u202d\u202a\u202e\u206c\u202e\u202c\u202b\u202a\u206e\u202a\u202d\u202e\u202c\u200b\u200e\u206e\u202d\u202e(Chainsaw P_0)
	{
		if (P_0.HasFlag(Flags.On))
		{
			goto IL_0009;
		}
		goto IL_0083;
		IL_0009:
		int num = 1662309549;
		goto IL_000e;
		IL_000e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x11477C73)) % 6)
			{
			case 4u:
				break;
			default:
				return;
			case 0u:
				P_0.SendNetworkUpdateImmediate();
				num = (int)(num2 * 1128191536) ^ -1578292058;
				continue;
			case 3u:
				Invoke(\u206c\u202a\u200b\u200d\u206a\u200f\u206d\u206f\u206f\u206b\u202c\u200c\u200e\u202c\u200b\u206b\u206d\u200b\u200d\u200c\u200b\u200b\u206e\u202e\u206d\u206f\u206a\u200c\u206c\u200b\u200f\u206e\u200f\u202e\u206b\u202c\u200c\u200d\u200e\u202c\u202e, 1f);
				num = ((int)num2 * -938772872) ^ 0x1B6DF0E4;
				continue;
			case 2u:
				return;
			case 5u:
				goto IL_0083;
			case 1u:
				return;
			}
			break;
		}
		goto IL_0009;
		IL_0083:
		P_0.DoReload(default(RPCMessage));
		P_0.SetEngineStatus(status: true);
		num = 1390250559;
		goto IL_000e;
	}

	private void \u202e\u202e\u200e\u200f\u200c\u200f\u206a\u206b\u200e\u202c\u200f\u202b\u202d\u206a\u202c\u200e\u206f\u206e\u202e\u206b\u200c\u202e\u200b\u200e\u202c\u200b\u206f\u202a\u202d\u206f\u202e\u202d\u200f\u206d\u206b\u200d\u202a\u202b\u206e\u206b\u202e(Chainsaw P_0)
	{
		if (!P_0.HasFlag(Flags.On))
		{
			goto IL_0009;
		}
		goto IL_005d;
		IL_0009:
		int num = -119900714;
		goto IL_000e;
		IL_000e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -305974109)) % 6)
			{
			case 0u:
				break;
			default:
				return;
			case 3u:
				return;
			case 2u:
				P_0.SendNetworkUpdateImmediate();
				num = (int)((num2 * 1370072485) ^ 0x61113FEE);
				continue;
			case 1u:
				goto IL_005d;
			case 5u:
				CancelInvoke(\u206c\u202a\u200b\u200d\u206a\u200f\u206d\u206f\u206f\u206b\u202c\u200c\u200e\u202c\u200b\u206b\u206d\u200b\u200d\u200c\u200b\u200b\u206e\u202e\u206d\u206f\u206a\u200c\u206c\u200b\u200f\u206e\u200f\u202e\u206b\u202c\u200c\u200d\u200e\u202c\u202e);
				num = ((int)num2 * -1431793730) ^ -1709457447;
				continue;
			case 4u:
				return;
			}
			break;
		}
		goto IL_0009;
		IL_005d:
		P_0.SetEngineStatus(status: false);
		num = -2121865835;
		goto IL_000e;
	}

	private void \u206c\u202a\u200b\u200d\u206a\u200f\u206d\u206f\u206f\u206b\u202c\u200c\u200e\u202c\u200b\u206b\u206d\u200b\u200d\u200c\u200b\u200b\u206e\u202e\u206d\u206f\u206a\u200c\u206c\u200b\u200f\u206e\u200f\u202e\u206b\u202c\u200c\u200d\u200e\u202c\u202e()
	{
		if (!(CurrentWeapon is Chainsaw))
		{
			goto IL_000d;
		}
		goto IL_0043;
		IL_000d:
		int num = 1420618968;
		goto IL_0012;
		IL_0012:
		uint num2;
		switch ((num2 = (uint)(num ^ 0x45379145)) % 4)
		{
		case 2u:
			break;
		default:
			return;
		case 1u:
			return;
		case 0u:
			goto IL_0043;
		case 3u:
			return;
		}
		goto IL_000d;
		IL_0043:
		(CurrentWeapon as Chainsaw).ammo = (CurrentWeapon as Chainsaw).maxAmmo;
		Invoke(\u206c\u202a\u200b\u200d\u206a\u200f\u206d\u206f\u206f\u206b\u202c\u200c\u200e\u202c\u200b\u206b\u206d\u200b\u200d\u200c\u200b\u200b\u206e\u202e\u206d\u206f\u206a\u200c\u206c\u200b\u200f\u206e\u200f\u202e\u206b\u202c\u200c\u200d\u200e\u202c\u202e, 1f);
		num = 517453214;
		goto IL_0012;
	}

	public override void AttackerInfo(PlayerLifeStory.DeathInfo info)
	{
		base.AttackerInfo(info);
		while (true)
		{
			int num = -1810091870;
			while (true)
			{
				uint num2;
				string attackerName;
				switch ((num2 = (uint)(num ^ -539775825)) % 3)
				{
				case 2u:
					break;
				default:
					return;
				case 1u:
					info.inflictorName = base.inventory.containerBelt.GetSlot(0)?.info?.shortname;
					attackerName = ((!string.IsNullOrEmpty(displayName)) ? displayName : base.ShortPrefabName);
					goto IL_0074;
				case 0u:
					return;
				}
				break;
				IL_0074:
				info.attackerName = attackerName;
				num = -1162066633;
			}
		}
	}

	public override string Categorize()
	{
		return Plugin.Name;
	}

	public override float GetAimConeScale()
	{
		return Settings.AimConeScale;
	}

	internal void \u200f\u202c\u200b\u202c\u202e\u202e\u202c\u206f\u206e\u202c\u202c\u202d\u206a\u200f\u206f\u202e\u202b\u200e\u202b\u202d\u202b\u206d\u200c\u200e\u202e\u200b\u200e\u206b\u202b\u200c\u202d\u200c\u202e\u206b\u202e\u202c\u202b\u206b\u202a\u202c\u202e(Vector3 P_0, Action P_1)
	{
		base.Brain.Events.Memory.Position.Set(P_0, 5);
		while (true)
		{
			int num = -1697096518;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -391668813)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
					goto IL_003e;
				case 1u:
					return;
				}
				break;
				IL_003e:
				\u200f\u200f\u206a\u200b\u206c\u202a\u202e\u202a\u202e\u206d\u206a\u206d\u200e\u206b\u206f\u200c\u206f\u202b\u202a\u206f\u202b\u202b\u206e\u202c\u200b\u200b\u206a\u202c\u200f\u200b\u206f\u202a\u206f\u200e\u206c\u202a\u206a\u202a\u202c\u202b\u202e = P_1;
				base.Brain.SwitchToState(AIState.MoveToPoint, 3);
				num = ((int)num2 * -6733688) ^ 0x5222D267;
			}
		}
	}

	public void SetPaused(bool paused)
	{
		IsPaused = paused;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	static CustomScientistNPC()
	{
		while (true)
		{
			int num = 1193064434;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x2456A9B7)) % 4)
				{
				case 2u:
					break;
				default:
					return;
				case 1u:
					EMPTY_SLOTS = new LootContainer.LootSpawnSlot[0];
					\u206b\u206b\u202e\u206a\u200c\u202d\u206d\u200d\u206d\u202a\u200f\u206b\u200f\u202e\u206e\u206a\u202e\u200d\u200b\u206a\u202c\u202c\u206c\u200d\u202a\u200b\u202a\u206d\u200b\u206d\u206e\u206c\u200d\u202a\u200e\u206b\u202c\u206a\u200c\u200d\u202e = new Hash<string, float>
					{
						[global::<Module>.\u206f\u206a\u206d\u202c\u200c\u206d\u206b\u200f\u202a\u202c\u206c\u202e\u206d\u206e\u200c\u200c\u206d\u202a\u206e\u200b\u206e\u206d\u200b\u200b\u206b\u200c\u206c\u200f\u206a\u202a\u206e\u200c\u206b\u202d\u206e\u200b\u202b\u206d\u202c\u202e<string>(961469481)] = 40f,
						[global::<Module>.\u206f\u206a\u206d\u202c\u200c\u206d\u206b\u200f\u202a\u202c\u206c\u202e\u206d\u206e\u200c\u200c\u206d\u202a\u206e\u200b\u206e\u206d\u200b\u200b\u206b\u200c\u206c\u200f\u206a\u202a\u206e\u200c\u206b\u202d\u206e\u200b\u202b\u206d\u202c\u202e<string>(-1196749579)] = 30f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(-1172108941)] = 40f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(343322330)] = 8f,
						[global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(-499129823)] = 10f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(495612674)] = 150f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(1706463257)] = 40f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(1302846396)] = 5f,
						[global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(-254263939)] = 45f,
						[global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(-141128983)] = 20f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(1614899253)] = 45f,
						[global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(-1821727551)] = 45f,
						[global::<Module>.\u202b\u206a\u206f\u200d\u202e\u202e\u202e\u202c\u202d\u206f\u202a\u206f\u202b\u200c\u206d\u206f\u202b\u200e\u202e\u202c\u206b\u202d\u202c\u200d\u202e\u200c\u202a\u206a\u206b\u202b\u202b\u200f\u200d\u200c\u200d\u206b\u202e\u206f\u200e\u206c\u202e<string>(-2044370079)] = 45f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(754411360)] = 10f,
						[global::<Module>.\u202b\u206a\u206f\u200d\u202e\u202e\u202e\u202c\u202d\u206f\u202a\u206f\u202b\u200c\u206d\u206f\u202b\u200e\u202e\u202c\u206b\u202d\u202c\u200d\u202e\u200c\u202a\u206a\u206b\u202b\u202b\u200f\u200d\u200c\u200d\u206b\u202e\u206f\u200e\u206c\u202e<string>(-1017743194)] = 80f,
						[global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(-1480853928)] = 150f,
						[global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(960896580)] = 200f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(46213811)] = 100f,
						[global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(1368825348)] = 120f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(198504155)] = 120f,
						[global::<Module>.\u206f\u206a\u206d\u202c\u200c\u206d\u206b\u200f\u202a\u202c\u206c\u202e\u206d\u206e\u200c\u200c\u206d\u202a\u206e\u200b\u206e\u206d\u200b\u200b\u206b\u200c\u206c\u200f\u206a\u202a\u206e\u200c\u206b\u202d\u206e\u200b\u202b\u206d\u202c\u202e<string>(-748445816)] = 50f,
						[global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(-799106682)] = 25f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(-661983738)] = 25f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(1409354738)] = 25f,
						[global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(168951888)] = 15f,
						[global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(1662463438)] = 40f,
						[global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(116310296)] = 60f,
						[global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(618782316)] = 50f,
						[global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(2074300704)] = 20f,
						[global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(-1623261972)] = 20f
					};
					num = 45787316;
					continue;
				case 3u:
					\u200c\u200d\u206e\u206b\u206b\u202d\u202b\u202e\u202c\u200e\u206e\u200c\u202e\u200d\u206a\u202a\u202a\u200e\u200f\u206d\u202c\u206f\u200e\u206b\u206c\u206d\u206f\u206b\u202e\u206b\u200d\u206d\u206f\u206b\u200b\u200b\u200e\u206a\u206b\u200c\u202e = new Hash<string, float>();
					num = (int)((num2 * 1554600863) ^ 0x2A1C562E);
					continue;
				case 0u:
					return;
				}
				break;
			}
		}
	}

	[CompilerGenerated]
	private void \u200f\u202e\u206e\u206c\u202b\u202b\u206b\u202a\u202b\u206e\u206d\u206f\u202e\u202a\u206c\u206f\u202c\u206c\u206f\u200d\u202e\u206d\u206c\u200f\u200b\u200e\u202a\u202c\u200f\u202b\u206d\u202d\u200d\u206a\u206c\u202a\u206f\u206a\u206f\u202d\u202e()
	{
		base.Brain.SwitchToState(AIState.Orbit, 4);
	}

	[CompilerGenerated]
	private bool \u206b\u200d\u200f\u202d\u200f\u200f\u206d\u206b\u200c\u200e\u200d\u202b\u200d\u206e\u206d\u206b\u200b\u206d\u206e\u200c\u206f\u200b\u206c\u200f\u200d\u202c\u200d\u206a\u206e\u200e\u206a\u206f\u206b\u200b\u206e\u200e\u206b\u200b\u202a\u200c\u202e(CustomScientistNPC P_0)
	{
		return \u202d\u200e\u206d\u206a\u202c\u200d\u200e\u202d\u206a\u206e\u202d\u200c\u200d\u202d\u200e\u202a\u202c\u206f\u206c\u206c\u206f\u206b\u202c\u206b\u206e\u202a\u200d\u202c\u202a\u200e\u200c\u202a\u206b\u206b\u202e\u206f\u206f\u200e\u200c\u202a\u202e(this, P_0);
	}
}
