using UnityEngine;

public class MoveToDestinationState : BasicAIState
{
	public MoveToDestinationState()
		: base(AIState.MoveToPoint)
	{
	}

	public override void StateEnter(BaseAIBrain brain, BaseEntity entity)
	{
		base.StateEnter(brain, entity);
		Vector3 pos = brain.Events.Memory.Position.Get(5);
		while (true)
		{
			int num = -967458394;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1553277285)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 1u:
					goto IL_0041;
				case 2u:
					return;
				}
				break;
				IL_0041:
				brain.Navigator.SetDestination(pos, BaseNavigator.NavigationSpeed.Fast, 0.25f);
				num = ((int)num2 * -1589594046) ^ 0x14A8B8EE;
			}
		}
	}

	public override StateStatus StateThink(float delta, BaseAIBrain brain, BaseEntity entity)
	{
		base.StateThink(delta, brain, entity);
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		Vector3 vector = default(Vector3);
		while (true)
		{
			int num = 1751615688;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x1D007B1C)) % 9)
				{
				case 0u:
					break;
				case 6u:
				{
					customScientistNPC = entity as CustomScientistNPC;
					vector = brain.Events.Memory.Position.Get(5);
					int num5;
					int num6;
					if (!brain.Navigator.SetDestination(vector, BaseNavigator.NavigationSpeed.Fast, 0.25f))
					{
						num5 = -1670725356;
						num6 = num5;
					}
					else
					{
						num5 = -104804027;
						num6 = num5;
					}
					num = num5 ^ (int)(num2 * 662826564);
					continue;
				}
				case 4u:
					customScientistNPC.\u200f\u200f\u206a\u200b\u206c\u202a\u202e\u202a\u202e\u206d\u206a\u206d\u200e\u206b\u206f\u200c\u206f\u202b\u202a\u206f\u202b\u202b\u206e\u202c\u200b\u200b\u206a\u202c\u200f\u200b\u206f\u202a\u206f\u200e\u206c\u202a\u206a\u202a\u202c\u202b\u202e = null;
					num = ((int)num2 * -1565395630) ^ -202565452;
					continue;
				case 3u:
					customScientistNPC.\u200f\u200f\u206a\u200b\u206c\u202a\u202e\u202a\u202e\u206d\u206a\u206d\u200e\u206b\u206f\u200c\u206f\u202b\u202a\u206f\u202b\u202b\u206e\u202c\u200b\u200b\u206a\u202c\u200f\u200b\u206f\u202a\u206f\u200e\u206c\u202a\u206a\u202a\u202c\u202b\u202e();
					num = (int)(num2 * 734192381) ^ -1529672699;
					continue;
				case 2u:
					return StateStatus.Error;
				case 7u:
				{
					int num7;
					if (Vector3.Distance(customScientistNPC.Transform.position, vector) >= 3f)
					{
						num = 1058801107;
						num7 = num;
					}
					else
					{
						num = 261552592;
						num7 = num;
					}
					continue;
				}
				case 8u:
					return StateStatus.Finished;
				case 1u:
				{
					int num3;
					int num4;
					if (customScientistNPC.\u200f\u200f\u206a\u200b\u206c\u202a\u202e\u202a\u202e\u206d\u206a\u206d\u200e\u206b\u206f\u200c\u206f\u202b\u202a\u206f\u202b\u202b\u206e\u202c\u200b\u200b\u206a\u202c\u200f\u200b\u206f\u202a\u206f\u200e\u206c\u202a\u206a\u202a\u202c\u202b\u202e != null)
					{
						num3 = 730194685;
						num4 = num3;
					}
					else
					{
						num3 = 832053504;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -1679174877);
					continue;
				}
				default:
					return StateStatus.Running;
				}
				break;
			}
		}
	}
}
