using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using UnityEngine;

[CompilerGenerated]
private sealed class X"^rv@2Yzwi81xc~LF(,tEeT( : IEnumerator<object>, IDisposable, IEnumerator
{
	private int \u206c\u206b\u202b\u202b\u206e\u200c\u206c\u200d\u202d\u200b\u206c\u200e\u206c\u202b\u202e\u200e\u202d\u206c\u206c\u206b\u200b\u202d\u206a\u202b\u200f\u200d\u202c\u202c\u202e\u206d\u202a\u206c\u200c\u200b\u200b\u206d\u200f\u206b\u206a\u200f\u202e;

	private object \u206e\u200c\u206c\u200d\u206e\u200f\u202e\u202b\u200c\u200d\u206c\u200c\u206a\u202c\u206a\u200b\u206d\u200b\u202e\u206c\u206a\u200e\u206f\u202d\u202a\u200f\u200f\u202a\u202c\u206c\u202d\u206b\u200d\u200c\u202e\u200d\u206d\u202d\u206f\u202b\u202e;

	public CustomScientistNPC \u206c\u200b\u202a\u206c\u206d\u206c\u206a\u206d\u206f\u200b\u202a\u200d\u202b\u200c\u202e\u206b\u206e\u202b\u200d\u200b\u202b\u202e\u202d\u202a\u202a\u206b\u206e\u202a\u206f\u202d\u206d\u206e\u206f\u206a\u200f\u206d\u206f\u202a\u202e\u202d\u202e;

	public Item \u202e\u202d\u200d\u202c\u202b\u202e\u200f\u200d\u200d\u206c\u200c\u206d\u200b\u200e\u206d\u206a\u202a\u200e\u206f\u202c\u200d\u202b\u200b\u200f\u200f\u202e\u202e\u206f\u202b\u202b\u202e\u202a\u200e\u202b\u200b\u202c\u202b\u206e\u202d\u206e\u202e;

	object IEnumerator<object>.\u202b\u206b\u200d\u202d\u206b\u206f\u200f\u206f\u202c\u202b\u206b\u206c\u200c\u200e\u200f\u206a\u202a\u206b\u206c\u202e\u206b\u202a\u206b\u200e\u206d\u206e\u200d\u202b\u206e\u200f\u202d\u200f\u202a\u206c\u200d\u202b\u202d\u202a\u202c\u200e\u202e
	{
		[DebuggerHidden]
		get
		{
			return \u206e\u200c\u206c\u200d\u206e\u200f\u202e\u202b\u200c\u200d\u206c\u200c\u206a\u202c\u206a\u200b\u206d\u200b\u202e\u206c\u206a\u200e\u206f\u202d\u202a\u200f\u200f\u202a\u202c\u206c\u202d\u206b\u200d\u200c\u202e\u200d\u206d\u202d\u206f\u202b\u202e;
		}
	}

	object IEnumerator.\u206f\u206a\u202a\u202d\u200c\u202c\u202a\u200d\u202d\u202d\u202c\u200c\u200c\u202a\u206b\u200b\u202a\u206f\u202e\u200d\u206d\u202d\u200f\u206f\u200f\u206d\u206a\u200b\u202d\u202a\u202c\u202e\u202a\u200f\u200b\u206f\u206e\u202c\u206c\u200d\u202e
	{
		[DebuggerHidden]
		get
		{
			return \u206e\u200c\u206c\u200d\u206e\u200f\u202e\u202b\u200c\u200d\u206c\u200c\u206a\u202c\u206a\u200b\u206d\u200b\u202e\u206c\u206a\u200e\u206f\u202d\u202a\u200f\u200f\u202a\u202c\u206c\u202d\u206b\u200d\u200c\u202e\u200d\u206d\u202d\u206f\u202b\u202e;
		}
	}

	[DebuggerHidden]
	public X"^rv@2Yzwi81xc~LF(,tEeT((int P_0)
	{
		\u206c\u206b\u202b\u202b\u206e\u200c\u206c\u200d\u202d\u200b\u206c\u200e\u206c\u202b\u202e\u200e\u202d\u206c\u206c\u206b\u200b\u202d\u206a\u202b\u200f\u200d\u202c\u202c\u202e\u206d\u202a\u206c\u200c\u200b\u200b\u206d\u200f\u206b\u206a\u200f\u202e = P_0;
	}

	[DebuggerHidden]
	void IDisposable.Dispose()
	{
	}

	private bool MoveNext()
	{
		int num = \u206c\u206b\u202b\u202b\u206e\u200c\u206c\u200d\u202d\u200b\u206c\u200e\u206c\u202b\u202e\u200e\u202d\u206c\u206c\u206b\u200b\u202d\u206a\u202b\u200f\u200d\u202c\u202c\u202e\u206d\u202a\u206c\u200c\u200b\u200b\u206d\u200f\u206b\u206a\u200f\u202e;
		HeldEntity heldEntity = default(HeldEntity);
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		Item slot = default(Item);
		int num5 = default(int);
		while (true)
		{
			int num2 = -1785278384;
			while (true)
			{
				uint num3;
				switch ((num3 = (uint)(num2 ^ -1712346533)) % 32)
				{
				case 19u:
					break;
				case 0u:
					(heldEntity as Chainsaw).ServerNPCStart();
					num2 = ((int)num3 * -1528610687) ^ -1638461489;
					continue;
				case 1u:
					customScientistNPC.isEquippingWeapon = true;
					num2 = (int)((num3 * 290206493) ^ 0x79E6460E);
					continue;
				case 8u:
				{
					int num25;
					int num26;
					if (\u202e\u202d\u200d\u202c\u202b\u202e\u200f\u200d\u200d\u206c\u200c\u206d\u200b\u200e\u206d\u206a\u202a\u200e\u206f\u202c\u200d\u202b\u200b\u200f\u200f\u202e\u202e\u206f\u202b\u202b\u202e\u202a\u200e\u202b\u200b\u202c\u202b\u206e\u202d\u206e\u202e != null)
					{
						num25 = -2066753144;
						num26 = num25;
					}
					else
					{
						num25 = -2104004171;
						num26 = num25;
					}
					num2 = num25 ^ ((int)num3 * -1437329131);
					continue;
				}
				case 26u:
					\u206e\u200c\u206c\u200d\u206e\u200f\u202e\u202b\u200c\u200d\u206c\u200c\u206a\u202c\u206a\u200b\u206d\u200b\u202e\u206c\u206a\u200e\u206f\u202d\u202a\u200f\u200f\u202a\u202c\u206c\u202d\u206b\u200d\u200c\u202e\u200d\u206d\u202d\u206f\u202b\u202e = CoroutineEx.waitForSeconds(0.5f);
					num2 = -1010535594;
					continue;
				case 2u:
					\u202e\u202d\u200d\u202c\u202b\u202e\u200f\u200d\u200d\u206c\u200c\u206d\u200b\u200e\u206d\u206a\u202a\u200e\u206f\u202c\u200d\u202b\u200b\u200f\u200f\u202e\u202e\u206f\u202b\u202b\u202e\u202a\u200e\u202b\u200b\u202c\u202b\u206e\u202d\u206e\u202e = slot;
					num2 = (int)((num3 * 1893910067) ^ 0x44AD2006);
					continue;
				case 10u:
					num5++;
					num2 = -1187697294;
					continue;
				case 11u:
				{
					customScientistNPC = \u206c\u200b\u202a\u206c\u206d\u206c\u206a\u206d\u206f\u200b\u202a\u200d\u202b\u200c\u202e\u206b\u206e\u202b\u200d\u200b\u202b\u202e\u202d\u202a\u202a\u206b\u206e\u202a\u206f\u202d\u206d\u206e\u206f\u206a\u200f\u206d\u206f\u202a\u202e\u202d\u202e;
					int num18;
					int num19;
					if (num == 0)
					{
						num18 = 115381863;
						num19 = num18;
					}
					else
					{
						num18 = 1870262083;
						num19 = num18;
					}
					num2 = num18 ^ (int)(num3 * 1856969159);
					continue;
				}
				case 24u:
					(heldEntity as AttackEntity).TopUpAmmo();
					num2 = (int)(num3 * 88492218) ^ -1247932324;
					continue;
				case 30u:
				{
					int num11;
					int num12;
					if (slot.GetHeldEntity() is AttackEntity)
					{
						num11 = -1074371739;
						num12 = num11;
					}
					else
					{
						num11 = -1275074387;
						num12 = num11;
					}
					num2 = num11 ^ (int)(num3 * 321842866);
					continue;
				}
				case 18u:
				{
					int num22;
					int num23;
					if (customScientistNPC.inventory.containerBelt == null)
					{
						num22 = 1124899164;
						num23 = num22;
					}
					else
					{
						num22 = 753547058;
						num23 = num22;
					}
					num2 = num22 ^ (int)(num3 * 1078215588);
					continue;
				}
				case 22u:
					return false;
				case 29u:
				{
					int num14;
					int num15;
					if (slot == null)
					{
						num14 = 1539567848;
						num15 = num14;
					}
					else
					{
						num14 = 1286809148;
						num15 = num14;
					}
					num2 = num14 ^ ((int)num3 * -166661395);
					continue;
				}
				case 12u:
					heldEntity = \u202e\u202d\u200d\u202c\u202b\u202e\u200f\u200d\u200d\u206c\u200c\u206d\u200b\u200e\u206d\u206a\u202a\u200e\u206f\u202c\u200d\u202b\u200b\u200f\u200f\u202e\u202e\u206f\u202b\u202b\u202e\u202a\u200e\u202b\u200b\u202c\u202b\u206e\u202d\u206e\u202e.GetHeldEntity() as HeldEntity;
					num2 = ((int)num3 * -1523882549) ^ -977470781;
					continue;
				case 16u:
					customScientistNPC.isEquippingWeapon = false;
					num2 = -1876454188;
					continue;
				case 21u:
				{
					int num7;
					int num8;
					if (num != 1)
					{
						num7 = -64438198;
						num8 = num7;
					}
					else
					{
						num7 = -641008007;
						num8 = num7;
					}
					num2 = num7 ^ ((int)num3 * -936019861);
					continue;
				}
				case 20u:
					customScientistNPC.CurrentWeapon = heldEntity as AttackEntity;
					num2 = -1791117589;
					continue;
				case 6u:
					num5 = 0;
					num2 = ((int)num3 * -935438692) ^ 0x1622845A;
					continue;
				case 7u:
					slot = customScientistNPC.inventory.containerBelt.GetSlot(num5);
					num2 = -708561722;
					continue;
				case 13u:
					\u206c\u206b\u202b\u202b\u206e\u200c\u206c\u200d\u202d\u200b\u206c\u200e\u206c\u202b\u202e\u200e\u202d\u206c\u206c\u206b\u200b\u202d\u206a\u202b\u200f\u200d\u202c\u202c\u202e\u206d\u202a\u206c\u200c\u200b\u200b\u206d\u200f\u206b\u206a\u200f\u202e = 1;
					num2 = (int)((num3 * 328886225) ^ 0x2A25608);
					continue;
				case 9u:
				{
					int num24;
					if (num5 >= customScientistNPC.inventory.containerBelt.itemList.Count)
					{
						num2 = -1347607872;
						num24 = num2;
					}
					else
					{
						num2 = -343981316;
						num24 = num2;
					}
					continue;
				}
				case 25u:
				{
					int num20;
					int num21;
					if (!(heldEntity is AttackEntity))
					{
						num20 = 341152842;
						num21 = num20;
					}
					else
					{
						num20 = 440173989;
						num21 = num20;
					}
					num2 = num20 ^ ((int)num3 * -557332522);
					continue;
				}
				case 5u:
					\u206c\u206b\u202b\u202b\u206e\u200c\u206c\u200d\u202d\u200b\u206c\u200e\u206c\u202b\u202e\u200e\u202d\u206c\u206c\u206b\u200b\u202d\u206a\u202b\u200f\u200d\u202c\u202c\u202e\u206d\u202a\u206c\u200c\u200b\u200b\u206d\u200f\u206b\u206a\u200f\u202e = -1;
					customScientistNPC.UpdateActiveItem(\u202e\u202d\u200d\u202c\u202b\u202e\u200f\u200d\u200d\u206c\u200c\u206d\u200b\u200e\u206d\u206a\u202a\u200e\u206f\u202c\u200d\u202b\u200b\u200f\u200f\u202e\u202e\u206f\u202b\u202b\u202e\u202a\u200e\u202b\u200b\u202c\u202b\u206e\u202d\u206e\u202e.uid);
					num2 = -160081897;
					continue;
				case 31u:
				{
					int num16;
					int num17;
					if (!customScientistNPC.CurrentWeapon)
					{
						num16 = -383912574;
						num17 = num16;
					}
					else
					{
						num16 = -1038499140;
						num17 = num16;
					}
					num2 = num16 ^ (int)(num3 * 756528605);
					continue;
				}
				case 3u:
					customScientistNPC.SendNetworkUpdate();
					customScientistNPC.inventory.UpdatedVisibleHolsteredItems();
					num2 = ((int)num3 * -483519745) ^ 0x76C5A97C;
					continue;
				case 23u:
				{
					int num13;
					if (!(heldEntity is Chainsaw))
					{
						num2 = -2078086993;
						num13 = num2;
					}
					else
					{
						num2 = -661807813;
						num13 = num2;
					}
					continue;
				}
				case 28u:
				{
					int num9;
					int num10;
					if ((bool)heldEntity)
					{
						num9 = -117983906;
						num10 = num9;
					}
					else
					{
						num9 = -1764440717;
						num10 = num9;
					}
					num2 = num9 ^ (int)(num3 * 2074609217);
					continue;
				}
				case 4u:
					customScientistNPC.CurrentWeapon.SetHeld(bHeld: false);
					customScientistNPC.CurrentWeapon = null;
					num2 = ((int)num3 * -169926858) ^ 0x4EFE3240;
					continue;
				case 17u:
				{
					\u206c\u206b\u202b\u202b\u206e\u200c\u206c\u200d\u202d\u200b\u206c\u200e\u206c\u202b\u202e\u200e\u202d\u206c\u206c\u206b\u200b\u202d\u206a\u202b\u200f\u200d\u202c\u202c\u202e\u206d\u202a\u206c\u200c\u200b\u200b\u206d\u200f\u206b\u206a\u200f\u202e = -1;
					int num6;
					if ((bool)customScientistNPC.inventory)
					{
						num2 = -552029879;
						num6 = num2;
					}
					else
					{
						num2 = -1876454188;
						num6 = num2;
					}
					continue;
				}
				case 27u:
				{
					int num4;
					if (\u202e\u202d\u200d\u202c\u202b\u202e\u200f\u200d\u200d\u206c\u200c\u206d\u200b\u200e\u206d\u206a\u202a\u200e\u206f\u202c\u200d\u202b\u200b\u200f\u200f\u202e\u202e\u206f\u202b\u202b\u202e\u202a\u200e\u202b\u200b\u202c\u202b\u206e\u202d\u206e\u202e != null)
					{
						num2 = -1605665532;
						num4 = num2;
					}
					else
					{
						num2 = -1791117589;
						num4 = num2;
					}
					continue;
				}
				case 14u:
					return true;
				default:
					return false;
				}
				break;
			}
		}
	}

	bool IEnumerator.MoveNext()
	{
		//ILSpy generated this explicit interface implementation from .override directive in MoveNext
		return this.MoveNext();
	}

	[DebuggerHidden]
	void IEnumerator.Reset()
	{
		throw new NotSupportedException();
	}
}
