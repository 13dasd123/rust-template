using UnityEngine;
using UnityEngine.AI;

public class CustomChaseState : BasicAIState
{
	protected StateStatus status = StateStatus.Error;

	protected float nextPositionUpdateTime;

	protected float originalStopDistance;

	protected bool unreachableLastUpdate;

	protected float targetLostTime;

	protected float targetLastVisibleTime;

	protected NavMeshHit navmeshHit;

	public CustomChaseState()
		: base(AIState.Chase)
	{
		base.AgrresiveState = true;
	}

	public override void StateLeave(BaseAIBrain brain, BaseEntity entity)
	{
		base.StateLeave(brain, entity);
		while (true)
		{
			int num = -1965856127;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -2130995393)) % 4)
				{
				case 0u:
					break;
				default:
					return;
				case 2u:
					Stop();
					num = ((int)num2 * -2109232228) ^ -1894213402;
					continue;
				case 1u:
					brain.Navigator.StoppingDistance = originalStopDistance;
					num = (int)(num2 * 1770442703) ^ -1525340589;
					continue;
				case 3u:
					return;
				}
				break;
			}
		}
	}

	public override void StateEnter(BaseAIBrain brain, BaseEntity entity)
	{
		base.StateEnter(brain, entity);
		status = StateStatus.Error;
		if (brain.PathFinder == null)
		{
			goto IL_001a;
		}
		goto IL_00a5;
		IL_001a:
		int num = 492546013;
		goto IL_001f;
		IL_001f:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x12FD1840)) % 9)
			{
			case 6u:
				break;
			default:
				return;
			case 2u:
			{
				int num3;
				int num4;
				if ((entity as CustomScientistNPC).CurrentWeapon is BaseMelee)
				{
					num3 = -1607160910;
					num4 = num3;
				}
				else
				{
					num3 = -132907550;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -1345339822);
				continue;
			}
			case 7u:
				brain.Navigator.StoppingDistance = 0.1f;
				num = ((int)num2 * -507176610) ^ -1793187174;
				continue;
			case 5u:
				goto IL_00a5;
			case 8u:
				originalStopDistance = brain.Navigator.StoppingDistance;
				num = (int)((num2 * 190905468) ^ 0xF2666B);
				continue;
			case 1u:
				return;
			case 4u:
				brain.Navigator.SetCurrentSpeed(BaseNavigator.NavigationSpeed.Fast);
				num = 1028278464;
				continue;
			case 0u:
				targetLostTime = 0f;
				targetLastVisibleTime = Time.time;
				num = ((int)num2 * -1620085680) ^ 0x693633AE;
				continue;
			case 3u:
				return;
			}
			break;
		}
		goto IL_001a;
		IL_00a5:
		status = StateStatus.Running;
		nextPositionUpdateTime = 0f;
		num = 313732231;
		goto IL_001f;
	}

	protected void Stop()
	{
		brain.Navigator.Stop();
		brain.Navigator.ClearFacingDirectionOverride();
	}

	public override StateStatus StateThink(float delta, BaseAIBrain brain, BaseEntity entity)
	{
		base.StateThink(delta, brain, entity);
		BaseEntity baseEntity = default(BaseEntity);
		Vector3 randomPositionAround = default(Vector3);
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		float num12 = default(float);
		while (true)
		{
			int num = -1279089991;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1844729031)) % 41)
				{
				case 31u:
					break;
				case 27u:
					unreachableLastUpdate = true;
					num = (int)((num2 * 446503951) ^ 0x28B178D7);
					continue;
				case 20u:
					targetLostTime += delta;
					num = (int)(num2 * 1383431903) ^ -910148421;
					continue;
				case 10u:
					nextPositionUpdateTime = Random.Range(3f, 6f);
					num = (int)(num2 * 1374036266) ^ -1942453582;
					continue;
				case 30u:
					Stop();
					return StateStatus.Finished;
				case 14u:
				{
					Vector3 randomPositionAround2 = GetRandomPositionAround(baseEntity.transform.position, 3f, 10f);
					brain.Navigator.SetDestination(randomPositionAround2, BaseNavigator.NavigationSpeed.Fast, 0.1f);
					nextPositionUpdateTime = Time.time + 3f;
					unreachableLastUpdate = false;
					num = (int)((num2 * 713858826) ^ 0x31C8E741);
					continue;
				}
				case 3u:
				{
					int num27;
					int num28;
					if (!brain.Navigator.SetDestination(randomPositionAround, BaseNavigator.NavigationSpeed.Fast))
					{
						num27 = 942014174;
						num28 = num27;
					}
					else
					{
						num27 = 1273487429;
						num28 = num27;
					}
					num = num27 ^ (int)(num2 * 1233164620);
					continue;
				}
				case 40u:
					return StateStatus.Finished;
				case 8u:
				{
					nextPositionUpdateTime = Time.time + 0.1f;
					int num7;
					if (!brain.Navigator.Moving)
					{
						num = -1567413655;
						num7 = num;
					}
					else
					{
						num = -640379762;
						num7 = num;
					}
					continue;
				}
				case 26u:
				{
					int num24;
					int num25;
					if (Vector3.Distance(baseEntity.transform.position, customScientistNPC.Transform.position) > brain.Senses.TargetLostRange)
					{
						num24 = -1331876639;
						num25 = num24;
					}
					else
					{
						num24 = -563785244;
						num25 = num24;
					}
					num = num24 ^ ((int)num2 * -158291325);
					continue;
				}
				case 25u:
				{
					int num17;
					int num18;
					if (!(baseEntity == null))
					{
						num17 = 568706060;
						num18 = num17;
					}
					else
					{
						num17 = 1483314948;
						num18 = num17;
					}
					num = num17 ^ (int)(num2 * 1294887010);
					continue;
				}
				case 9u:
				{
					int num6;
					if (Time.time <= nextPositionUpdateTime)
					{
						num = -640379762;
						num6 = num;
					}
					else
					{
						num = -1176017572;
						num6 = num;
					}
					continue;
				}
				case 6u:
				{
					int num32;
					int num33;
					if (targetLostTime > customScientistNPC.Settings.Sensory.TargetLostRangeTime)
					{
						num32 = 1790526092;
						num33 = num32;
					}
					else
					{
						num32 = 960101092;
						num33 = num32;
					}
					num = num32 ^ (int)(num2 * 230245378);
					continue;
				}
				case 34u:
					baseEntity = brain.Events.Memory.Entity.Get(brain.Events.CurrentInputMemorySlot);
					num = ((int)num2 * -1359085664) ^ -1989820311;
					continue;
				case 19u:
					brain.Events.Memory.Entity.Remove(brain.Events.CurrentInputMemorySlot);
					num = -966162855;
					continue;
				case 38u:
					return StateStatus.Error;
				case 21u:
				{
					int num21;
					int num22;
					if (baseEntity is BasePlayer)
					{
						num21 = 229892236;
						num22 = num21;
					}
					else
					{
						num21 = 2114082929;
						num22 = num21;
					}
					num = num21 ^ (int)(num2 * 609504469);
					continue;
				}
				case 15u:
				{
					int num15;
					int num16;
					if (customScientistNPC.CanTargetBasePlayer(baseEntity as BasePlayer))
					{
						num15 = 1452781871;
						num16 = num15;
					}
					else
					{
						num15 = 1133840670;
						num16 = num15;
					}
					num = num15 ^ ((int)num2 * -2037479142);
					continue;
				}
				case 16u:
					randomPositionAround = GetRandomPositionAround(ClosestPositionToTargetInHomeRange(customScientistNPC.HomePosition, customScientistNPC.Settings.ChaseRange, baseEntity), 1f, 10f);
					num = ((int)num2 * -1974040332) ^ -2016946503;
					continue;
				case 1u:
					return StateStatus.Running;
				case 12u:
					targetLostTime = 0f;
					num = -67028154;
					continue;
				case 4u:
				{
					int num8;
					int num9;
					if (!(customScientistNPC.CurrentWeapon is BaseProjectile))
					{
						num8 = 45596716;
						num9 = num8;
					}
					else
					{
						num8 = 1821065769;
						num9 = num8;
					}
					num = num8 ^ ((int)num2 * -1988070503);
					continue;
				}
				case 36u:
					return StateStatus.Finished;
				case 5u:
					Stop();
					num = ((int)num2 * -2031156943) ^ -1954625560;
					continue;
				case 23u:
				{
					int num30;
					int num31;
					if (unreachableLastUpdate)
					{
						num30 = 2093422346;
						num31 = num30;
					}
					else
					{
						num30 = 646061369;
						num31 = num30;
					}
					num = num30 ^ ((int)num2 * -1761796346);
					continue;
				}
				case 13u:
				{
					Vector3 randomPositionAround3 = GetRandomPositionAround(baseEntity.transform.position, 10f, customScientistNPC.EngagementRange() * 0.75f);
					int num29;
					if (!brain.Navigator.SetDestination(randomPositionAround3, BaseNavigator.NavigationSpeed.Fast))
					{
						num = -640379762;
						num29 = num;
					}
					else
					{
						num = -649680353;
						num29 = num;
					}
					continue;
				}
				case 11u:
				{
					brain.Navigator.SetDestination(baseEntity.transform.position, BaseNavigator.NavigationSpeed.Fast, 0.1f);
					int num26;
					if (brain.Navigator.Agent.path.status <= NavMeshPathStatus.PathComplete)
					{
						num = -1595363391;
						num26 = num;
					}
					else
					{
						num = -47484237;
						num26 = num;
					}
					continue;
				}
				case 35u:
				{
					num12 = Vector3.Distance(customScientistNPC.Transform.position, customScientistNPC.HomePosition);
					int num23;
					if (customScientistNPC.Settings.ChaseRange > 0f)
					{
						num = -982571877;
						num23 = num;
					}
					else
					{
						num = -1373201186;
						num23 = num;
					}
					continue;
				}
				case 24u:
					targetLastVisibleTime = Time.time;
					num = -925421279;
					continue;
				case 17u:
				{
					int num19;
					int num20;
					if (Time.time - targetLastVisibleTime > customScientistNPC.Settings.Sensory.TargetLostLOSTime)
					{
						num19 = 158588221;
						num20 = num19;
					}
					else
					{
						num19 = 1867097183;
						num20 = num19;
					}
					num = num19 ^ (int)(num2 * 1645241711);
					continue;
				}
				case 39u:
					return status;
				case 37u:
					return StateStatus.Running;
				case 32u:
					nextPositionUpdateTime = Random.Range(1f, 3f);
					num = ((int)num2 * -954749971) ^ 0x14F44BFB;
					continue;
				case 2u:
					FaceTarget(customScientistNPC, baseEntity);
					num = -1214978050;
					continue;
				case 28u:
				{
					int num13;
					int num14;
					if (num12 > customScientistNPC.Settings.ChaseRange)
					{
						num13 = -795610053;
						num14 = num13;
					}
					else
					{
						num13 = -998434340;
						num14 = num13;
					}
					num = num13 ^ ((int)num2 * -1346753615);
					continue;
				}
				case 18u:
				{
					int num10;
					int num11;
					if (status == StateStatus.Error)
					{
						num10 = 2056801413;
						num11 = num10;
					}
					else
					{
						num10 = 1611437915;
						num11 = num10;
					}
					num = num10 ^ ((int)num2 * -309019747);
					continue;
				}
				case 29u:
					Stop();
					num = (int)(num2 * 2057986417) ^ -542627159;
					continue;
				case 33u:
				{
					int num4;
					int num5;
					if (customScientistNPC.CanTargetEntity(baseEntity))
					{
						num4 = 563945827;
						num5 = num4;
					}
					else
					{
						num4 = 568227498;
						num5 = num4;
					}
					num = num4 ^ ((int)num2 * -1105975594);
					continue;
				}
				case 22u:
				{
					int num3;
					if (!brain.Senses.Memory.IsLOS(baseEntity))
					{
						num = -1940495269;
						num3 = num;
					}
					else
					{
						num = -2115241239;
						num3 = num;
					}
					continue;
				}
				case 7u:
					customScientistNPC = entity as CustomScientistNPC;
					num = -540142845;
					continue;
				default:
					return StateStatus.Running;
				}
				break;
			}
		}
	}

	protected void FaceTarget(CustomScientistNPC customNpc, BaseEntity baseEntity)
	{
		float num = Vector3.Distance(baseEntity.transform.position, customNpc.Transform.position);
		if (!(customNpc.CurrentWeapon is BaseProjectile))
		{
			goto IL_0029;
		}
		goto IL_006b;
		IL_0029:
		int num2 = 239765039;
		goto IL_002e;
		IL_002e:
		while (true)
		{
			uint num3;
			switch ((num3 = (uint)(num2 ^ 0x3430E204)) % 10)
			{
			case 2u:
				break;
			case 8u:
				goto IL_006b;
			case 5u:
				return;
			case 3u:
			{
				int num6;
				int num7;
				if (brain.Senses.Memory.IsLOS(baseEntity))
				{
					num6 = -211475257;
					num7 = num6;
				}
				else
				{
					num6 = -1157724530;
					num7 = num6;
				}
				num2 = num6 ^ (int)(num3 * 1176282360);
				continue;
			}
			case 4u:
				return;
			case 1u:
				brain.Navigator.SetFacingDirectionEntity(baseEntity);
				num2 = (int)(num3 * 366266554) ^ -485374006;
				continue;
			case 0u:
			{
				int num8;
				int num9;
				if (num <= 10f)
				{
					num8 = 139288709;
					num9 = num8;
				}
				else
				{
					num8 = 1842532042;
					num9 = num8;
				}
				num2 = num8 ^ (int)(num3 * 717110309);
				continue;
			}
			case 9u:
				brain.Navigator.SetFacingDirectionEntity(baseEntity);
				num2 = 57633279;
				continue;
			case 7u:
			{
				int num4;
				int num5;
				if (brain.Senses.Memory.IsLOS(baseEntity))
				{
					num4 = -12023510;
					num5 = num4;
				}
				else
				{
					num4 = -1695161623;
					num5 = num4;
				}
				num2 = num4 ^ ((int)num3 * -84314489);
				continue;
			}
			default:
				brain.Navigator.ClearFacingDirectionOverride();
				return;
			}
			break;
		}
		goto IL_0029;
		IL_006b:
		int num10;
		if (customNpc.CurrentWeapon is BaseProjectile)
		{
			num2 = 1805210573;
			num10 = num2;
		}
		else
		{
			num2 = 2047181846;
			num10 = num2;
		}
		goto IL_002e;
	}

	protected Vector3 ClosestPositionToTargetInHomeRange(Vector3 homePosition, float chaseRange, BaseEntity baseEntity)
	{
		float num = Vector3.Distance(baseEntity.transform.position, homePosition);
		if (num < chaseRange)
		{
			while (true)
			{
				uint num2;
				switch ((num2 = 1409775653u) % 3)
				{
				case 0u:
					continue;
				case 2u:
					return baseEntity.transform.position;
				}
				break;
			}
		}
		return Vector3.Lerp(homePosition, baseEntity.transform.position, chaseRange / num);
	}

	protected Vector3 GetRandomPositionAround(Vector3 position, float minDistFrom = 0f, float maxDistFrom = 2f)
	{
		if (maxDistFrom < 0f)
		{
			goto IL_0008;
		}
		goto IL_0077;
		IL_0008:
		int num = 460787022;
		goto IL_000d;
		IL_000d:
		Vector3 result = default(Vector3);
		Vector2 vector = default(Vector2);
		float x = default(float);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x168D39E7)) % 9)
			{
			case 2u:
				break;
			case 7u:
				maxDistFrom = 0f;
				num = (int)((num2 * 81739429) ^ 0x3B204FBA);
				continue;
			case 3u:
				result.y = TerrainMeta.HeightMap.GetHeight(position);
				num = 1678240679;
				continue;
			case 5u:
				goto IL_0077;
			case 1u:
			{
				float z = Mathf.Clamp(Mathf.Max(Mathf.Abs(vector.y), minDistFrom), minDistFrom, maxDistFrom) * Mathf.Sign(vector.y);
				result = position + new Vector3(x, 0f, z);
				num = (int)(num2 * 334621196) ^ -863408728;
				continue;
			}
			case 0u:
				result.y = navmeshHit.position.y;
				num = (int)(num2 * 1919786413) ^ -1392453808;
				continue;
			case 8u:
			{
				int num3;
				int num4;
				if (!NavMesh.SamplePosition(position, out navmeshHit, 50f, brain.Navigator.Agent.areaMask))
				{
					num3 = 192404415;
					num4 = num3;
				}
				else
				{
					num3 = 2063434958;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -576652335);
				continue;
			}
			case 6u:
				num = (int)(num2 * 25632128) ^ -916115417;
				continue;
			default:
				return result;
			}
			break;
		}
		goto IL_0008;
		IL_0077:
		vector = Random.insideUnitCircle * maxDistFrom;
		x = Mathf.Clamp(Mathf.Max(Mathf.Abs(vector.x), minDistFrom), minDistFrom, maxDistFrom) * Mathf.Sign(vector.x);
		num = 578754178;
		goto IL_000d;
	}
}
