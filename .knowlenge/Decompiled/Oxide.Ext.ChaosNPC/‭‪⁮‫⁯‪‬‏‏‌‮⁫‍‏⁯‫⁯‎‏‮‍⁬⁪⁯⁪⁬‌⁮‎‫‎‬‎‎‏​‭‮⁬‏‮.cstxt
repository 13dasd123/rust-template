using UnityEngine;

internal static class \u202d\u202a\u206e\u202b\u206f\u202a\u202c\u200f\u200f\u200c\u202e\u206b\u200d\u200f\u206f\u202b\u206f\u200e\u200f\u202e\u200d\u206c\u206a\u206f\u206a\u206c\u200c\u206e\u200e\u202b\u200e\u202c\u200e\u200e\u200f\u200b\u202d\u202e\u206c\u200f\u202e
{
	internal static bool \u202b\u200b\u200f\u200e\u206b\u200f\u202c\u202c\u202b\u206c\u200b\u200f\u200b\u200c\u200e\u202a\u202e\u202a\u202b\u200b\u200f\u200f\u202d\u200b\u202b\u206e\u200c\u206c\u200c\u202b\u202a\u206f\u200d\u200e\u206e\u200e\u206a\u200e\u202e(this Vector3 P_0)
	{
		int num = Physics.OverlapSphereNonAlloc(P_0, 1f, Vis.colBuffer, 262144, QueryTriggerInteraction.Collide);
		int num2 = 0;
		while (true)
		{
			int num3 = 799278269;
			while (true)
			{
				uint num4;
				switch ((num4 = (uint)(num3 ^ 0x6F87ADF7)) % 7)
				{
				case 0u:
					break;
				case 2u:
					num3 = (int)((num4 * 926416239) ^ 0x55AA50AF);
					continue;
				case 1u:
					num2++;
					num3 = 117496249;
					continue;
				case 6u:
				{
					int num6;
					if (num2 >= num)
					{
						num3 = 1949597479;
						num6 = num3;
					}
					else
					{
						num3 = 1629881608;
						num6 = num3;
					}
					continue;
				}
				case 4u:
					return true;
				case 3u:
				{
					int num5;
					if (!Vis.colBuffer[num2].GetComponent<TriggerSafeZone>())
					{
						num3 = 896301561;
						num5 = num3;
					}
					else
					{
						num3 = 264651739;
						num5 = num3;
					}
					continue;
				}
				default:
					return false;
				}
				break;
			}
		}
	}
}
