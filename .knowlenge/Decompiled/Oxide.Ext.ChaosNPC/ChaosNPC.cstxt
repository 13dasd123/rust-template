using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using Oxide.Core;
using Oxide.Core.Libraries;
using Oxide.Core.Plugins;
using Oxide.Ext.ChaosNPC;
using Oxide.Game.Rust.Libraries;
using Oxide.Plugins;
using Rust.Ai;
using UnityEngine;

public class ChaosNPC : CSPlugin, IChaosNPCPlugin
{
	protected readonly Command command = Interface.Oxide.GetLibrary<Command>();

	protected readonly Plugins plugins = Interface.Oxide.GetLibrary<Plugins>();

	protected static readonly Hash<Plugin, List<CustomScientistNPC>> Lookup = new Hash<Plugin, List<CustomScientistNPC>>();

	public static ChaosNPC Instance;

	private const string \u202d\u200d\u200c\u206f\u200c\u206f\u200f\u200b\u202c\u202c\u202e\u206a\u202e\u200c\u206b\u206e\u200c\u200f\u200d\u200b\u202b\u206d\u200c\u206f\u200f\u200b\u206c\u206c\u206d\u202e\u202e\u206f\u202c\u200f\u200b\u200e\u202e\u206e\u206b\u200e\u202e = "Kits";

	private const string \u206e\u202b\u206f\u202c\u200e\u202a\u206a\u202d\u202a\u202c\u202c\u206d\u202c\u206c\u200c\u202b\u206a\u200c\u206d\u200d\u206e\u200b\u202d\u202a\u206c\u206f\u200e\u200f\u202e\u202e\u202c\u202d\u202b\u200d\u200f\u206e\u206d\u206f\u202e\u200c\u202e = "AlphaLoot";

	[MethodImpl(MethodImplOptions.NoInlining)]
	public ChaosNPC()
	{
		while (true)
		{
			int num = 2056812860;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x4A1508D0)) % 3)
				{
				case 2u:
					break;
				case 1u:
					goto IL_004a;
				default:
					Instance = this;
					command.AddChatCommand(global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(-489506569), this, cmdSpawnNPC);
					command.AddChatCommand(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(276072809), this, cmdWipeNPCs);
					command.AddConsoleCommand(global::<Module>.\u202b\u206a\u206f\u200d\u202e\u202e\u202e\u202c\u202d\u206f\u202a\u206f\u202b\u200c\u206d\u206f\u202b\u200e\u202e\u202c\u206b\u202d\u202c\u200d\u202e\u200c\u202a\u206a\u206b\u202b\u202b\u200f\u200d\u200c\u200d\u206b\u202e\u206f\u200e\u206c\u202e<string>(582334767), this, ccmdWipeNPCs);
					return;
				}
				break;
				IL_004a:
				base.Title = global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(-1662774255);
				base.Author = ChaosNPCExtension.AssemblyAuthors;
				base.Version = ChaosNPCExtension.AssemblyVersion;
				num = 393222023;
			}
		}
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public override void HandleAddedToManager(PluginManager manager)
	{
		base.HandleAddedToManager(manager);
		CustomScientistNPC.\u202b\u206c\u206d\u206e\u202c\u202a\u206b\u206a\u206d\u206d\u206d\u200b\u200e\u206c\u202a\u206f\u202a\u200b\u206c\u200c\u200d\u202e\u202b\u202c\u202e\u200e\u200f\u200d\u200f\u200e\u202c\u206e\u200d\u202b\u200b\u202d\u202e\u206b\u202e\u206c\u202e = plugins.Find(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(1791504080));
		while (true)
		{
			int num = -249273471;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -83200344)) % 3)
				{
				case 0u:
					break;
				default:
					return;
				case 1u:
					goto IL_0045;
				case 2u:
					return;
				}
				break;
				IL_0045:
				CustomScientistNPC.\u206c\u200c\u202b\u202e\u200c\u206c\u206e\u206b\u202d\u202d\u202b\u206c\u200e\u202e\u202a\u200c\u206c\u206e\u202c\u206c\u206a\u202d\u202c\u206c\u206b\u200f\u206b\u200f\u202d\u200d\u202c\u200c\u200e\u202a\u206c\u200f\u206d\u202c\u206a\u200f\u202e = plugins.Find(global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(855097149));
				num = -642037366;
			}
		}
	}

	[HookMethod("OnEntityKill")]
	private void OnEntityKill(CustomScientistNPC customNpc)
	{
		if (customNpc == null)
		{
			return;
		}
		while (true)
		{
			int num = -1321913799;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ -1216627423)) % 5)
				{
				case 4u:
					break;
				default:
					return;
				case 1u:
				{
					int num3;
					int num4;
					if (customNpc.Plugin != null)
					{
						num3 = -990087444;
						num4 = num3;
					}
					else
					{
						num3 = -1534237528;
						num4 = num3;
					}
					num = num3 ^ ((int)num2 * -1319060341);
					continue;
				}
				case 0u:
					return;
				case 3u:
					Lookup[customNpc.Plugin].Remove(customNpc);
					num = -170326741;
					continue;
				case 2u:
					return;
				}
				break;
			}
		}
	}

	[HookMethod("OnEntityTakeDamage")]
	private void OnEntityTakeDamage(CustomScientistNPC customNpc, HitInfo hitInfo)
	{
		if (customNpc == null)
		{
			return;
		}
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		while (true)
		{
			int num = 56101583;
			while (true)
			{
				uint num2;
				switch ((num2 = (uint)(num ^ 0x14967F67)) % 11)
				{
				case 0u:
					break;
				default:
					return;
				case 9u:
					hitInfo.damageTypes.Clear();
					num = (int)(num2 * 939164779) ^ -1065524653;
					continue;
				case 5u:
				{
					int num6;
					int num7;
					if (customNpc.Plugin == customScientistNPC.Plugin)
					{
						num6 = 246625318;
						num7 = num6;
					}
					else
					{
						num6 = 1710797193;
						num7 = num6;
					}
					num = num6 ^ ((int)num2 * -47744946);
					continue;
				}
				case 8u:
				{
					int num10;
					int num11;
					if (customNpc.Settings.PreventFriendlyFire)
					{
						num10 = -223529570;
						num11 = num10;
					}
					else
					{
						num10 = -1191284194;
						num11 = num10;
					}
					num = num10 ^ (int)(num2 * 1638949963);
					continue;
				}
				case 1u:
				{
					customScientistNPC = hitInfo.InitiatorPlayer as CustomScientistNPC;
					int num5;
					if (customScientistNPC != null)
					{
						num = 1193673862;
						num5 = num;
					}
					else
					{
						num = 1479957749;
						num5 = num;
					}
					continue;
				}
				case 6u:
					hitInfo.HitMaterial = 0u;
					hitInfo.PointStart = Vector3.zero;
					num = (int)(num2 * 1838463350) ^ -1801063409;
					continue;
				case 7u:
					return;
				case 2u:
				{
					int num8;
					int num9;
					if (hitInfo == null)
					{
						num8 = 979974299;
						num9 = num8;
					}
					else
					{
						num8 = 2072933666;
						num9 = num8;
					}
					num = num8 ^ ((int)num2 * -1164243912);
					continue;
				}
				case 4u:
				{
					int num3;
					int num4;
					if (!(hitInfo.InitiatorPlayer == null))
					{
						num3 = -1828136414;
						num4 = num3;
					}
					else
					{
						num3 = -1116464517;
						num4 = num3;
					}
					num = num3 ^ (int)(num2 * 369848224);
					continue;
				}
				case 10u:
					hitInfo.HitEntity = null;
					num = ((int)num2 * -1837222554) ^ -619334750;
					continue;
				case 3u:
					return;
				}
				break;
			}
		}
	}

	[HookMethod("OnNpcTarget")]
	private object OnNpcTarget(CustomScientistNPC customNpc, BasePlayer target)
	{
		if (customNpc == null)
		{
			goto IL_0009;
		}
		goto IL_0069;
		IL_0009:
		int num = 1087202336;
		goto IL_000e;
		IL_000e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x58FBB83B)) % 6)
			{
			case 3u:
				break;
			case 1u:
				return null;
			case 5u:
			{
				int num3;
				int num4;
				if (!target.IsFlying)
				{
					num3 = 635000141;
					num4 = num3;
				}
				else
				{
					num3 = 1212154301;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -1248564118);
				continue;
			}
			case 0u:
				goto IL_0069;
			case 4u:
				return true;
			default:
				return null;
			}
			break;
		}
		goto IL_0009;
		IL_0069:
		int num5;
		if (target.IsSleeping())
		{
			num = 1239245739;
			num5 = num;
		}
		else
		{
			num = 1941604868;
			num5 = num;
		}
		goto IL_000e;
	}

	[HookMethod("OnTurretTarget")]
	private object OnTurretTarget(NPCAutoTurret autoTurret, CustomScientistNPC customNpc)
	{
		if ((bool)customNpc)
		{
			while (true)
			{
				int num = -496009878;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ -116587332)) % 6)
					{
					case 0u:
						break;
					case 1u:
						goto IL_0039;
					case 3u:
						return true;
					case 4u:
					{
						int num3;
						int num4;
						if ((bool)autoTurret)
						{
							num3 = -1869673499;
							num4 = num3;
						}
						else
						{
							num3 = -2143105100;
							num4 = num3;
						}
						num = num3 ^ (int)(num2 * 1353357442);
						continue;
					}
					case 2u:
						goto end_IL_000b;
					default:
						return null;
					}
					break;
					IL_0039:
					int num5;
					if (!customNpc.Settings.TargetedByNPCTurrets)
					{
						num = -217968143;
						num5 = num;
					}
					else
					{
						num = -2103905909;
						num5 = num;
					}
				}
				continue;
				end_IL_000b:
				break;
			}
		}
		return null;
	}

	[HookMethod("CanLootPlayer")]
	private object CanLootPlayer(CustomScientistNPC customNpc, BasePlayer player)
	{
		if (customNpc != null)
		{
			while (true)
			{
				int num = 1880999571;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ 0x722DA31A)) % 4)
					{
					case 3u:
						break;
					case 1u:
					{
						int num3;
						int num4;
						if (customNpc.IsWounded())
						{
							num3 = 1379749804;
							num4 = num3;
						}
						else
						{
							num3 = 2092311538;
							num4 = num3;
						}
						num = num3 ^ ((int)num2 * -1011790206);
						continue;
					}
					case 2u:
						goto end_IL_0009;
					default:
						return false;
					}
					break;
				}
				continue;
				end_IL_0009:
				break;
			}
		}
		return null;
	}

	[HookMethod("OnPlayerAssist")]
	private object OnPlayerAssist(CustomScientistNPC customNpc, BasePlayer player)
	{
		return false;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[HookMethod("OnPluginLoaded")]
	private void \u200f\u206c\u206f\u202b\u206e\u200f\u200c\u206d\u202e\u200f\u206c\u200b\u206d\u200c\u206b\u202c\u200c\u202e\u202b\u206e\u200b\u206b\u206c\u200e\u200b\u200f\u206b\u202b\u202e\u200e\u200f\u200d\u202b\u202a\u206f\u200e\u200e\u200c\u206d\u200e\u202e(Plugin P_0)
	{
		if (P_0.Name.Equals(global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(519735317)))
		{
			goto IL_0019;
		}
		goto IL_0058;
		IL_0019:
		int num = 9056263;
		goto IL_001e;
		IL_001e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x32DF4FCB)) % 5)
			{
			case 2u:
				break;
			default:
				return;
			case 4u:
				CustomScientistNPC.\u206c\u200c\u202b\u202e\u200c\u206c\u206e\u206b\u202d\u202d\u202b\u206c\u200e\u202e\u202a\u200c\u206c\u206e\u202c\u206c\u206a\u202d\u202c\u206c\u206b\u200f\u206b\u200f\u202d\u200d\u202c\u200c\u200e\u202a\u206c\u200f\u206d\u202c\u206a\u200f\u202e = P_0;
				num = (int)(num2 * 38378990) ^ -982911862;
				continue;
			case 3u:
				goto IL_0058;
			case 1u:
				CustomScientistNPC.\u202b\u206c\u206d\u206e\u202c\u202a\u206b\u206a\u206d\u206d\u206d\u200b\u200e\u206c\u202a\u206f\u202a\u200b\u206c\u200c\u200d\u202e\u202b\u202c\u202e\u200e\u200f\u200d\u200f\u200e\u202c\u206e\u200d\u202b\u200b\u202d\u202e\u206b\u202e\u206c\u202e = P_0;
				num = ((int)num2 * -1022210945) ^ -2112542513;
				continue;
			case 0u:
				return;
			}
			break;
		}
		goto IL_0019;
		IL_0058:
		int num3;
		if (P_0.Name.Equals(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(-1391648806)))
		{
			num = 2141801167;
			num3 = num;
		}
		else
		{
			num = 530180402;
			num3 = num;
		}
		goto IL_001e;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	[HookMethod("OnPluginUnloaded")]
	private void OnPluginUnloaded(Plugin plugin)
	{
		if (plugin.Name.Equals(global::<Module>.\u202b\u206a\u206f\u200d\u202e\u202e\u202e\u202c\u202d\u206f\u202a\u206f\u202b\u200c\u206d\u206f\u202b\u200e\u202e\u202c\u206b\u202d\u202c\u200d\u202e\u200c\u202a\u206a\u206b\u202b\u202b\u200f\u200d\u200c\u200d\u206b\u202e\u206f\u200e\u206c\u202e<string>(-122371366)))
		{
			goto IL_001c;
		}
		goto IL_00ef;
		IL_001c:
		int num = 1704582868;
		goto IL_0021;
		IL_0021:
		CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
		int num3 = default(int);
		List<CustomScientistNPC> value = default(List<CustomScientistNPC>);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x699F1DCA)) % 15)
			{
			case 0u:
				break;
			default:
				return;
			case 13u:
			{
				int num6;
				int num7;
				if (customScientistNPC.IsDestroyed)
				{
					num6 = 1383456693;
					num7 = num6;
				}
				else
				{
					num6 = 91804069;
					num7 = num6;
				}
				num = num6 ^ (int)(num2 * 1279628870);
				continue;
			}
			case 12u:
				num3 = value.Count - 1;
				num = (int)(num2 * 1663706437) ^ -1068628552;
				continue;
			case 7u:
				goto IL_00ae;
			case 9u:
				Lookup.Remove(plugin);
				num = ((int)num2 * -1175169871) ^ -587547444;
				continue;
			case 1u:
				goto IL_00ef;
			case 3u:
				CustomScientistNPC.\u202b\u206c\u206d\u206e\u202c\u202a\u206b\u206a\u206d\u206d\u206d\u200b\u200e\u206c\u202a\u206f\u202a\u200b\u206c\u200c\u200d\u202e\u202b\u202c\u202e\u200e\u200f\u200d\u200f\u200e\u202c\u206e\u200d\u202b\u200b\u202d\u202e\u206b\u202e\u206c\u202e = null;
				num = ((int)num2 * -2138180531) ^ -460370716;
				continue;
			case 6u:
				goto IL_0134;
			case 10u:
			{
				int num4;
				int num5;
				if (customScientistNPC != null)
				{
					num4 = 1699266964;
					num5 = num4;
				}
				else
				{
					num4 = 675912789;
					num5 = num4;
				}
				num = num4 ^ ((int)num2 * -416848452);
				continue;
			}
			case 11u:
				CustomScientistNPC.\u206c\u200c\u202b\u202e\u200c\u206c\u206e\u206b\u202d\u202d\u202b\u206c\u200e\u202e\u202a\u200c\u206c\u206e\u202c\u206c\u206a\u202d\u202c\u206c\u206b\u200f\u206b\u200f\u202d\u200d\u202c\u200c\u200e\u202a\u206c\u200f\u206d\u202c\u206a\u200f\u202e = null;
				num = (int)((num2 * 1928810746) ^ 0x18BFCCF1);
				continue;
			case 8u:
				customScientistNPC = value[num3];
				num = 210236871;
				continue;
			case 4u:
				num = ((int)num2 * -894976433) ^ 0x6C4FD4C2;
				continue;
			case 2u:
				num3--;
				num = 496465552;
				continue;
			case 5u:
				customScientistNPC.Kill();
				num = ((int)num2 * -559198606) ^ 0x1817338F;
				continue;
			case 14u:
				return;
			}
			break;
			IL_0134:
			int num8;
			if (num3 < 0)
			{
				num = 1342732500;
				num8 = num;
			}
			else
			{
				num = 515755668;
				num8 = num;
			}
			continue;
			IL_00ae:
			int num9;
			if (Lookup.TryGetValue(plugin, out value))
			{
				num = 730844038;
				num9 = num;
			}
			else
			{
				num = 1367899506;
				num9 = num;
			}
		}
		goto IL_001c;
		IL_00ef:
		int num10;
		if (plugin.Name.Equals(global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(221033007)))
		{
			num = 336279697;
			num10 = num;
		}
		else
		{
			num = 1738155567;
			num10 = num;
		}
		goto IL_0021;
	}

	private void \u200d\u202c\u206a\u206d\u206c\u202e\u206b\u206b\u206f\u200f\u202a\u202a\u202d\u206d\u206d\u200f\u200b\u202b\u202b\u206e\u202c\u202e\u206e\u202a\u202e\u200f\u200b\u206d\u206b\u202c\u200b\u202d\u202e\u206b\u200c\u202c\u200e\u206f\u206b\u202a\u202e()
	{
		IEnumerator<KeyValuePair<Plugin, List<CustomScientistNPC>>> enumerator = Lookup.GetEnumerator();
		try
		{
			int num4 = default(int);
			KeyValuePair<Plugin, List<CustomScientistNPC>> current = default(KeyValuePair<Plugin, List<CustomScientistNPC>>);
			CustomScientistNPC customScientistNPC = default(CustomScientistNPC);
			while (true)
			{
				IL_0058:
				int num;
				int num2;
				if (enumerator.MoveNext())
				{
					num = -838218771;
					num2 = num;
				}
				else
				{
					num = -387282119;
					num2 = num;
				}
				while (true)
				{
					uint num3;
					switch ((num3 = (uint)(num ^ -981599458)) % 12)
					{
					case 8u:
						num = -838218771;
						continue;
					default:
						goto end_IL_0012;
					case 5u:
						break;
					case 2u:
						num4 = current.Value.Count - 1;
						num = ((int)num3 * -111248357) ^ 0x5F416393;
						continue;
					case 0u:
					{
						int num6;
						int num7;
						if (!(customScientistNPC != null))
						{
							num6 = -1722758757;
							num7 = num6;
						}
						else
						{
							num6 = -331142268;
							num7 = num6;
						}
						num = num6 ^ ((int)num3 * -853567180);
						continue;
					}
					case 10u:
						customScientistNPC = current.Value[num4];
						num = -141293186;
						continue;
					case 6u:
					{
						int num8;
						int num9;
						if (!customScientistNPC.IsDestroyed)
						{
							num8 = 385201201;
							num9 = num8;
						}
						else
						{
							num8 = 367633969;
							num9 = num8;
						}
						num = num8 ^ (int)(num3 * 851308713);
						continue;
					}
					case 7u:
						current = enumerator.Current;
						num = -1045679716;
						continue;
					case 4u:
					{
						int num5;
						if (num4 >= 0)
						{
							num = -1847882480;
							num5 = num;
						}
						else
						{
							num = -748888093;
							num5 = num;
						}
						continue;
					}
					case 9u:
						num4--;
						num = -403911570;
						continue;
					case 3u:
						num = ((int)num3 * -996522016) ^ 0x341FCCE;
						continue;
					case 1u:
						customScientistNPC.Kill();
						num = ((int)num3 * -2124771720) ^ -341958077;
						continue;
					case 11u:
						goto end_IL_0012;
					}
					goto IL_0058;
					continue;
					end_IL_0012:
					break;
				}
				break;
			}
		}
		finally
		{
			if (enumerator != null)
			{
				while (true)
				{
					IL_015c:
					int num10 = -283563730;
					while (true)
					{
						uint num3;
						switch ((num3 = (uint)(num10 ^ -981599458)) % 3)
						{
						case 2u:
							break;
						default:
							goto end_IL_0161;
						case 1u:
							goto IL_017f;
						case 0u:
							goto end_IL_0161;
						}
						goto IL_015c;
						IL_017f:
						enumerator.Dispose();
						num10 = (int)((num3 * 1667893816) ^ 0x541EA6EC);
						continue;
						end_IL_0161:
						break;
					}
					break;
				}
			}
		}
		Lookup.Clear();
	}

	public bool InitializeStates(BaseAIBrain customNPCBrain)
	{
		return false;
	}

	bool IChaosNPCPlugin.InitializeStates(BaseAIBrain customNPCBrain)
	{
		//ILSpy generated this explicit interface implementation from .override directive in InitializeStates
		return this.InitializeStates(customNPCBrain);
	}

	public bool WantsToPopulateLoot(CustomScientistNPC customNpc, NPCPlayerCorpse npcplayerCorpse)
	{
		return false;
	}

	bool IChaosNPCPlugin.WantsToPopulateLoot(CustomScientistNPC customNpc, NPCPlayerCorpse npcplayerCorpse)
	{
		//ILSpy generated this explicit interface implementation from .override directive in WantsToPopulateLoot
		return this.WantsToPopulateLoot(customNpc, npcplayerCorpse);
	}

	public byte[] GetCustomDesign()
	{
		return null;
	}

	byte[] IChaosNPCPlugin.GetCustomDesign()
	{
		//ILSpy generated this explicit interface implementation from .override directive in GetCustomDesign
		return this.GetCustomDesign();
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	private void cmdSpawnNPC(BasePlayer player, string command, string[] args)
	{
		if (!player.IsAdmin)
		{
			goto IL_000b;
		}
		goto IL_01c5;
		IL_000b:
		int num = 1510992011;
		goto IL_0010;
		IL_0010:
		Vector3 position = default(Vector3);
		NPCSettings settings = default(NPCSettings);
		NPCSettings nPCSettings = default(NPCSettings);
		int num3 = default(int);
		int result = default(int);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x3AC49FCE)) % 18)
			{
			case 7u:
				break;
			default:
				return;
			case 9u:
				position = player.transform.position;
				num = 1833511184;
				continue;
			case 6u:
				settings = nPCSettings;
				num = ((int)num2 * -1819794157) ^ -1423677639;
				continue;
			case 1u:
				return;
			case 17u:
				nPCSettings.WoundedRecoveryChance = 75f;
				num = (int)((num2 * 4644496) ^ 0x10F6E451);
				continue;
			case 8u:
				nPCSettings = new NPCSettings();
				num = ((int)num2 * -2002797820) ^ 0x7B8DF473;
				continue;
			case 10u:
				num3 = 0;
				num = 155470651;
				continue;
			case 16u:
				int.TryParse(args[0], out result);
				num = (int)((num2 * 388507334) ^ 0x3E740AF8);
				continue;
			case 12u:
				goto IL_010e;
			case 13u:
				nPCSettings.DisplayNames = new string[3]
				{
					global::<Module>.\u202b\u206a\u206f\u200d\u202e\u202e\u202e\u202c\u202d\u206f\u202a\u206f\u202b\u200c\u206d\u206f\u202b\u200e\u202e\u202c\u206b\u202d\u202c\u200d\u202e\u200c\u202a\u206a\u206b\u202b\u202b\u200f\u200d\u200c\u200d\u206b\u202e\u206f\u200e\u206c\u202e<string>(1608961652),
					global::<Module>.\u202a\u206d\u202d\u206d\u202a\u202b\u206d\u200f\u200c\u200b\u206b\u200f\u200b\u202a\u200e\u200b\u200b\u202a\u206f\u206b\u206f\u202e\u202b\u200d\u202e\u206d\u206c\u200e\u200f\u206b\u200b\u206d\u200e\u206e\u202c\u206c\u200d\u200b\u202d\u206d\u202e<string>(1918614782),
					global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(1827679513)
				};
				nPCSettings.Types = new NPCType[2]
				{
					NPCType.Scientist,
					NPCType.HeavyScientist
				};
				num = 1093141586;
				continue;
			case 5u:
				SpawnNPC<CustomScientistNPC>(this, position, settings);
				num3++;
				num = ((int)num2 * -2135789503) ^ -1078341813;
				continue;
			case 0u:
				nPCSettings.Sensory = new NPCSettings.SensoryStats
				{
					TargetLostRange = 90f
				};
				num = (int)(num2 * 789209613) ^ -1200352306;
				continue;
			case 11u:
				goto IL_01c5;
			case 15u:
				num = (int)((num2 * 1337678469) ^ 0x497F7185);
				continue;
			case 14u:
				nPCSettings.WoundedDurationMin = 30f;
				nPCSettings.WoundedDurationMax = 60f;
				num = (int)(num2 * 1534007860) ^ -467621991;
				continue;
			case 3u:
				nPCSettings.KillUnderWater = false;
				nPCSettings.DropInventoryOnDeath = true;
				nPCSettings.RoamRange = 30f;
				nPCSettings.ChaseRange = 90f;
				num = ((int)num2 * -50116995) ^ -1413451987;
				continue;
			case 4u:
				nPCSettings.WoundedChance = 20f;
				num = ((int)num2 * -966409257) ^ 0x5C968BB8;
				continue;
			case 2u:
				return;
			}
			break;
			IL_010e:
			int num4;
			if (num3 < result)
			{
				num = 1492531359;
				num4 = num;
			}
			else
			{
				num = 2003380360;
				num4 = num;
			}
		}
		goto IL_000b;
		IL_01c5:
		result = 3;
		int num5;
		if (args.Length == 0)
		{
			num = 895215688;
			num5 = num;
		}
		else
		{
			num = 1765759750;
			num5 = num;
		}
		goto IL_0010;
	}

	private void cmdWipeNPCs(BasePlayer player, string command, string[] args)
	{
		if (!player.IsAdmin)
		{
			while (true)
			{
				uint num;
				switch ((num = 186453004u) % 3)
				{
				case 2u:
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
		\u200d\u202c\u206a\u206d\u206c\u202e\u206b\u206b\u206f\u200f\u202a\u202a\u202d\u206d\u206d\u200f\u200b\u202b\u202b\u206e\u202c\u202e\u206e\u202a\u202e\u200f\u200b\u206d\u206b\u202c\u200b\u202d\u202e\u206b\u200c\u202c\u200e\u206f\u206b\u202a\u202e();
	}

	private bool ccmdWipeNPCs(ConsoleSystem.Arg arg)
	{
		if (arg.Connection != null)
		{
			while (true)
			{
				int num = -1353017965;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)(num ^ -287999447)) % 4)
					{
					case 0u:
						break;
					case 2u:
					{
						int num3;
						int num4;
						if (arg.Connection.authLevel < 2)
						{
							num3 = -409075830;
							num4 = num3;
						}
						else
						{
							num3 = -904797376;
							num4 = num3;
						}
						num = num3 ^ ((int)num2 * -1151087366);
						continue;
					}
					case 3u:
						return false;
					default:
						goto end_IL_0008;
					}
					break;
				}
				continue;
				end_IL_0008:
				break;
			}
		}
		\u200d\u202c\u206a\u206d\u206c\u202e\u206b\u206b\u206f\u200f\u202a\u202a\u202d\u206d\u206d\u200f\u200b\u202b\u202b\u206e\u202c\u202e\u206e\u202a\u202e\u200f\u200b\u206d\u206b\u202c\u200b\u202d\u202e\u206b\u200c\u202c\u200e\u206f\u206b\u202a\u202e();
		return true;
	}

	private static void \u206c\u206c\u206f\u200e\u200c\u202e\u202a\u206b\u200c\u206b\u202d\u206c\u206a\u200d\u202d\u200d\u202c\u202c\u200b\u202c\u202b\u202a\u202b\u206f\u206a\u206e\u200f\u200d\u206b\u200f\u206d\u202e\u206e\u200f\u206e\u202a\u200e\u202e\u200b\u206f\u202e(Plugin P_0, CustomScientistNPC P_1)
	{
		if (!Lookup.TryGetValue(P_0, out var value))
		{
			goto IL_000f;
		}
		goto IL_0058;
		IL_000f:
		int num = 428945517;
		goto IL_0014;
		IL_0014:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x343A8117)) % 4)
			{
			case 0u:
				break;
			default:
				return;
			case 2u:
			{
				List<CustomScientistNPC> list2 = (Lookup[P_0] = new List<CustomScientistNPC>());
				value = list2;
				num = (int)((num2 * 251883619) ^ 0x5DB85008);
				continue;
			}
			case 1u:
				goto IL_0058;
			case 3u:
				return;
			}
			break;
		}
		goto IL_000f;
		IL_0058:
		value.Add(P_1);
		num = 1457407136;
		goto IL_0014;
	}

	public static CustomScientistNPC SpawnNPC(Plugin plugin, Vector3 position, NPCSettings settings)
	{
		return SpawnNPC<CustomScientistNPC>(plugin, position, settings);
	}

	public static T1 SpawnNPC<T1>(Plugin plugin, Vector3 position, NPCSettings settings) where T1 : CustomScientistNPC
	{
		return SpawnNPC<T1, CustomScientistBrain, CustomScientistNavigator>(plugin, position, settings);
	}

	public static T1 SpawnNPC<T1, T2>(Plugin plugin, Vector3 position, NPCSettings settings) where T1 : CustomScientistNPC where T2 : ScientistBrain
	{
		return SpawnNPC<T1, T2, CustomScientistNavigator>(plugin, position, settings);
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	public static T1 SpawnNPC<T1, T2, T3>(Plugin plugin, Vector3 position, NPCSettings settings) where T1 : CustomScientistNPC where T2 : ScientistBrain where T3 : NPCPlayerNavigator
	{
		if (AiManager.nav_disable)
		{
			goto IL_000a;
		}
		goto IL_010c;
		IL_000a:
		int num = -588927721;
		goto IL_000f;
		IL_000f:
		T1 result = default(T1);
		T1 val = default(T1);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -611930558)) % 10)
			{
			case 7u:
				break;
			case 2u:
				Debug.LogError(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(-424652571) + plugin.Name + global::<Module>.\u206f\u206a\u206d\u202c\u200c\u206d\u206b\u200f\u202a\u202c\u206c\u202e\u206d\u206e\u200c\u200c\u206d\u202a\u206e\u200b\u206e\u206d\u200b\u200b\u206b\u200c\u206c\u200f\u206a\u202a\u206e\u200c\u206b\u202d\u206e\u200b\u202b\u206d\u202c\u202e<string>(-125791920));
				result = null;
				num = -1944650022;
				continue;
			case 0u:
			{
				int num3;
				int num4;
				if (val == null)
				{
					num3 = -1229945902;
					num4 = num3;
				}
				else
				{
					num3 = -155033441;
					num4 = num3;
				}
				num = num3 ^ (int)(num2 * 660990545);
				continue;
			}
			case 1u:
				val = \u202b\u202a\u206c\u202d\u202c\u206e\u206a\u200e\u206b\u206c\u202e\u202e\u200c\u200f\u206c\u206a\u202e\u202d\u206a\u206c\u206e\u202c\u202b\u206e\u206c\u206d\u200d\u206a\u202e\u206a\u202b\u206d\u202e\u206a\u202e\u202b\u200d\u200f\u202d\u200c\u202e<T1, T2, T3>(position, settings, plugin);
				num = -961752104;
				continue;
			case 6u:
				return null;
			case 8u:
				return result;
			case 5u:
				return null;
			case 4u:
				goto IL_010c;
			case 9u:
				Debug.LogWarning(global::<Module>.\u206b\u200d\u206d\u206b\u206d\u200d\u206d\u200e\u206b\u206d\u206f\u206d\u200b\u206e\u200f\u200f\u206e\u206c\u206a\u206e\u206c\u200c\u200c\u202c\u206d\u200c\u206d\u202e\u200e\u200c\u206a\u206c\u202c\u200c\u200d\u206d\u206d\u206e\u202b\u202e\u202e<string>(-767857600));
				num = -1106105849;
				continue;
			default:
				\u206c\u206c\u206f\u200e\u200c\u202e\u202a\u206b\u200c\u206b\u202d\u206c\u206a\u200d\u202d\u200d\u202c\u202c\u200b\u202c\u202b\u202a\u202b\u206f\u206a\u206e\u200f\u200d\u206b\u200f\u206d\u202e\u206e\u200f\u206e\u202a\u200e\u202e\u200b\u206f\u202e(plugin, val);
				return val;
			}
			break;
		}
		goto IL_000a;
		IL_010c:
		int num5;
		if (!(plugin is IChaosNPCPlugin))
		{
			num = -1379327282;
			num5 = num;
		}
		else
		{
			num = -799852907;
			num5 = num;
		}
		goto IL_000f;
	}

	[MethodImpl(MethodImplOptions.NoInlining)]
	private static \u0001 \u202b\u202a\u206c\u202d\u202c\u206e\u206a\u200e\u206b\u206c\u202e\u202e\u200c\u200f\u206c\u206a\u202e\u202d\u206a\u206c\u206e\u202c\u202b\u206e\u206c\u206d\u200d\u206a\u202e\u206a\u202b\u206d\u202e\u206a\u202e\u202b\u200d\u200f\u202d\u200c\u202e<\u0001, \u0002, \u0003>(Vector3 P_0, NPCSettings P_1, Plugin P_2) where \u0001 : CustomScientistNPC where \u0002 : ScientistBrain where \u0003 : NPCPlayerNavigator
	{
		if (P_1.EnableNavMesh)
		{
			goto IL_000b;
		}
		goto IL_03a0;
		IL_000b:
		int num = -1474637209;
		goto IL_0010;
		IL_0010:
		object obj = default(object);
		BaseAIBrain component = default(BaseAIBrain);
		HumanNPC humanNPC = default(HumanNPC);
		\u0001 val = default(\u0001);
		\u0001 result = default(\u0001);
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ -795201446)) % 18)
			{
			case 8u:
				break;
			case 9u:
			{
				int num15;
				int num16;
				if (P_0.\u202b\u200b\u200f\u200e\u206b\u200f\u202c\u202c\u202b\u206c\u200b\u200f\u200b\u200c\u200e\u202a\u202e\u202a\u202b\u200b\u200f\u200f\u202d\u200b\u202b\u206e\u200c\u206c\u200c\u202b\u202a\u206f\u200d\u200e\u206e\u200e\u206a\u200e\u202e())
				{
					num15 = -2062421507;
					num16 = num15;
				}
				else
				{
					num15 = -285782628;
					num16 = num15;
				}
				num = num15 ^ (int)(num2 * 1526069129);
				continue;
			}
			case 3u:
			{
				int num9;
				int num10;
				if ((bool)obj)
				{
					num9 = 558177521;
					num10 = num9;
				}
				else
				{
					num9 = 614050672;
					num10 = num9;
				}
				num = num9 ^ (int)(num2 * 1123568167);
				continue;
			}
			case 10u:
				UnityEngine.Object.DestroyImmediate(component, allowDestroyingAssets: true);
				UnityEngine.Object.DestroyImmediate(humanNPC, allowDestroyingAssets: true);
				num = (int)((num2 * 1294856388) ^ 0x675329D8);
				continue;
			case 15u:
			{
				int num7;
				int num8;
				if (!P_1.KillInSafeZone)
				{
					num7 = 135133599;
					num8 = num7;
				}
				else
				{
					num7 = 300704449;
					num8 = num7;
				}
				num = num7 ^ (int)(num2 * 530053874);
				continue;
			}
			case 1u:
			{
				int num13;
				int num14;
				if (!NavmeshSpawnPoint.Find(P_0, 60f, out P_0))
				{
					num13 = -1649482322;
					num14 = num13;
				}
				else
				{
					num13 = -1724018661;
					num14 = num13;
				}
				num = num13 ^ ((int)num2 * -1753197821);
				continue;
			}
			case 17u:
			{
				int num5;
				int num6;
				if (!(P_0.y < -0.25f))
				{
					num5 = -1251318879;
					num6 = num5;
				}
				else
				{
					num5 = -719207784;
					num6 = num5;
				}
				num = num5 ^ (int)(num2 * 1706779616);
				continue;
			}
			case 13u:
				return val;
			case 2u:
			{
				int num11;
				int num12;
				if (!P_1.EnableNavMesh)
				{
					num11 = 611808867;
					num12 = num11;
				}
				else
				{
					num11 = 148176457;
					num12 = num11;
				}
				num = num11 ^ ((int)num2 * -265208537);
				continue;
			}
			case 6u:
				return result;
			case 5u:
			{
				NPCPlayerNavigator component2 = humanNPC.GetComponent<NPCPlayerNavigator>();
				val = humanNPC.gameObject.AddComponent<\u0001>();
				\u0002 val2 = humanNPC.gameObject.AddComponent<\u0002>();
				\u0003 dst = humanNPC.gameObject.AddComponent<\u0003>();
				Helpers.CopySerializableFields(humanNPC, val);
				Helpers.CopySerializableFields(component2, dst);
				if (humanNPC is ScientistNPC)
				{
					val.DeathEffects = (humanNPC as ScientistNPC).DeathEffects;
					val.RadioChatterEffects = (humanNPC as ScientistNPC).RadioChatterEffects;
					val.IdleChatterRepeatRange = (humanNPC as ScientistNPC).IdleChatterRepeatRange;
				}
				val.enableSaving = false;
				val.Plugin = P_2;
				val.Settings = P_1;
				val2.UseQueuedMovementUpdates = component.UseQueuedMovementUpdates;
				val2.AllowedToSleep = false;
				val2.DefaultDesignSO = component.DefaultDesignSO;
				val2.Designs = new List<AIDesignSO>(component.Designs);
				val2.InstanceSpecificDesign = component.InstanceSpecificDesign;
				val2.CheckLOS = component.CheckLOS;
				val2.UseAIDesign = true;
				val2.Pet = false;
				component._baseEntity = humanNPC;
				UnityEngine.Object.DestroyImmediate(component2, allowDestroyingAssets: true);
				num = -959920358;
				continue;
			}
			case 14u:
			{
				int num3;
				int num4;
				if (!(obj is bool))
				{
					num3 = 2043649936;
					num4 = num3;
				}
				else
				{
					num3 = 947578541;
					num4 = num3;
				}
				num = num3 ^ ((int)num2 * -267842613);
				continue;
			}
			case 16u:
				result = null;
				num = -137951866;
				continue;
			case 7u:
				humanNPC = GameManager.server.CreateEntity(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(1646685905), P_0, Quaternion.identity, startActive: false) as ScientistNPC;
				component = humanNPC.GetComponent<ScientistBrain>();
				num = -1832294071;
				continue;
			case 0u:
				obj = P_2.CallHook(global::<Module>.\u202d\u202e\u202a\u202d\u202a\u206a\u206d\u202e\u200e\u202c\u200e\u206c\u206c\u202c\u200b\u202a\u200f\u202d\u206a\u200d\u206f\u200f\u206d\u202d\u206b\u200b\u200d\u206b\u202b\u206f\u202b\u202e\u202b\u202b\u206c\u200f\u200f\u206b\u202b\u200f\u202e<string>(-881523603), val);
				num = -1536559680;
				continue;
			case 4u:
				return null;
			case 11u:
				goto IL_03a0;
			default:
				val.gameObject.AwakeFromInstantiate();
				val.Spawn();
				return val;
			}
			break;
		}
		goto IL_000b;
		IL_03a0:
		int num17;
		if (!ChaosNPCExtension.IsValid(P_2))
		{
			num = -1028098504;
			num17 = num;
		}
		else
		{
			num = -1813970119;
			num17 = num;
		}
		goto IL_0010;
	}

	public static void SetRoamHomePosition(CustomScientistNPC customNpc, Vector3 position)
	{
		if (customNpc == null)
		{
			goto IL_0009;
		}
		goto IL_0054;
		IL_0009:
		int num = 1719820241;
		goto IL_000e;
		IL_000e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x4FE37701)) % 6)
			{
			case 0u:
				break;
			default:
				return;
			case 3u:
				customNpc.Brain.SwitchToState(AIState.Idle, 0);
				num = (int)((num2 * 1910842006) ^ 0x5848B8C2);
				continue;
			case 4u:
				goto IL_0054;
			case 1u:
			{
				int num3;
				int num4;
				if (customNpc.CurrentState == AIState.Roam)
				{
					num3 = -1662899465;
					num4 = num3;
				}
				else
				{
					num3 = -458018559;
					num4 = num3;
				}
				num = num3 ^ (int)(num2 * 307107893);
				continue;
			}
			case 2u:
				return;
			case 5u:
				return;
			}
			break;
		}
		goto IL_0009;
		IL_0054:
		customNpc.HomePosition = position;
		num = 669877860;
		goto IL_000e;
	}

	public static void SetDestination(CustomScientistNPC customNpc, Vector3 destination, Action onDestinationReached = null)
	{
		if (customNpc == null)
		{
			goto IL_0009;
		}
		goto IL_0043;
		IL_0009:
		int num = 1712715495;
		goto IL_000e;
		IL_000e:
		while (true)
		{
			uint num2;
			switch ((num2 = (uint)(num ^ 0x734B2BDE)) % 5)
			{
			case 0u:
				break;
			default:
				return;
			case 3u:
				return;
			case 2u:
				goto IL_0043;
			case 1u:
				customNpc.\u200f\u202c\u200b\u202c\u202e\u202e\u202c\u206f\u206e\u202c\u202c\u202d\u206a\u200f\u206f\u202e\u202b\u200e\u202b\u202d\u202b\u206d\u200c\u200e\u202e\u200b\u200e\u206b\u202b\u200c\u202d\u200c\u202e\u206b\u202e\u202c\u202b\u206b\u202a\u202c\u202e(destination, onDestinationReached);
				num = (int)(num2 * 1527617938) ^ -1410111290;
				continue;
			case 4u:
				return;
			}
			break;
		}
		goto IL_0009;
		IL_0043:
		int num3;
		if (NavmeshSpawnPoint.Find(destination, 20f, out destination))
		{
			num = 1201047299;
			num3 = num;
		}
		else
		{
			num = 1392952268;
			num3 = num;
		}
		goto IL_000e;
	}
}
