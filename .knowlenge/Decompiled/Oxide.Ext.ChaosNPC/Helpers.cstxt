using System.Reflection;

public static class Helpers
{
	public static void CopySerializableFields<T>(T src, T dst)
	{
		FieldInfo[] fields = typeof(T).GetFields(BindingFlags.Instance | BindingFlags.Public);
		int num = 0;
		while (true)
		{
			int num2 = 1891440300;
			while (true)
			{
				uint num3;
				switch ((num3 = (uint)(num2 ^ 0x1623E6C1)) % 5)
				{
				case 2u:
					break;
				default:
					return;
				case 0u:
				{
					int num4;
					if (num < fields.Length)
					{
						num2 = 1789587765;
						num4 = num2;
					}
					else
					{
						num2 = 508878633;
						num4 = num2;
					}
					continue;
				}
				case 3u:
				{
					FieldInfo obj = fields[num];
					obj.SetValue(value: obj.GetValue(src), obj: dst);
					num++;
					num2 = 2049495487;
					continue;
				}
				case 4u:
					num2 = (int)(num3 * 1326078549) ^ -2136541298;
					continue;
				case 1u:
					return;
				}
				break;
			}
		}
	}
}
