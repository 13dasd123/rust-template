using UnityEngine;

public class WorldSpaceGrid
{
	public enum RoundingMode
	{
		Up,
		Down
	}

	public static int CalculateCellCount(float gridSize, float cellSize, RoundingMode rounding = RoundingMode.Up)
	{
		float num = 1f / cellSize;
		float num2 = Mathf.Max(gridSize, 1000f) * num;
		if (rounding == RoundingMode.Up)
		{
			return Mathf.CeilToInt(num2);
		}
		return Mathf.FloorToInt(num2);
	}

	public static Vector3 ClosestGridCell(Vector3 worldPos, float gridSize, float cellSize, RoundingMode rounding = RoundingMode.Up)
	{
		//IL_0020: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0067: Unknown result type (might be due to invalid IL or missing references)
		float num = 1f / cellSize;
		int num2 = CalculateCellCount(gridSize, cellSize, rounding);
		float num3 = (float)num2 * 0.5f - 0.5f;
		int v = Mathf.RoundToInt(worldPos.x * num + num3);
		int v2 = Mathf.RoundToInt(worldPos.z * num + num3);
		int num4 = Mathx.Clamp(v, 0, num2 - 1);
		v2 = Mathx.Clamp(v2, 0, num2 - 1);
		float num5 = ((float)num4 - num3) * cellSize;
		float num6 = ((float)v2 - num3) * cellSize;
		return new Vector3(num5, 0f, num6);
	}
}
