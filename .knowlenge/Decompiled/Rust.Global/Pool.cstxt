using System.Collections.Generic;
using UnityEngine;

public class Pool
{
	public Stack<Object> stack = new Stack<Object>();

	public int allocated;

	public int available;

	public string name;

	public Pool(string name)
	{
		this.name = name;
	}

	public T Pop<T>() where T : Object, new()
	{
		if (stack.Count > 0)
		{
			available--;
			Object obj = stack.Pop();
			return (T)(object)((obj is T) ? obj : null);
		}
		allocated++;
		T val = new T();
		((Object)val).name = name;
		return val;
	}

	public void Push<T>(ref T instance) where T : Object, new()
	{
		available++;
		stack.Push((Object)(object)instance);
		instance = default(T);
	}

	public void Clear()
	{
		foreach (Object item in stack)
		{
			Object.Destroy(item);
		}
		available -= stack.Count;
		allocated -= stack.Count;
		stack.Clear();
	}
}
