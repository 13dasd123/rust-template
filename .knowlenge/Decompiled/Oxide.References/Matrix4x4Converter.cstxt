using System;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using UnityEngine;

public class Matrix4x4Converter : JsonConverter
{
	public override bool CanRead => true;

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0010: Unknown result type (might be due to invalid IL or missing references)
		//IL_0023: Unknown result type (might be due to invalid IL or missing references)
		//IL_003a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0051: Unknown result type (might be due to invalid IL or missing references)
		//IL_0068: Unknown result type (might be due to invalid IL or missing references)
		//IL_007f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0096: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ad: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c4: Unknown result type (might be due to invalid IL or missing references)
		//IL_00db: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_0109: Unknown result type (might be due to invalid IL or missing references)
		//IL_0120: Unknown result type (might be due to invalid IL or missing references)
		//IL_0137: Unknown result type (might be due to invalid IL or missing references)
		//IL_014e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0165: Unknown result type (might be due to invalid IL or missing references)
		//IL_017c: Unknown result type (might be due to invalid IL or missing references)
		if (value == null)
		{
			writer.WriteNull();
			return;
		}
		Matrix4x4 val = (Matrix4x4)value;
		writer.WriteStartObject();
		writer.WritePropertyName("m00");
		writer.WriteValue(val.m00);
		writer.WritePropertyName("m01");
		writer.WriteValue(val.m01);
		writer.WritePropertyName("m02");
		writer.WriteValue(val.m02);
		writer.WritePropertyName("m03");
		writer.WriteValue(val.m03);
		writer.WritePropertyName("m10");
		writer.WriteValue(val.m10);
		writer.WritePropertyName("m11");
		writer.WriteValue(val.m11);
		writer.WritePropertyName("m12");
		writer.WriteValue(val.m12);
		writer.WritePropertyName("m13");
		writer.WriteValue(val.m13);
		writer.WritePropertyName("m20");
		writer.WriteValue(val.m20);
		writer.WritePropertyName("m21");
		writer.WriteValue(val.m21);
		writer.WritePropertyName("m22");
		writer.WriteValue(val.m22);
		writer.WritePropertyName("m23");
		writer.WriteValue(val.m23);
		writer.WritePropertyName("m30");
		writer.WriteValue(val.m30);
		writer.WritePropertyName("m31");
		writer.WriteValue(val.m31);
		writer.WritePropertyName("m32");
		writer.WriteValue(val.m32);
		writer.WritePropertyName("m33");
		writer.WriteValue(val.m33);
		writer.WriteEnd();
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		//IL_0022: Unknown result type (might be due to invalid IL or missing references)
		//IL_0148: Unknown result type (might be due to invalid IL or missing references)
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0012: Unknown result type (might be due to invalid IL or missing references)
		if (reader.TokenType == JsonToken.Null)
		{
			return (object)default(Matrix4x4);
		}
		JObject jObject = JObject.Load(reader);
		Matrix4x4 val = default(Matrix4x4);
		val.m00 = (float)jObject["m00"];
		val.m01 = (float)jObject["m01"];
		val.m02 = (float)jObject["m02"];
		val.m03 = (float)jObject["m03"];
		val.m20 = (float)jObject["m20"];
		val.m21 = (float)jObject["m21"];
		val.m22 = (float)jObject["m22"];
		val.m23 = (float)jObject["m23"];
		val.m30 = (float)jObject["m30"];
		val.m31 = (float)jObject["m31"];
		val.m32 = (float)jObject["m32"];
		val.m33 = (float)jObject["m33"];
		return val;
	}

	public override bool CanConvert(Type objectType)
	{
		return (object)objectType == typeof(Matrix4x4);
	}
}
