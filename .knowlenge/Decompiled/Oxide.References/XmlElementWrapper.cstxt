using System.Xml;
using Newtonsoft.Json.Converters;

internal class XmlElementWrapper : XmlNodeWrapper, IXmlElement, IXmlNode
{
	private readonly XmlElement _element;

	public bool IsEmpty => _element.IsEmpty;

	public XmlElementWrapper(XmlElement element)
		: base((XmlNode)(object)element)
	{
		_element = element;
	}

	public void SetAttributeNode(IXmlNode attribute)
	{
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		//IL_001d: Expected O, but got Unknown
		XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper)attribute;
		_element.SetAttributeNode((XmlAttribute)xmlNodeWrapper.WrappedNode);
	}

	public string GetPrefixOfNamespace(string namespaceUri)
	{
		return ((XmlNode)_element).GetPrefixOfNamespace(namespaceUri);
	}
}
