using System;
using System.Collections;
using System.Runtime.Remoting.Channels;
using System.Runtime.Remoting.Messaging;
using Mono.Remoting.Channels.Unix;

public class UnixClientChannel : IChannelSender, IChannel
{
	private int priority = 1;

	private string name = "unix";

	private IClientChannelSinkProvider _sinkProvider;

	public string ChannelName => name;

	public int ChannelPriority => priority;

	public UnixClientChannel()
	{
		_sinkProvider = (IClientChannelSinkProvider)(object)new UnixBinaryClientFormatterSinkProvider();
		_sinkProvider.Next = (IClientChannelSinkProvider)(object)new UnixClientTransportSinkProvider();
	}

	public UnixClientChannel(IDictionary properties, IClientChannelSinkProvider sinkProvider)
	{
		object obj = properties["name"];
		if (obj != null)
		{
			name = obj as string;
		}
		obj = properties["priority"];
		if (obj != null)
		{
			priority = Convert.ToInt32(obj);
		}
		if (sinkProvider != null)
		{
			_sinkProvider = sinkProvider;
			IClientChannelSinkProvider val = sinkProvider;
			while (val.Next != null)
			{
				val = val.Next;
			}
			val.Next = (IClientChannelSinkProvider)(object)new UnixClientTransportSinkProvider();
		}
		else
		{
			_sinkProvider = (IClientChannelSinkProvider)(object)new UnixBinaryClientFormatterSinkProvider();
			_sinkProvider.Next = (IClientChannelSinkProvider)(object)new UnixClientTransportSinkProvider();
		}
	}

	public UnixClientChannel(string name, IClientChannelSinkProvider sinkProvider)
	{
		this.name = name;
		_sinkProvider = sinkProvider;
		IClientChannelSinkProvider val = sinkProvider;
		while (val.Next != null)
		{
			val = val.Next;
		}
		val.Next = (IClientChannelSinkProvider)(object)new UnixClientTransportSinkProvider();
	}

	public IMessageSink CreateMessageSink(string url, object remoteChannelData, out string objectURI)
	{
		//IL_0021: Unknown result type (might be due to invalid IL or missing references)
		//IL_0027: Expected O, but got Unknown
		//IL_0079: Unknown result type (might be due to invalid IL or missing references)
		//IL_007f: Expected O, but got Unknown
		if (url != null && Parse(url, out objectURI) != null)
		{
			return (IMessageSink)_sinkProvider.CreateSink((IChannelSender)(object)this, url, remoteChannelData);
		}
		if (remoteChannelData != null)
		{
			IChannelDataStore val = (IChannelDataStore)((remoteChannelData is IChannelDataStore) ? remoteChannelData : null);
			if (val == null || val.ChannelUris.Length <= 0)
			{
				objectURI = null;
				return null;
			}
			url = val.ChannelUris[0];
		}
		if (Parse(url, out objectURI) == null)
		{
			return null;
		}
		return (IMessageSink)_sinkProvider.CreateSink((IChannelSender)(object)this, url, remoteChannelData);
	}

	public string Parse(string url, out string objectURI)
	{
		return UnixChannel.ParseUnixURL(url, out objectURI);
	}
}
