using System.Collections.Generic;
using System.Xml;
using Newtonsoft.Json.Converters;

internal class XmlNodeWrapper : IXmlNode
{
	private readonly XmlNode _node;

	private List<IXmlNode> _childNodes;

	private List<IXmlNode> _attributes;

	public object WrappedNode => _node;

	public XmlNodeType NodeType => _node.NodeType;

	public virtual string LocalName => _node.LocalName;

	public List<IXmlNode> ChildNodes
	{
		get
		{
			//IL_003c: Unknown result type (might be due to invalid IL or missing references)
			//IL_0042: Expected O, but got Unknown
			if (_childNodes == null)
			{
				_childNodes = new List<IXmlNode>(_node.ChildNodes.Count);
				foreach (XmlNode childNode in _node.ChildNodes)
				{
					XmlNode node = childNode;
					_childNodes.Add(WrapNode(node));
				}
			}
			return _childNodes;
		}
	}

	public List<IXmlNode> Attributes
	{
		get
		{
			//IL_004b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0051: Expected O, but got Unknown
			if (_node.Attributes == null)
			{
				return null;
			}
			if (_attributes == null)
			{
				_attributes = new List<IXmlNode>(((XmlNamedNodeMap)_node.Attributes).Count);
				foreach (XmlAttribute item in (XmlNamedNodeMap)_node.Attributes)
				{
					XmlAttribute node = item;
					_attributes.Add(WrapNode((XmlNode)(object)node));
				}
			}
			return _attributes;
		}
	}

	public IXmlNode ParentNode
	{
		get
		{
			//IL_0020: Unknown result type (might be due to invalid IL or missing references)
			XmlNode val = (XmlNode)((_node is XmlAttribute) ? ((object)((XmlAttribute)_node).OwnerElement) : ((object)_node.ParentNode));
			if (val == null)
			{
				return null;
			}
			return WrapNode(val);
		}
	}

	public string Value
	{
		get
		{
			return _node.Value;
		}
		set
		{
			_node.Value = value;
		}
	}

	public string NamespaceUri => _node.NamespaceURI;

	public XmlNodeWrapper(XmlNode node)
	{
		_node = node;
	}

	internal static IXmlNode WrapNode(XmlNode node)
	{
		//IL_0001: Unknown result type (might be due to invalid IL or missing references)
		//IL_0006: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_0009: Invalid comparison between Unknown and I4
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_0022: Expected O, but got Unknown
		//IL_000b: Unknown result type (might be due to invalid IL or missing references)
		//IL_000e: Invalid comparison between Unknown and I4
		//IL_0030: Unknown result type (might be due to invalid IL or missing references)
		//IL_003a: Expected O, but got Unknown
		//IL_0010: Unknown result type (might be due to invalid IL or missing references)
		//IL_0013: Invalid comparison between Unknown and I4
		//IL_0024: Unknown result type (might be due to invalid IL or missing references)
		//IL_002e: Expected O, but got Unknown
		XmlNodeType nodeType = node.NodeType;
		if ((int)nodeType != 1)
		{
			if ((int)nodeType != 10)
			{
				if ((int)nodeType == 17)
				{
					return new XmlDeclarationWrapper((XmlDeclaration)node);
				}
				return new XmlNodeWrapper(node);
			}
			return new XmlDocumentTypeWrapper((XmlDocumentType)node);
		}
		return new XmlElementWrapper((XmlElement)node);
	}

	public IXmlNode AppendChild(IXmlNode newChild)
	{
		XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper)newChild;
		_node.AppendChild(xmlNodeWrapper._node);
		_childNodes = null;
		_attributes = null;
		return newChild;
	}
}
