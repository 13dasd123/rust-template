using System;
using System.Collections;
using System.IO;
using System.Net.Sockets;
using System.Runtime.Remoting.Channels;
using System.Runtime.Remoting.Messaging;
using Mono.Remoting.Channels.Unix;

internal class UnixServerTransportSink : IServerChannelSink, IChannelSinkBase
{
	private IServerChannelSink next_sink;

	public IServerChannelSink NextChannelSink => next_sink;

	public IDictionary Properties
	{
		get
		{
			if (next_sink != null)
			{
				return ((IChannelSinkBase)next_sink).Properties;
			}
			return null;
		}
	}

	public UnixServerTransportSink(IServerChannelSink next)
	{
		next_sink = next;
	}

	public void AsyncProcessResponse(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers, Stream responseStream)
	{
		ClientConnection clientConnection = (ClientConnection)state;
		NetworkStream networkStream = new NetworkStream(clientConnection.Client);
		UnixMessageIO.SendMessageStream(networkStream, responseStream, headers, clientConnection.Buffer);
		networkStream.Flush();
		networkStream.Close();
	}

	public Stream GetResponseStream(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers)
	{
		return null;
	}

	public ServerProcessing ProcessMessage(IServerChannelSinkStack sinkStack, IMessage requestMsg, ITransportHeaders requestHeaders, Stream requestStream, out IMessage responseMsg, out ITransportHeaders responseHeaders, out Stream responseStream)
	{
		throw new NotSupportedException();
	}

	internal void InternalProcessMessage(ClientConnection connection, Stream stream)
	{
		//IL_000f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0015: Expected O, but got Unknown
		//IL_002d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0032: Unknown result type (might be due to invalid IL or missing references)
		//IL_0034: Unknown result type (might be due to invalid IL or missing references)
		//IL_0036: Unknown result type (might be due to invalid IL or missing references)
		//IL_0038: Unknown result type (might be due to invalid IL or missing references)
		//IL_004b: Expected I4, but got Unknown
		ITransportHeaders headers;
		Stream stream2 = UnixMessageIO.ReceiveMessageStream(stream, out headers, connection.Buffer);
		ServerChannelSinkStack val = new ServerChannelSinkStack();
		val.Push((IServerChannelSink)(object)this, (object)connection);
		IMessage val2 = default(IMessage);
		ITransportHeaders requestHeaders = default(ITransportHeaders);
		Stream data = default(Stream);
		ServerProcessing val3 = next_sink.ProcessMessage((IServerChannelSinkStack)(object)val, (IMessage)null, headers, stream2, ref val2, ref requestHeaders, ref data);
		ServerProcessing val4 = val3;
		switch ((int)val4)
		{
		case 0:
			UnixMessageIO.SendMessageStream(stream, data, requestHeaders, connection.Buffer);
			stream.Flush();
			break;
		case 1:
		case 2:
			break;
		}
	}
}
