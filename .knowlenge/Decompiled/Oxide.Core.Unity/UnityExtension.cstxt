using System;
using System.Reflection;
using Oxide.Core;
using Oxide.Core.Extensions;
using Oxide.Core.Unity;
using Oxide.Core.Unity.Plugins;
using UnityEngine;

public class UnityExtension : Extension
{
	internal static readonly Version AssemblyVersion = Assembly.GetExecutingAssembly().GetName().Version;

	public override string Name => "Unity";

	public override VersionNumber Version => new VersionNumber(AssemblyVersion.Major, AssemblyVersion.Minor, AssemblyVersion.Build);

	public override string Author => "Oxide Team";

	public UnityExtension(ExtensionManager manager)
		: base(manager)
	{
	}

	public override void Load()
	{
		base.Manager.RegisterPluginLoader(new UnityPluginLoader());
		Interface.Oxide.RegisterEngineClock(() => Time.realtimeSinceStartup);
		UnityScript.Create();
	}

	public override void LoadPluginWatchers(string pluginDirectory)
	{
	}

	public override void OnModLoad()
	{
	}
}
