using Apex.Serialization;
using UnityEngine;
using UnityEngine.AI;

public class JunkpileNavigateToPositionWhereWeLastSawPrimaryEnemyPlayer : BaseNavigateTo
{
	[ApexSerialization]
	private bool DisableIsSearchingOnComplete = true;

	public static Vector3 GetDestination(ScientistJunkpileContext context)
	{
		BaseNpcMemory.EnemyPlayerInfo primaryKnownEnemyPlayer = context.Memory.PrimaryKnownEnemyPlayer;
		if (primaryKnownEnemyPlayer.PlayerInfo.Player != null && NavMesh.FindClosestEdge(primaryKnownEnemyPlayer.OurLastPositionWhenLastSeen, out var hit, context.Domain.NavAgent.areaMask))
		{
			return context.Domain.ToAllowedMovementDestination(hit.position);
		}
		return context.Body.transform.position;
	}

	protected override Vector3 _GetDestination(ScientistJunkpileContext context)
	{
		return GetDestination(context);
	}

	protected override void OnPreStart(ScientistJunkpileContext context)
	{
		context.Domain.NavAgent.stoppingDistance = 0.5f;
	}

	protected override void OnStart(ScientistJunkpileContext context)
	{
		context.SetFact(Facts.IsSearching, value: true);
	}

	protected override void OnPathFailed(ScientistJunkpileContext context)
	{
		context.SetFact(Facts.IsSearching, value: false);
		context.Domain.NavAgent.stoppingDistance = 1f;
	}

	protected override void OnPathComplete(ScientistJunkpileContext context)
	{
		if (DisableIsSearchingOnComplete)
		{
			context.SetFact(Facts.IsSearching, value: false);
		}
		context.Domain.NavAgent.stoppingDistance = 1f;
	}
}
