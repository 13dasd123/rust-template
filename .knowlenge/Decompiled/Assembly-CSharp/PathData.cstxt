using System;
using UnityEngine;

[Serializable]
private class PathData
{
	public string name;

	public bool spline;

	public bool start;

	public bool end;

	public float width;

	public float offset;

	public float padding;

	public float fade;

	public float scaling;

	public int splat;

	public int topology;

	public VectorData[] nodes;

	public void FromPathList(PathList src)
	{
		name = src.Name;
		spline = src.Spline;
		start = src.Start;
		end = src.End;
		width = src.Width;
		offset = src.Offset;
		padding = src.Padding;
		fade = src.Fade;
		scaling = src.Scaling;
		splat = src.Splat;
		topology = src.Topology;
		nodes = Array.ConvertAll(src.Path.Points, (Converter<Vector3, VectorData>)((Vector3 item) => item));
	}

	public PathList ToPathList()
	{
		PathList pathList = new PathList(name, Array.ConvertAll(nodes, (Converter<VectorData, Vector3>)((VectorData item) => item)));
		pathList.Spline = spline;
		pathList.Start = start;
		pathList.End = end;
		pathList.Width = width;
		pathList.Offset = offset;
		pathList.Padding = padding;
		pathList.Fade = fade;
		pathList.Scaling = scaling;
		pathList.Splat = splat;
		pathList.Topology = topology;
		pathList.Path.RecalculateTangents();
		return pathList;
	}
}
