using FIMSpace.FSpine;
using UnityEngine;
using UnityEngine.EventSystems;

[AddComponentMenu("FImpossible Creations/Spine Animator Utilities/FSpine Bone Connector")]
public class FSpineBoneConnector : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
{
	[Space(5f)]
	public FSpineAnimator TargetSpineAnimator;

	public Transform TargetBone;

	[Space(3f)]
	[FPD_Width(130)]
	public bool PositionAnimated;

	[FPD_Width(130)]
	public bool RotationAnimated = true;

	[Space(3f)]
	public Vector3 RotationCorrection;

	public bool Mirror;

	private Vector3 animatorStatePosition;

	private Quaternion animatorStateRotation;

	private Quaternion targetBoneStateRotation;

	public string EditorIconPath => "Spine Animator/Spine Bone Connector Icon";

	public void OnDrop(PointerEventData data)
	{
	}

	private void Start()
	{
		//IL_007d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0088: Unknown result type (might be due to invalid IL or missing references)
		//IL_008d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0092: Unknown result type (might be due to invalid IL or missing references)
		//IL_0097: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b0: Unknown result type (might be due to invalid IL or missing references)
		if (!Object.op_Implicit((Object)(object)TargetBone))
		{
			Debug.LogError((object)("No target bone in " + ((Object)this).name + " for Spine Bone Connector Component!"));
			Object.Destroy((Object)(object)this);
		}
		if (Object.op_Implicit((Object)(object)TargetSpineAnimator))
		{
			TargetSpineAnimator.AddConnector(this);
		}
		else
		{
			Debug.LogError((object)("No target SpineAnimator in " + ((Object)this).name + " for Spine Bone Connector Component!"));
			Object.Destroy((Object)(object)this);
		}
		if (!PositionAnimated)
		{
			animatorStatePosition = TargetBone.InverseTransformVector(((Component)this).transform.position - TargetBone.position);
		}
		if (!RotationAnimated)
		{
			animatorStateRotation = ((Component)this).transform.localRotation;
		}
		targetBoneStateRotation = TargetBone.localRotation;
	}

	internal void RememberAnimatorState()
	{
		//IL_0015: Unknown result type (might be due to invalid IL or missing references)
		//IL_0020: Unknown result type (might be due to invalid IL or missing references)
		//IL_0025: Unknown result type (might be due to invalid IL or missing references)
		//IL_002a: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0043: Unknown result type (might be due to invalid IL or missing references)
		//IL_0048: Unknown result type (might be due to invalid IL or missing references)
		if (PositionAnimated)
		{
			animatorStatePosition = TargetBone.InverseTransformVector(((Component)this).transform.position - TargetBone.position);
		}
		if (RotationAnimated)
		{
			animatorStateRotation = ((Component)this).transform.localRotation;
		}
	}

	internal void RefreshAnimatorState()
	{
		//IL_0015: Unknown result type (might be due to invalid IL or missing references)
		//IL_0021: Unknown result type (might be due to invalid IL or missing references)
		//IL_0026: Unknown result type (might be due to invalid IL or missing references)
		//IL_002b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0041: Unknown result type (might be due to invalid IL or missing references)
		//IL_0047: Unknown result type (might be due to invalid IL or missing references)
		//IL_0062: Unknown result type (might be due to invalid IL or missing references)
		//IL_0055: Unknown result type (might be due to invalid IL or missing references)
		//IL_005a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0067: Unknown result type (might be due to invalid IL or missing references)
		//IL_006c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0072: Unknown result type (might be due to invalid IL or missing references)
		//IL_0077: Unknown result type (might be due to invalid IL or missing references)
		//IL_007c: Unknown result type (might be due to invalid IL or missing references)
		if (((Behaviour)this).enabled)
		{
			((Component)this).transform.position = TargetBone.position + TargetBone.TransformVector(animatorStatePosition);
			((Component)this).transform.rotation = TargetBone.rotation * (animatorStateRotation * (Mirror ? targetBoneStateRotation : Quaternion.Inverse(targetBoneStateRotation))) * Quaternion.Euler(RotationCorrection);
		}
	}
}
