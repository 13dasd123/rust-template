using System.Collections.Generic;

public class GenerateRoadTopology : ProceduralComponent
{
	public override void Process(uint seed)
	{
		List<PathList> roads = TerrainMeta.Path.Roads;
		TerrainHeightMap heightmap = TerrainMeta.HeightMap;
		TerrainTopologyMap topomap = TerrainMeta.TopologyMap;
		foreach (PathList item in roads)
		{
			item.Path.RecalculateTangents();
		}
		heightmap.Push();
		foreach (PathList item2 in roads)
		{
			item2.AdjustTerrainHeight();
			item2.AdjustTerrainTexture();
			item2.AdjustTerrainTopology();
		}
		heightmap.Pop();
		int[] map = topomap.dst;
		int res = topomap.res;
		ImageProcessing.Dilate2D(map, res, res, 6144, 6, delegate(int x, int y)
		{
			if ((map[x * res + y] & 0x31) != 0)
			{
				map[x * res + y] |= 4096;
			}
			float normX = topomap.Coordinate(x);
			float normZ = topomap.Coordinate(y);
			if (heightmap.GetSlope(normX, normZ) > 40f)
			{
				map[x * res + y] |= 2;
			}
		});
	}
}
