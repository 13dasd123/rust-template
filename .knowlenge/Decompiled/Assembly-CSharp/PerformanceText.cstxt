using System.Diagnostics;
using System.Text;
using ConVar;
using UnityEngine;
using UnityEngine.UI;

public class PerformanceText : MonoBehaviour
{
	public Text text;

	private StringBuilder sb = new StringBuilder();

	private Stopwatch fpsTimer = Stopwatch.StartNew();

	protected void Update()
	{
		if (Global.perf <= 0)
		{
			if (text.enabled)
			{
				text.enabled = false;
			}
		}
		else if (!(fpsTimer.Elapsed.TotalSeconds < 0.20000000298023224))
		{
			if (!text.enabled)
			{
				text.enabled = true;
			}
			fpsTimer.Reset();
			fpsTimer.Start();
			StringBuilderEx.Clear(sb);
			if (Global.perf > 0)
			{
				sb.Append(Performance.current.frameRate).Append(" FPS");
			}
			if (Global.perf > 1)
			{
				sb.Append(" / ").Append(Performance.current.frameTime.ToString("0.0")).Append("ms");
			}
			if (Global.perf > 2)
			{
				sb.AppendLine().Append(Performance.current.memoryAllocations).Append(" MB");
			}
			if (Global.perf > 3)
			{
				sb.Append(" / ").Append(Performance.current.memoryCollections).Append(" GC");
			}
			if (Global.perf > 5)
			{
				sb.AppendLine().Append(Performance.current.loadBalancerTasks).Append(" TASKS");
			}
			if (Global.perf > 6)
			{
				sb.AppendLine().Append(Performance.current.invokeHandlerTasks).Append(" INVOKES");
			}
			text.text = sb.ToString();
		}
	}
}
