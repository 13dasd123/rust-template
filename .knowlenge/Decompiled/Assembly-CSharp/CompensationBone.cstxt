using System;
using UnityEngine;

[Serializable]
public class CompensationBone
{
	public Transform Transform;

	private Vector3 compensatedPosition;

	private Quaternion compensatedRotation;

	private Quaternion lastFinalLocalRotation;

	private Quaternion lastKeyframeLocalRotation;

	private Vector3 lastFinalLocalPosition;

	private Vector3 lastKeyframeLocalPosition;

	public CompensationBone(Transform t)
	{
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_001c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0023: Unknown result type (might be due to invalid IL or missing references)
		//IL_0028: Unknown result type (might be due to invalid IL or missing references)
		Transform = t;
		if (Object.op_Implicit((Object)(object)t))
		{
			lastKeyframeLocalPosition = t.localPosition;
			lastKeyframeLocalRotation = t.localRotation;
		}
	}

	public void RefreshCompensationFrame()
	{
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_001d: Unknown result type (might be due to invalid IL or missing references)
		compensatedPosition = Transform.position;
		compensatedRotation = Transform.rotation;
	}

	public void CheckForZeroKeyframes()
	{
		//IL_0001: Unknown result type (might be due to invalid IL or missing references)
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0043: Unknown result type (might be due to invalid IL or missing references)
		//IL_0048: Unknown result type (might be due to invalid IL or missing references)
		//IL_001f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0030: Unknown result type (might be due to invalid IL or missing references)
		//IL_0035: Unknown result type (might be due to invalid IL or missing references)
		//IL_004e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0059: Unknown result type (might be due to invalid IL or missing references)
		//IL_008f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0094: Unknown result type (might be due to invalid IL or missing references)
		//IL_006c: Unknown result type (might be due to invalid IL or missing references)
		//IL_007d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0082: Unknown result type (might be due to invalid IL or missing references)
		if (lastFinalLocalRotation.QIsSame(Transform.localRotation))
		{
			Transform.localRotation = lastKeyframeLocalRotation;
			compensatedRotation = Transform.rotation;
		}
		else
		{
			lastKeyframeLocalRotation = Transform.localRotation;
		}
		if (lastFinalLocalPosition.VIsSame(Transform.localPosition))
		{
			Transform.localPosition = lastKeyframeLocalPosition;
			compensatedPosition = Transform.position;
		}
		else
		{
			lastKeyframeLocalPosition = Transform.localPosition;
		}
	}

	public void SetRotationCompensation(float weight)
	{
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0035: Unknown result type (might be due to invalid IL or missing references)
		//IL_003b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_004c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0051: Unknown result type (might be due to invalid IL or missing references)
		if (weight > 0f)
		{
			if (weight >= 1f)
			{
				Transform.rotation = compensatedRotation;
			}
			else
			{
				Transform.rotation = Quaternion.LerpUnclamped(Transform.rotation, compensatedRotation, weight);
			}
			lastFinalLocalRotation = Transform.localRotation;
		}
	}

	public void SetPositionCompensation(float weight)
	{
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0035: Unknown result type (might be due to invalid IL or missing references)
		//IL_003b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_004c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0051: Unknown result type (might be due to invalid IL or missing references)
		if (weight > 0f)
		{
			if (weight >= 1f)
			{
				Transform.position = compensatedPosition;
			}
			else
			{
				Transform.position = Vector3.LerpUnclamped(Transform.position, compensatedPosition, weight);
			}
			lastFinalLocalPosition = Transform.localPosition;
		}
	}
}
