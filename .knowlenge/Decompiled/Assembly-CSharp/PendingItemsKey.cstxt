using System;

private struct PendingItemsKey : IEquatable<PendingItemsKey>
{
	public string Item;

	public bool Consumed;

	public string Entity;

	public string Category;

	public NetworkableId EntityId;

	public bool Equals(PendingItemsKey other)
	{
		//IL_0027: Unknown result type (might be due to invalid IL or missing references)
		//IL_002d: Unknown result type (might be due to invalid IL or missing references)
		if (Item == other.Item && Entity == other.Entity && EntityId == other.EntityId && Consumed == other.Consumed)
		{
			return Category == other.Category;
		}
		return false;
	}

	public override int GetHashCode()
	{
		return ((((17 * 23 + Item.GetHashCode()) * 31 + Consumed.GetHashCode()) * 37 + Entity.GetHashCode()) * 47 + Category.GetHashCode()) * 53 + ((object)(NetworkableId)(ref EntityId)/*cast due to .constrained prefix*/).GetHashCode();
	}
}
