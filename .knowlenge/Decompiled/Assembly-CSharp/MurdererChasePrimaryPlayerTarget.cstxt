using Apex.Ai.HTN;
using ConVar;
using UnityEngine;

public class MurdererChasePrimaryPlayerTarget : MurdererBaseNavigateTo
{
	public static Vector3 GetPreferredFightingPosition(MurdererContext context)
	{
		return MurdererNavigateToPreferredFightingRange.GetPreferredFightingPosition(context);
	}

	protected override Vector3 _GetDestination(MurdererContext context)
	{
		return GetPreferredFightingPosition(context);
	}

	public override OperatorStateType Tick(MurdererContext context, PrimitiveTaskSelector task)
	{
		if (context.Memory == null || context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player == null || context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.transform == null || context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.IsDestroyed || context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.IsWounded() || context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.IsDead())
		{
			return OperatorStateType.Aborted;
		}
		Vector3 vector = _GetDestination(context);
		if (context.Memory != null && context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player != null)
		{
			if (context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.estimatedSpeed2D < 0.01f)
			{
				context.Domain.NavAgent.stoppingDistance = 1f;
			}
			else
			{
				context.Domain.NavAgent.stoppingDistance = Halloween.scarecrow_chase_stopping_distance;
			}
			if ((context.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.transform.position - vector).SqrMagnitudeXZ() > 0.5f)
			{
				context.Domain.SetDestination(vector);
			}
		}
		return base.Tick(context, task);
	}

	protected override void OnPreStart(MurdererContext context)
	{
		context.Domain.NavAgent.stoppingDistance = Halloween.scarecrow_chase_stopping_distance;
	}

	protected override void OnPathFailed(MurdererContext context)
	{
		context.Domain.NavAgent.stoppingDistance = 1f;
	}

	protected override void OnPathComplete(MurdererContext context)
	{
		context.Domain.NavAgent.stoppingDistance = 1f;
	}
}
