using System.Collections.Generic;
using UnityEngine;

public class AntiHackManager : SingletonComponent<AntiHackManager>
{
	private List<AntiHackVolume> volumes = new List<AntiHackVolume>();

	public static void Add(AntiHackVolume volume)
	{
		if (!(SingletonComponent<AntiHackManager>.Instance == null))
		{
			SingletonComponent<AntiHackManager>.Instance.volumes.Add(volume);
		}
	}

	public static bool ShouldIgnore(OBB obb)
	{
		if (SingletonComponent<AntiHackManager>.Instance == null)
		{
			return false;
		}
		for (int i = 0; i < SingletonComponent<AntiHackManager>.Instance.volumes.Count; i++)
		{
			AntiHackVolume antiHackVolume = SingletonComponent<AntiHackManager>.Instance.volumes[i];
			if (antiHackVolume.Intersects(obb))
			{
				return true;
			}
		}
		return false;
	}

	public static bool ShouldIgnore(Vector3 pos)
	{
		if (SingletonComponent<AntiHackManager>.Instance == null)
		{
			return false;
		}
		for (int i = 0; i < SingletonComponent<AntiHackManager>.Instance.volumes.Count; i++)
		{
			AntiHackVolume antiHackVolume = SingletonComponent<AntiHackManager>.Instance.volumes[i];
			if (antiHackVolume.Contains(pos))
			{
				return true;
			}
		}
		return false;
	}
}
