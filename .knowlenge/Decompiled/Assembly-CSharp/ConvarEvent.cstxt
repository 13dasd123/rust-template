using System;
using Rust;
using UnityEngine;

[Serializable]
public class ConvarEvent
{
	public string convar;

	public string on;

	public MonoBehaviour component;

	internal Command cmd;

	public void OnEnable()
	{
		cmd = Client.Find(convar);
		if (cmd == null)
		{
			cmd = Server.Find(convar);
		}
		if (cmd != null)
		{
			cmd.OnValueChanged += cmd_OnValueChanged;
			cmd_OnValueChanged(cmd);
		}
	}

	private void cmd_OnValueChanged(Command obj)
	{
		if (!((Object)(object)component == (Object)null))
		{
			bool flag = obj.String == on;
			if (((Behaviour)component).enabled != flag)
			{
				((Behaviour)component).enabled = flag;
			}
		}
	}

	public void OnDisable()
	{
		if (!Application.isQuitting && cmd != null)
		{
			cmd.OnValueChanged -= cmd_OnValueChanged;
		}
	}
}
