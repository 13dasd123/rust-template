public class Building
{
	public uint ID;

	public ListHashSet<BuildingPrivlidge> buildingPrivileges;

	public ListHashSet<BuildingBlock> buildingBlocks;

	public ListHashSet<DecayEntity> decayEntities;

	public Building(uint id)
	{
		ID = id;
	}

	public bool IsEmpty()
	{
		if (HasBuildingPrivileges())
		{
			return false;
		}
		if (HasBuildingBlocks())
		{
			return false;
		}
		if (HasDecayEntities())
		{
			return false;
		}
		return true;
	}

	public BuildingPrivlidge GetDominatingBuildingPrivilege()
	{
		BuildingPrivlidge buildingPrivlidge = null;
		if (HasBuildingPrivileges())
		{
			for (int i = 0; i < buildingPrivileges.Count; i++)
			{
				BuildingPrivlidge buildingPrivlidge2 = buildingPrivileges[i];
				if (!(buildingPrivlidge2 == null) && buildingPrivlidge2.IsOlderThan(buildingPrivlidge))
				{
					buildingPrivlidge = buildingPrivlidge2;
				}
			}
		}
		return buildingPrivlidge;
	}

	public bool HasBuildingPrivileges()
	{
		return buildingPrivileges != null && buildingPrivileges.Count > 0;
	}

	public bool HasBuildingBlocks()
	{
		return buildingBlocks != null && buildingBlocks.Count > 0;
	}

	public bool HasDecayEntities()
	{
		return decayEntities != null && decayEntities.Count > 0;
	}

	public void AddBuildingPrivilege(BuildingPrivlidge ent)
	{
		if (!(ent == null))
		{
			if (buildingPrivileges == null)
			{
				buildingPrivileges = new ListHashSet<BuildingPrivlidge>();
			}
			if (!buildingPrivileges.Contains(ent))
			{
				buildingPrivileges.Add(ent);
			}
		}
	}

	public void RemoveBuildingPrivilege(BuildingPrivlidge ent)
	{
		if (!(ent == null))
		{
			buildingPrivileges.Remove(ent);
			if (buildingPrivileges.Count == 0)
			{
				buildingPrivileges = null;
			}
		}
	}

	public void AddBuildingBlock(BuildingBlock ent)
	{
		if (!(ent == null))
		{
			if (buildingBlocks == null)
			{
				buildingBlocks = new ListHashSet<BuildingBlock>();
			}
			if (!buildingBlocks.Contains(ent))
			{
				buildingBlocks.Add(ent);
			}
		}
	}

	public void RemoveBuildingBlock(BuildingBlock ent)
	{
		if (!(ent == null))
		{
			buildingBlocks.Remove(ent);
			if (buildingBlocks.Count == 0)
			{
				buildingBlocks = null;
			}
		}
	}

	public void AddDecayEntity(DecayEntity ent)
	{
		if (!(ent == null))
		{
			if (decayEntities == null)
			{
				decayEntities = new ListHashSet<DecayEntity>();
			}
			if (!decayEntities.Contains(ent))
			{
				decayEntities.Add(ent);
			}
		}
	}

	public void RemoveDecayEntity(DecayEntity ent)
	{
		if (!(ent == null))
		{
			decayEntities.Remove(ent);
			if (decayEntities.Count == 0)
			{
				decayEntities = null;
			}
		}
	}

	public void Add(DecayEntity ent)
	{
		AddDecayEntity(ent);
		AddBuildingBlock(ent as BuildingBlock);
		AddBuildingPrivilege(ent as BuildingPrivlidge);
	}

	public void Remove(DecayEntity ent)
	{
		RemoveDecayEntity(ent);
		RemoveBuildingBlock(ent as BuildingBlock);
		RemoveBuildingPrivilege(ent as BuildingPrivlidge);
	}

	public void Dirty()
	{
		BuildingPrivlidge dominatingBuildingPrivilege = GetDominatingBuildingPrivilege();
		if (dominatingBuildingPrivilege != null)
		{
			dominatingBuildingPrivilege.BuildingDirty();
		}
	}
}
