using UnityEngine;

public class ExfilState : BasicAIState
{
	public override float GetWeight()
	{
		if (GetEntity().RecentlyDismounted() && GetEntity().SecondsSinceAttacked > 1f)
		{
			return 100f;
		}
		return 0f;
	}

	public override void StateEnter()
	{
		base.StateEnter();
		GetEntity().SetDesiredSpeed(HumanNPC.SpeedType.Sprint);
		AIInformationZone informationZone = GetEntity().GetInformationZone();
		if (informationZone != null)
		{
			AICoverPoint bestCoverPoint = informationZone.GetBestCoverPoint(GetEntity().transform.position, GetEntity().transform.position, 25f, 50f, GetEntity());
			if ((bool)bestCoverPoint)
			{
				bestCoverPoint.SetUsedBy(GetEntity(), 10f);
			}
			Vector3 vector = ((bestCoverPoint == null) ? GetEntity().transform.position : bestCoverPoint.transform.position);
			GetEntity().SetDestination(vector);
			brain.mainInterestPoint = vector;
		}
	}

	public override void StateThink(float delta)
	{
		base.StateThink(delta);
		if (GetEntity().CanSeeTarget() && TimeInState() > 2f && GetEntity().DistanceToTarget() < 10f)
		{
			GetEntity().SetDesiredSpeed(HumanNPC.SpeedType.Walk);
		}
		else
		{
			GetEntity().SetDesiredSpeed(HumanNPC.SpeedType.Sprint);
		}
	}
}
