using Facepunch.MarchingCubes;
using Unity.Burst;
using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;

[BurstCompile]
internal struct MarchJob : IJob
{
	[ReadOnly]
	public Point3DGrid sampler;

	public NativeList<float3> vertices;

	[WriteOnly]
	public NativeList<int> indices;

	public float3 vertexOffset;

	public float scale;

	public void Execute()
	{
		//IL_0063: Unknown result type (might be due to invalid IL or missing references)
		//IL_0068: Unknown result type (might be due to invalid IL or missing references)
		//IL_0069: Unknown result type (might be due to invalid IL or missing references)
		//IL_006c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0072: Unknown result type (might be due to invalid IL or missing references)
		//IL_007e: Unknown result type (might be due to invalid IL or missing references)
		int width = sampler.Width;
		int height = sampler.Height;
		int depth = sampler.Depth;
		vertices.Clear();
		indices.Clear();
		NativeArray<int3> corners = default(NativeArray<int3>);
		corners..ctor(8, (Allocator)2, (NativeArrayOptions)0);
		NativeArray<float> cornerSamples = default(NativeArray<float>);
		cornerSamples..ctor(8, (Allocator)2, (NativeArrayOptions)0);
		for (int i = 0; i < width - 1; i++)
		{
			for (int j = 0; j < height - 1; j++)
			{
				for (int k = 0; k < depth - 1; k++)
				{
					ProcessCube(new int3(i, j, k), corners, cornerSamples, vertices, indices, sampler, vertexOffset, scale);
				}
			}
		}
	}

	private static void ProcessCube(int3 cubeStart, NativeArray<int3> corners, NativeArray<float> cornerSamples, NativeList<float3> vertices, NativeList<int> indices, Point3DGrid sampler, float3 vertexOffset, float scale)
	{
		//IL_0003: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0019: Unknown result type (might be due to invalid IL or missing references)
		//IL_001d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0022: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0033: Unknown result type (might be due to invalid IL or missing references)
		//IL_0038: Unknown result type (might be due to invalid IL or missing references)
		//IL_0045: Unknown result type (might be due to invalid IL or missing references)
		//IL_0049: Unknown result type (might be due to invalid IL or missing references)
		//IL_004e: Unknown result type (might be due to invalid IL or missing references)
		//IL_005b: Unknown result type (might be due to invalid IL or missing references)
		//IL_005f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0064: Unknown result type (might be due to invalid IL or missing references)
		//IL_0071: Unknown result type (might be due to invalid IL or missing references)
		//IL_0075: Unknown result type (might be due to invalid IL or missing references)
		//IL_007a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0087: Unknown result type (might be due to invalid IL or missing references)
		//IL_008b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0090: Unknown result type (might be due to invalid IL or missing references)
		//IL_009d: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a6: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0135: Unknown result type (might be due to invalid IL or missing references)
		//IL_013a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0158: Unknown result type (might be due to invalid IL or missing references)
		//IL_015d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0171: Unknown result type (might be due to invalid IL or missing references)
		//IL_0176: Unknown result type (might be due to invalid IL or missing references)
		//IL_0182: Unknown result type (might be due to invalid IL or missing references)
		//IL_0187: Unknown result type (might be due to invalid IL or missing references)
		//IL_01a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_01aa: Unknown result type (might be due to invalid IL or missing references)
		//IL_01be: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_01cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_01d4: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_020b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0210: Unknown result type (might be due to invalid IL or missing references)
		//IL_021d: Unknown result type (might be due to invalid IL or missing references)
		//IL_021f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0221: Unknown result type (might be due to invalid IL or missing references)
		//IL_0228: Unknown result type (might be due to invalid IL or missing references)
		//IL_022d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0238: Unknown result type (might be due to invalid IL or missing references)
		//IL_023a: Unknown result type (might be due to invalid IL or missing references)
		//IL_023c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0243: Unknown result type (might be due to invalid IL or missing references)
		//IL_0248: Unknown result type (might be due to invalid IL or missing references)
		//IL_0253: Unknown result type (might be due to invalid IL or missing references)
		//IL_0255: Unknown result type (might be due to invalid IL or missing references)
		//IL_0257: Unknown result type (might be due to invalid IL or missing references)
		//IL_025e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0263: Unknown result type (might be due to invalid IL or missing references)
		corners[0] = cubeStart + new int3(0, 0, 0);
		corners[1] = cubeStart + new int3(1, 0, 0);
		corners[2] = cubeStart + new int3(1, 0, 1);
		corners[3] = cubeStart + new int3(0, 0, 1);
		corners[4] = cubeStart + new int3(0, 1, 0);
		corners[5] = cubeStart + new int3(1, 1, 0);
		corners[6] = cubeStart + new int3(1, 1, 1);
		corners[7] = cubeStart + new int3(0, 1, 1);
		int num = 0;
		for (int i = 0; i < corners.Length; i++)
		{
			float num3 = (cornerSamples[i] = sampler.Sample(corners[i]));
			if (num3 > 0f)
			{
				num |= 1 << i;
			}
		}
		int num4 = num * 16;
		for (int j = 0; j < 16; j += 3)
		{
			int num5 = MarchingCubeLookup.triTableFlat[num4 + j];
			if (num5 != -1)
			{
				int num6 = MarchingCubeLookup.triTableFlat[num4 + j + 1];
				int num7 = MarchingCubeLookup.triTableFlat[num4 + j + 2];
				float3 val = GetVertex(float3.op_Implicit(corners[MarchingCubeLookup.cornerIndexAFromEdge[num5]]), cornerSamples[MarchingCubeLookup.cornerIndexAFromEdge[num5]], float3.op_Implicit(corners[MarchingCubeLookup.cornerIndexBFromEdge[num5]]), cornerSamples[MarchingCubeLookup.cornerIndexBFromEdge[num5]]);
				float3 val2 = GetVertex(float3.op_Implicit(corners[MarchingCubeLookup.cornerIndexAFromEdge[num6]]), cornerSamples[MarchingCubeLookup.cornerIndexAFromEdge[num6]], float3.op_Implicit(corners[MarchingCubeLookup.cornerIndexBFromEdge[num6]]), cornerSamples[MarchingCubeLookup.cornerIndexBFromEdge[num6]]);
				float3 val3 = GetVertex(float3.op_Implicit(corners[MarchingCubeLookup.cornerIndexAFromEdge[num7]]), cornerSamples[MarchingCubeLookup.cornerIndexAFromEdge[num7]], float3.op_Implicit(corners[MarchingCubeLookup.cornerIndexBFromEdge[num7]]), cornerSamples[MarchingCubeLookup.cornerIndexBFromEdge[num7]]);
				int length = vertices.Length;
				float3 val4 = (val - vertexOffset) * scale;
				vertices.Add(ref val4);
				val4 = (val2 - vertexOffset) * scale;
				vertices.Add(ref val4);
				val4 = (val3 - vertexOffset) * scale;
				vertices.Add(ref val4);
				indices.Add(ref length);
				int num8 = length + 1;
				indices.Add(ref num8);
				num8 = length + 2;
				indices.Add(ref num8);
				continue;
			}
			break;
		}
		static float3 GetVertex(float3 v0, float s0, float3 v1, float s1)
		{
			//IL_000c: Unknown result type (might be due to invalid IL or missing references)
			//IL_000d: Unknown result type (might be due to invalid IL or missing references)
			//IL_000f: Unknown result type (might be due to invalid IL or missing references)
			float num9 = (0f - s0) / (s1 - s0);
			return math.lerp(v0, v1, num9);
		}
	}
}
