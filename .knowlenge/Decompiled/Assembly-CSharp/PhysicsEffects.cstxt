using ConVar;
using UnityEngine;

public class PhysicsEffects : MonoBehaviour
{
	public BaseEntity entity;

	public SoundDefinition physImpactSoundDef;

	public float minTimeBetweenEffects = 0.25f;

	private float lastEffectPlayed;

	public float lowMedThreshold = 0.4f;

	public float medHardThreshold = 0.7f;

	public float enableDelay = 0.1f;

	private float enabledAt = float.PositiveInfinity;

	private float ignoreImpactThreshold = 0.02f;

	public void OnEnable()
	{
		enabledAt = UnityEngine.Time.time;
	}

	public void OnCollisionEnter(Collision collision)
	{
		if (!ConVar.Physics.sendeffects || UnityEngine.Time.time < enabledAt + enableDelay || UnityEngine.Time.time < lastEffectPlayed + minTimeBetweenEffects)
		{
			return;
		}
		float magnitude = collision.relativeVelocity.magnitude;
		magnitude *= 0.065f;
		if (!(magnitude <= ignoreImpactThreshold))
		{
			if (entity != null)
			{
				entity.SignalBroadcast(BaseEntity.Signal.PhysImpact, magnitude.ToString());
			}
			lastEffectPlayed = UnityEngine.Time.time;
		}
	}
}
