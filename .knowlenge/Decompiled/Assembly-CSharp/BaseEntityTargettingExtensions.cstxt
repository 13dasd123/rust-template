using Rust.Ai.Gen2;
using UnityEngine;

public static class BaseEntityTargettingExtensions
{
	public static bool FindTarget(this BaseEntity entity, out BaseEntity target)
	{
		SenseComponent component = entity.GetComponent<SenseComponent>();
		if (component == null)
		{
			target = null;
			return false;
		}
		target = component.GetTarget();
		return target != null;
	}

	public static bool TrySetTarget(this BaseEntity entity, BaseEntity newTarget)
	{
		return entity.GetComponent<SenseComponent>().TrySetTarget(newTarget);
	}

	public static bool SetTarget(this BaseEntity entity, BaseEntity newTarget)
	{
		return entity.GetComponent<SenseComponent>().TrySetTarget(newTarget, bypassCooldown: true);
	}

	public static void ClearTarget(this BaseEntity entity)
	{
		entity.GetComponent<SenseComponent>().ClearTarget();
	}

	public static bool GetTargetPosition(this BaseEntity entity, out Vector3 targetPos)
	{
		BaseEntity target = entity.GetComponent<SenseComponent>().GetTarget();
		if (target == null)
		{
			targetPos = Vector3.zero;
			return false;
		}
		targetPos = target.transform.position;
		return true;
	}

	public static bool IsTargetInRange(this BaseEntity entity, float range)
	{
		if (!entity.GetTargetPosition(out var targetPos))
		{
			return false;
		}
		return (targetPos - entity.transform.position).sqrMagnitude <= range * range;
	}

	public static bool InSameNpcTeam(this BaseEntity entity, BaseEntity other)
	{
		if (entity == null || other == null)
		{
			return false;
		}
		return entity.GetType() == other.GetType();
	}

	public static bool IsNonNpcPlayer(this BaseEntity entity)
	{
		BasePlayer basePlayer = entity.ToPlayer();
		if (basePlayer != null)
		{
			return !basePlayer.IsNpc;
		}
		return false;
	}

	public static bool IsNpcPlayer(this BaseEntity entity)
	{
		BasePlayer basePlayer = entity.ToPlayer();
		if (basePlayer != null)
		{
			return basePlayer.IsNpc;
		}
		return false;
	}

	public static bool ToNonNpcPlayer(this BaseEntity entity, out BasePlayer player)
	{
		BasePlayer basePlayer = entity.ToPlayer();
		if (basePlayer == null || basePlayer.IsNpc)
		{
			player = null;
			return false;
		}
		player = basePlayer;
		return true;
	}
}
