using System.Collections.Generic;
using Network;

public class PlayerTeam
{
	public ulong teamID;

	public string teamName;

	public ulong teamLeader;

	public List<ulong> members = new List<ulong>();

	public List<ulong> invites = new List<ulong>();

	private List<Connection> onlineMemberConnections = new List<Connection>();

	public BasePlayer GetLeader()
	{
		return FindByID(teamLeader);
	}

	public void SendInvite(BasePlayer player)
	{
		if (invites.Count > 8)
		{
			invites.RemoveRange(0, 1);
		}
		BasePlayer basePlayer = FindByID(teamLeader);
		if (!(basePlayer == null))
		{
			invites.Add(player.userID);
			player.ClientRPCPlayer(null, player, "CLIENT_PendingInvite", basePlayer.displayName, teamID);
		}
	}

	public void AcceptInvite(BasePlayer player)
	{
		if (invites.Contains(player.userID))
		{
			invites.Remove(player.userID);
			AddPlayer(player);
			player.ClearPendingInvite();
		}
	}

	public void RejectInvite(BasePlayer player)
	{
		player.ClearPendingInvite();
		invites.Remove(player.userID);
	}

	public bool AddPlayer(BasePlayer player)
	{
		ulong userID = player.userID;
		if (members.Contains(userID))
		{
			return false;
		}
		if (player.currentTeam != 0L)
		{
			return false;
		}
		if (members.Count >= maxTeamSize)
		{
			return false;
		}
		player.currentTeam = teamID;
		members.Add(userID);
		Instance.playerToTeam.Add(userID, this);
		MarkDirty();
		player.SendNetworkUpdate();
		return true;
	}

	public bool RemovePlayer(ulong playerID)
	{
		if (members.Contains(playerID))
		{
			members.Remove(playerID);
			Instance.playerToTeam.Remove(playerID);
			BasePlayer basePlayer = FindByID(playerID);
			if (basePlayer != null)
			{
				basePlayer.ClearTeam();
			}
			if (teamLeader == playerID)
			{
				if (members.Count > 0)
				{
					SetTeamLeader(members[0]);
				}
				else
				{
					Disband();
				}
			}
			MarkDirty();
			return true;
		}
		return false;
	}

	public void SetTeamLeader(ulong newTeamLeader)
	{
		teamLeader = newTeamLeader;
		MarkDirty();
	}

	public void Disband()
	{
		Instance.DisbandTeam(this);
	}

	public void MarkDirty()
	{
		foreach (ulong member in members)
		{
			BasePlayer basePlayer = FindByID(member);
			if (basePlayer != null)
			{
				basePlayer.UpdateTeam(teamID);
			}
		}
	}

	public List<Connection> GetOnlineMemberConnections()
	{
		if (members.Count == 0)
		{
			return null;
		}
		onlineMemberConnections.Clear();
		foreach (ulong member in members)
		{
			BasePlayer basePlayer = FindByID(member);
			if (!(basePlayer == null) && basePlayer.Connection != null)
			{
				onlineMemberConnections.Add(basePlayer.Connection);
			}
		}
		return onlineMemberConnections;
	}
}
