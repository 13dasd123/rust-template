using System;
using Rust.Ai.Gen2;

[Serializable]
[SoftRequireComponent(typeof(LimitedTurnNavAgent))]
[SoftRequireComponent(typeof(SenseComponent))]
internal class Trans_CanReachTarget_Slow : Rust.Ai.Gen2.FSMSlowTransitionBase
{
	protected override bool EvaluateAtInterval()
	{
		using (TimeWarning.New("Trans_CanReachTarget_Slow"))
		{
			if (!Owner.GetTargetPosition(out var targetPos))
			{
				return false;
			}
			LimitedTurnNavAgent component = Owner.GetComponent<LimitedTurnNavAgent>();
			if (component == null)
			{
				return false;
			}
			return component.CanReach(targetPos, triggerPathFailed: true);
		}
	}
}
