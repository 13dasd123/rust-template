using System;

public struct Point : IEquatable<Point>
{
	public int x;

	public int y;

	public Point(int x, int y)
	{
		this.x = x;
		this.y = y;
	}

	public static Point operator +(Point a, Point b)
	{
		return new Point(a.x + b.x, a.y + b.y);
	}

	public static Point operator -(Point a, Point b)
	{
		return new Point(a.x - b.x, a.y - b.y);
	}

	public static Point operator *(Point p, int i)
	{
		return new Point(p.x * i, p.y * i);
	}

	public static Point operator /(Point p, int i)
	{
		return new Point(p.x / i, p.y / i);
	}

	public static bool operator ==(Point a, Point b)
	{
		return a.Equals(b);
	}

	public static bool operator !=(Point a, Point b)
	{
		return !a.Equals(b);
	}

	public override int GetHashCode()
	{
		return x.GetHashCode() ^ y.GetHashCode();
	}

	public override bool Equals(object other)
	{
		return other is Point && Equals((Point)other);
	}

	public bool Equals(Point other)
	{
		return x == other.x && y == other.y;
	}
}
