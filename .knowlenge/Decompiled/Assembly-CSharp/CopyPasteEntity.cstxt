using System;
using System.IO;
using System.Text.RegularExpressions;
using ConVar;
using Network;
using ProtoBuf;
using UnityEngine;
using UnityEngine.Assertions;

public class CopyPasteEntity : PointEntity
{
	public static CopyPasteEntity ServerInstance;

	public const string ClientDirectory = "copypaste";

	public const string FileExtension = ".data";

	public override bool OnRpcMessage(BasePlayer player, uint rpc, Message msg)
	{
		TimeWarning val = TimeWarning.New("CopyPasteEntity.OnRpcMessage", 0);
		try
		{
			if (rpc == 2913956655u && (Object)(object)player != (Object)null)
			{
				Assert.IsTrue(player.isServer, "SV_RPC Message is using a clientside player!");
				if (Global.developer > 2)
				{
					Debug.Log((object)("SV_RPCMessage: " + ((object)player)?.ToString() + " - Paste "));
				}
				TimeWarning val2 = TimeWarning.New("Paste", 0);
				try
				{
					TimeWarning val3 = TimeWarning.New("Call", 0);
					try
					{
						RPCMessage rPCMessage = default(RPCMessage);
						rPCMessage.connection = msg.connection;
						rPCMessage.player = player;
						rPCMessage.read = msg.read;
						RPCMessage rpc2 = rPCMessage;
						Paste(rpc2);
					}
					finally
					{
						((IDisposable)val3)?.Dispose();
					}
				}
				catch (Exception ex)
				{
					Debug.LogException(ex);
					player.Kick("RPC Error in Paste");
				}
				finally
				{
					((IDisposable)val2)?.Dispose();
				}
				return true;
			}
		}
		finally
		{
			((IDisposable)val)?.Dispose();
		}
		return base.OnRpcMessage(player, rpc, msg);
	}

	public static string MakeFilenameSafe(string input)
	{
		return Regex.Replace(input, "[^a-zA-Z0-9]", "");
	}

	public static string GetClientPath(string fileName)
	{
		return Path.Combine("copypaste", MakeFilenameSafe(fileName) + ".data");
	}

	[RPC_Server]
	public void Paste(RPCMessage rpc)
	{
		if (rpc.player.IsAdmin)
		{
			PasteRequest obj = PasteRequest.Deserialize((Stream)(object)rpc.read);
			CopyPasteEntityInfo pasteData = obj.pasteData;
			CopyPaste.PasteOptions options = new CopyPaste.PasteOptions(obj);
			CopyPaste.PasteEntities(pasteData, options, rpc.player.userID);
		}
	}

	public void OnEnable()
	{
		if (base.isServer)
		{
			if ((Object)(object)ServerInstance != (Object)null)
			{
				Debug.LogError((object)"Major fuckup! CopyPasteEntity spawned twice, Contact Developers!");
				Object.Destroy((Object)(object)((Component)this).gameObject);
			}
			else
			{
				ServerInstance = this;
			}
		}
	}

	public void OnDestroy()
	{
		if (base.isServer)
		{
			ServerInstance = null;
		}
	}
}
