using Apex.Serialization;
using UnityEngine;

public class AStarNavigateToPositionWhereWeLastSawPrimaryEnemyPlayer : BaseNavigateTo
{
	[ApexSerialization]
	private bool DisableIsSearchingOnComplete = true;

	public static Vector3 GetDestination(ScientistAStarContext context)
	{
		BaseNpcMemory.EnemyPlayerInfo primaryKnownEnemyPlayer = context.Memory.PrimaryKnownEnemyPlayer;
		if (primaryKnownEnemyPlayer.PlayerInfo.Player != null)
		{
			return primaryKnownEnemyPlayer.OurLastPositionWhenLastSeen;
		}
		return context.BodyPosition;
	}

	protected override Vector3 _GetDestination(ScientistAStarContext context)
	{
		return GetDestination(context);
	}

	protected override void OnPreStart(ScientistAStarContext context)
	{
		context.Domain.StoppingDistance = 0.25f;
	}

	protected override void OnStart(ScientistAStarContext context)
	{
		context.SetFact(Facts.IsSearching, value: true);
	}

	protected override void OnPathFailed(ScientistAStarContext context)
	{
		context.SetFact(Facts.IsSearching, value: false);
		context.Domain.StoppingDistance = 1f;
	}

	protected override void OnPathComplete(ScientistAStarContext context)
	{
		if (DisableIsSearchingOnComplete)
		{
			context.SetFact(Facts.IsSearching, value: false);
		}
		context.Domain.StoppingDistance = 1f;
	}
}
