using System;
using UnityEngine;

[CreateAssetMenu]
public class TreeMarkerData : ScriptableObject
{
	[Serializable]
	public struct MarkerLocation
	{
		public Vector3 LocalPosition;

		public Vector3 LocalNormal;
	}

	public MarkerLocation[] Markers;

	public Vector3 GenerationStartPoint = Vector3.up * 2f;

	public float GenerationRadius = 2f;

	public float MaxY = 1.7f;

	public float MinY = 0.2f;

	public Vector3 ClampToClosestPointInLocalSpace(Vector3 v, int ignoreIndex, out Vector3 normal, out int resultIndex)
	{
		float num = float.MaxValue;
		int num2 = -1;
		for (int i = 0; i < Markers.Length; i++)
		{
			if (i != ignoreIndex)
			{
				float sqrMagnitude = (Markers[i].LocalPosition - v).sqrMagnitude;
				if (sqrMagnitude < num)
				{
					num = sqrMagnitude;
					num2 = i;
				}
			}
		}
		if (num2 > -1)
		{
			normal = Markers[num2].LocalNormal;
			resultIndex = num2;
			return Markers[num2].LocalPosition;
		}
		resultIndex = -1;
		normal = Markers[0].LocalNormal;
		return Markers[0].LocalPosition;
	}
}
