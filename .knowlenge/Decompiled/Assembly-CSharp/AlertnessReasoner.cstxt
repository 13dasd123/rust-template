using Rust.Ai.HTN;
using Rust.Ai.HTN.Reasoning;
using Rust.Ai.HTN.ScientistJunkpile;

public class AlertnessReasoner : INpcReasoner
{
	private float _lastFrustrationDecrementTime;

	public float TickFrequency { get; set; }

	public float LastTickTime { get; set; }

	public void Tick(IHTNAgent npc, float deltaTime, float time)
	{
		if (npc.AiDomain.NpcContext is ScientistJunkpileContext scientistJunkpileContext && scientistJunkpileContext.IsFact(Facts.Alertness))
		{
			if (scientistJunkpileContext.GetFact(Facts.Alertness) > 10)
			{
				scientistJunkpileContext.SetFact(Facts.Alertness, 10, invokeChangedEvent: true, setAsDirty: false);
			}
			if (time - _lastFrustrationDecrementTime > 1f)
			{
				_lastFrustrationDecrementTime = time;
				scientistJunkpileContext.IncrementFact(Facts.Alertness, -1);
			}
		}
	}
}
