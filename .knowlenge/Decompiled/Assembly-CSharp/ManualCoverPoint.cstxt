using Rust.Ai;
using UnityEngine;

public class ManualCoverPoint : FacepunchBehaviour
{
	public float Score = 2f;

	public CoverPointVolume Volume;

	public Vector3 Normal;

	public CoverPoint.CoverType NormalCoverType;

	public Vector3 Position => base.transform.position;

	public float DirectionMagnitude
	{
		get
		{
			if (Volume != null)
			{
				return Volume.CoverPointRayLength;
			}
			return 1f;
		}
	}

	private void Awake()
	{
		if (base.transform.parent != null)
		{
			Volume = base.transform.parent.GetComponent<CoverPointVolume>();
		}
	}

	public CoverPoint ToCoverPoint(CoverPointVolume volume)
	{
		Volume = volume;
		CoverPoint coverPoint = new CoverPoint(Volume, Score);
		coverPoint.LocalPosition = base.transform.position - Volume.transform.position;
		coverPoint.Normal = Normal;
		coverPoint.NormalCoverType = NormalCoverType;
		return coverPoint;
	}
}
