using System.Text;
using UnityEngine;

[Factory("batching")]
public class Batching : ConsoleSystem
{
	[ClientVar]
	[ServerVar]
	public static bool colliders = true;

	[ClientVar]
	[ServerVar]
	public static bool collider_threading = true;

	[ServerVar]
	[ClientVar]
	public static int collider_capacity = 30000;

	[ServerVar]
	[ClientVar]
	public static int collider_vertices = 1000;

	[ServerVar]
	[ClientVar]
	public static int collider_submeshes = 1;

	[ClientVar]
	public static bool renderers = true;

	[ClientVar]
	public static bool renderer_threading = true;

	[ClientVar]
	public static int renderer_capacity = 30000;

	[ClientVar]
	public static int renderer_vertices = 1000;

	[ClientVar]
	public static int renderer_submeshes = 1;

	[ServerVar]
	[ClientVar]
	public static int verbose;

	[ServerVar]
	public static void refresh_colliders(Arg args)
	{
		ColliderBatch[] array = Object.FindObjectsOfType<ColliderBatch>();
		foreach (ColliderBatch colliderBatch in array)
		{
			colliderBatch.Refresh();
		}
		if ((bool)SingletonComponent<ColliderGrid>.Instance)
		{
			SingletonComponent<ColliderGrid>.Instance.Refresh();
		}
	}

	[ServerVar]
	public static void print_colliders(Arg args)
	{
		StringBuilder stringBuilder = new StringBuilder();
		if ((bool)SingletonComponent<ColliderGrid>.Instance)
		{
			stringBuilder.AppendFormat("Mesh Collider Batching: {0:N0}/{0:N0}", SingletonComponent<ColliderGrid>.Instance.BatchedMeshCount(), SingletonComponent<ColliderGrid>.Instance.MeshCount());
			stringBuilder.AppendLine();
		}
		args.ReplyWith(stringBuilder.ToString());
	}
}
