using System;
using System.Collections.Generic;
using UnityEngine;

public class AmbienceManager : SingletonComponent<AmbienceManager>, IClientComponent
{
	[Serializable]
	public class EmitterTypeLimit
	{
		public List<AmbienceDefinitionList> ambience;

		public int limit = 1;

		public int active;
	}

	public List<EmitterTypeLimit> localEmitterLimits = new List<EmitterTypeLimit>();

	public EmitterTypeLimit catchallEmitterLimit = new EmitterTypeLimit();

	private Dictionary<AmbienceDefinitionList, EmitterTypeLimit> emitterLimitByAmbience = new Dictionary<AmbienceDefinitionList, EmitterTypeLimit>();

	public int maxActiveLocalEmitters = 5;

	public List<AmbienceEmitter> baseEmitters = new List<AmbienceEmitter>();

	public List<AmbienceEmitter> emittersInRange = new List<AmbienceEmitter>();

	public List<AmbienceEmitter> activeEmitters = new List<AmbienceEmitter>();

	public List<AmbienceEmitter> emitters = new List<AmbienceEmitter>();

	private float tickInterval = 0.25f;

	private float lastTick;

	private CullingGroup cullingGroup;

	private List<AmbienceEmitter> emittersBySphereIdx = new List<AmbienceEmitter>();

	private bool cullingGroupDirty = true;

	public float localEmitterRange = 30f;
}
