using UnityEngine;

public struct WeatherState
{
	public float Clouds;

	public float Fog;

	public float Wind;

	public float Rain;

	public static WeatherState Fade(WeatherState a, WeatherState b, float t)
	{
		WeatherState result = default(WeatherState);
		result.Clouds = Mathf.SmoothStep(a.Clouds, b.Clouds, t);
		result.Fog = Mathf.SmoothStep(a.Fog, b.Fog, t);
		result.Wind = Mathf.SmoothStep(a.Wind, b.Wind, t);
		result.Rain = Mathf.SmoothStep(a.Rain, b.Rain, t);
		return result;
	}

	public void Override(WeatherState other)
	{
		if (other.Clouds >= 0f)
		{
			Clouds = Mathf.Clamp01(other.Clouds);
		}
		if (other.Fog >= 0f)
		{
			Fog = Mathf.Clamp01(other.Fog);
		}
		if (other.Wind >= 0f)
		{
			Wind = Mathf.Clamp01(other.Wind);
		}
		if (other.Rain >= 0f)
		{
			Rain = Mathf.Clamp01(other.Rain);
		}
	}

	public void Max(WeatherState other)
	{
		Clouds = Mathf.Max(Clouds, other.Clouds);
		Fog = Mathf.Max(Fog, other.Fog);
		Wind = Mathf.Max(Wind, other.Wind);
		Rain = Mathf.Max(Rain, other.Rain);
	}
}
