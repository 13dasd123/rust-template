using Apex.Serialization;
using Rust.Ai;

public class HasHumanFactAmmo : BaseScorer
{
	public enum EqualityEnum
	{
		Greater,
		Gequal,
		Equal,
		Lequal,
		Lesser
	}

	[ApexSerialization(defaultValue = NPCPlayerApex.AmmoStateEnum.Full)]
	public NPCPlayerApex.AmmoStateEnum value;

	[ApexSerialization]
	public bool requireRanged;

	[ApexSerialization(defaultValue = EqualityEnum.Equal)]
	public EqualityEnum Equality;

	public override float GetScore(BaseContext c)
	{
		if (requireRanged && c.GetFact(NPCPlayerApex.Facts.CurrentWeaponType) == 1)
		{
			if (Equality <= EqualityEnum.Equal)
			{
				return 0f;
			}
			return 1f;
		}
		byte fact = c.GetFact(NPCPlayerApex.Facts.CurrentAmmoState);
		return Equality switch
		{
			EqualityEnum.Greater => ((int)fact >= (int)value) ? 0f : 1f, 
			EqualityEnum.Gequal => ((int)fact > (int)value) ? 0f : 1f, 
			EqualityEnum.Lequal => ((int)fact < (int)value) ? 0f : 1f, 
			EqualityEnum.Lesser => ((int)fact <= (int)value) ? 0f : 1f, 
			_ => ((uint)fact != (uint)value) ? 0f : 1f, 
		};
	}
}
