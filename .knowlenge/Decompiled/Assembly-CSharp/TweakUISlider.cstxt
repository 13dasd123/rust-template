using System;
using TMPro;
using UnityEngine;
using UnityEngine.Events;
using UnityEngine.UI;

public class TweakUISlider : TweakUIBase
{
	public Slider sliderControl;

	public TextMeshProUGUI textControl;

	public static string lastConVarChanged;

	public static TimeSince timeSinceLastConVarChange;

	public bool applyOnMouseUp;

	private TimeSince mouseDown;

	public override Vector2i OptionsRange => new Vector2i((int)sliderControl.minValue, (int)sliderControl.maxValue);

	protected override void Init()
	{
		base.Init();
		ResetToConvar();
	}

	protected void OnEnable()
	{
		ResetToConvar();
	}

	public void OnChanged()
	{
		//IL_002d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0032: Unknown result type (might be due to invalid IL or missing references)
		RefreshSliderDisplay(sliderControl.value);
		if (ApplyImmediatelyOnChange)
		{
			SetConvarValue();
		}
		if (applyOnMouseUp)
		{
			mouseDown = TimeSince.op_Implicit(0f);
			((FacepunchBehaviour)SingletonComponent<InvokeHandler>.Instance).InvokeRepeating((Action)WaitForMouseUp, 0f, 0f);
		}
	}

	private void WaitForMouseUp()
	{
		//IL_001a: Unknown result type (might be due to invalid IL or missing references)
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		if (Input.GetMouseButton(0))
		{
			mouseDown = TimeSince.op_Implicit(0f);
		}
		else if (TimeSince.op_Implicit(mouseDown) > 0.1f)
		{
			SetConvarValue();
			((FacepunchBehaviour)SingletonComponent<InvokeHandler>.Instance).CancelInvoke((Action)WaitForMouseUp);
		}
	}

	protected override void SetConvarValue()
	{
		//IL_006d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0072: Unknown result type (might be due to invalid IL or missing references)
		base.SetConvarValue();
		if (conVar == null)
		{
			return;
		}
		float value = sliderControl.value;
		if (conVar.AsFloat != value)
		{
			conVar.Set(value);
			UnityEvent obj = onValueChanged;
			if (obj != null)
			{
				obj.Invoke();
			}
			RefreshSliderDisplay(conVar.AsFloat);
			lastConVarChanged = conVar.FullName;
			timeSinceLastConVarChange = TimeSince.op_Implicit(0f);
		}
	}

	public override void ResetToConvar()
	{
		base.ResetToConvar();
		if (conVar != null)
		{
			RefreshSliderDisplay(conVar.AsFloat);
		}
	}

	private void RefreshSliderDisplay(float value)
	{
		sliderControl.value = value;
		if (sliderControl.wholeNumbers)
		{
			((TMP_Text)textControl).text = sliderControl.value.ToString("N0");
		}
		else
		{
			((TMP_Text)textControl).text = sliderControl.value.ToString("0.0");
		}
	}
}
