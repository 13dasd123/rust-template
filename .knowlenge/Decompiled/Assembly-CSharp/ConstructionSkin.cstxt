using System.Collections.Generic;
using UnityEngine;

public class ConstructionSkin : BasePrefab
{
	private ColliderBatch[] colliderBatches;

	private List<GameObject> conditionals;

	private void RefreshColliderBatching()
	{
		if (colliderBatches == null)
		{
			colliderBatches = GetComponentsInChildren<ColliderBatch>(includeInactive: true);
		}
		for (int i = 0; i < colliderBatches.Length; i++)
		{
			colliderBatches[i].Refresh();
		}
	}

	private void CreateConditionalModels(BaseEntity parent)
	{
		ConditionalModel[] array = PrefabAttribute.server.FindAll<ConditionalModel>(prefabID);
		for (int i = 0; i < array.Length; i++)
		{
			GameObject gameObject = array[i].Run(parent.gameObject);
			if (!(gameObject == null))
			{
				if (conditionals == null)
				{
					conditionals = new List<GameObject>();
				}
				conditionals.Add(gameObject);
			}
		}
	}

	private void DestroyConditionalModels(BaseEntity parent)
	{
		if (conditionals != null)
		{
			for (int i = 0; i < conditionals.Count; i++)
			{
				parent.gameManager.Retire(conditionals[i]);
			}
			conditionals.Clear();
		}
	}

	public void Refresh(BaseEntity parent)
	{
		DestroyConditionalModels(parent);
		if (parent.isServer)
		{
			RefreshColliderBatching();
		}
		CreateConditionalModels(parent);
	}

	public void Destroy(BaseEntity parent)
	{
		DestroyConditionalModels(parent);
		parent.gameManager.Retire(base.gameObject);
	}
}
