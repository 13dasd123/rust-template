using Apex.AI;
using Rust.Ai;
using UnityEngine;

[FriendlyName("Move To Best Position", "Sets a move target based on the scorers and moves towards it")]
public class MoveToBestPosition : BaseActionWithOptions<Vector3>
{
	public override void DoExecute(BaseContext c)
	{
		Vector3 best = GetBest(c, c.sampledPositions);
		if (best.sqrMagnitude == 0f)
		{
			return;
		}
		if (c is NPCHumanContext nPCHumanContext && nPCHumanContext.CurrentCoverVolume != null)
		{
			for (int i = 0; i < nPCHumanContext.sampledCoverPoints.Count; i++)
			{
				CoverPoint coverPoint = nPCHumanContext.sampledCoverPoints[i];
				CoverPoint.CoverType activeCoverType = nPCHumanContext.sampledCoverPointTypes[i];
				Vector3 a = coverPoint.LocalPosition + nPCHumanContext.CurrentCoverVolume.transform.position;
				float num = Vector3Ex.Distance2D(a, best);
				if (num < 1f)
				{
					nPCHumanContext.ReservedCoverPoint = coverPoint;
					nPCHumanContext.ReservedCoverPoint.ReservedFor = nPCHumanContext.Entity;
					nPCHumanContext.ActiveCoverType = activeCoverType;
					break;
				}
			}
		}
		c.AIAgent.UpdateDestination(best);
	}
}
