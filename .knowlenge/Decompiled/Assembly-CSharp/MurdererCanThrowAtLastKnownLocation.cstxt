using Apex.AI;
using ConVar;
using UnityEngine;

public class MurdererCanThrowAtLastKnownLocation : ContextualScorerBase<MurdererContext>
{
	public override float Score(MurdererContext c)
	{
		if (!Try(c))
		{
			return 0f;
		}
		return score;
	}

	public static bool Try(MurdererContext c)
	{
		if (!ConVar.AI.npc_use_thrown_weapons || !Halloween.scarecrows_throw_beancans)
		{
			return false;
		}
		if (c.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player == null)
		{
			return false;
		}
		if (UnityEngine.Time.time - MurdererUseThrowableWeapon.LastTimeThrown < Halloween.scarecrow_throw_beancan_global_delay)
		{
			return false;
		}
		Vector3 vector = MurdererNavigateToLastKnownLocationOfPrimaryEnemyPlayer.GetDestination(c);
		if ((vector - c.BodyPosition).sqrMagnitude < 0.1f)
		{
			vector = c.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.transform.position;
			if ((vector - c.BodyPosition).sqrMagnitude < 0.1f)
			{
				return false;
			}
		}
		Vector3 vector2 = vector + PlayerEyes.EyeOffset;
		Vector3 vector3 = c.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.transform.position + PlayerEyes.EyeOffset;
		if ((vector2 - vector3).sqrMagnitude > 8f)
		{
			return false;
		}
		Vector3 vector4 = c.BodyPosition + PlayerEyes.EyeOffset;
		if (Mathf.Abs(Vector3.Dot((vector4 - vector2).normalized, (vector4 - vector3).normalized)) < 0.75f)
		{
			return false;
		}
		if (!c.Body.IsVisible(vector2) && (!c.Memory.PrimaryKnownEnemyPlayer.HeadVisibleWhenLastNoticed || c.Memory.PrimaryKnownEnemyPlayer.BodyVisibleWhenLastNoticed))
		{
			return false;
		}
		return true;
	}
}
