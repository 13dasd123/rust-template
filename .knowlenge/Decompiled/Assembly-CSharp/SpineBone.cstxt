using System;
using System.Collections.Generic;
using UnityEngine;

[Serializable]
public class SpineBone
{
	public Transform transform;

	public Vector3 ProceduralPosition;

	public Quaternion ProceduralRotation;

	public Vector3 HelperDiffPosition;

	public Quaternion HelperDiffRoation;

	public Vector3 PreviousPosition;

	public Vector3 DefaultForward;

	public float StraightenFactor;

	public float TargetStraightenFactor;

	private float boneLengthB = 0.1f;

	private float boneLengthF = 0.1f;

	private Vector3 boneLocalOffsetB;

	private Vector3 boneLocalOffsetF;

	public float MotionWeight = 1f;

	public Quaternion FinalRotation;

	public Vector3 FinalPosition;

	public Vector3 ManualPosOffset;

	public Quaternion ManualRotOffset;

	public Vector3 ReferencePosition;

	public Vector3 PreviousReferencePosition;

	public Quaternion ReferenceRotation;

	private Quaternion lastKeyframeRotation;

	private Vector3 lastKeyframePosition;

	private Vector3 lastFinalLocalPosition;

	private Quaternion lastFinalLocalRotation;

	public Vector3 forward;

	public Vector3 right;

	public Vector3 up;

	public bool Collide = true;

	public float CollisionRadius = 1f;

	public Vector3 ColliderOffset = Vector3.zero;

	public float BoneLength { get; private set; }

	public Vector3 BoneLocalOffset { get; private set; }

	public Vector3 InitialLocalPosition { get; private set; }

	public Quaternion InitialLocalRotation { get; private set; }

	public void UpdateReferencePosition(Vector3 pos)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		PreviousReferencePosition = ReferencePosition;
		ReferencePosition = pos;
	}

	public void ZeroKeyframeCheck()
	{
		//IL_0001: Unknown result type (might be due to invalid IL or missing references)
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0032: Unknown result type (might be due to invalid IL or missing references)
		//IL_0037: Unknown result type (might be due to invalid IL or missing references)
		//IL_001f: Unknown result type (might be due to invalid IL or missing references)
		//IL_003d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0048: Unknown result type (might be due to invalid IL or missing references)
		//IL_006d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0072: Unknown result type (might be due to invalid IL or missing references)
		//IL_005b: Unknown result type (might be due to invalid IL or missing references)
		if (lastFinalLocalRotation.QIsSame(transform.localRotation))
		{
			transform.localRotation = lastKeyframeRotation;
		}
		else
		{
			lastKeyframeRotation = transform.localRotation;
		}
		if (lastFinalLocalPosition.VIsSame(transform.localPosition))
		{
			transform.localPosition = lastKeyframePosition;
		}
		else
		{
			lastKeyframePosition = transform.localPosition;
		}
	}

	public void RefreshFinalLocalPose()
	{
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_001d: Unknown result type (might be due to invalid IL or missing references)
		lastFinalLocalPosition = transform.localPosition;
		lastFinalLocalRotation = transform.localRotation;
	}

	public SpineBone(Transform t)
	{
		//IL_0034: Unknown result type (might be due to invalid IL or missing references)
		//IL_0039: Unknown result type (might be due to invalid IL or missing references)
		//IL_004c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0051: Unknown result type (might be due to invalid IL or missing references)
		//IL_0057: Unknown result type (might be due to invalid IL or missing references)
		//IL_005c: Unknown result type (might be due to invalid IL or missing references)
		transform = t;
		ManualPosOffset = Vector3.zero;
		ColliderOffset = Vector3.zero;
		Collide = true;
		CollisionRadius = 1f;
	}

	public void PrepareBone(Transform baseTransform, List<SpineBone> bones, int index)
	{
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_007f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0084: Unknown result type (might be due to invalid IL or missing references)
		//IL_0069: Unknown result type (might be due to invalid IL or missing references)
		//IL_006e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0053: Unknown result type (might be due to invalid IL or missing references)
		//IL_0058: Unknown result type (might be due to invalid IL or missing references)
		//IL_009d: Unknown result type (might be due to invalid IL or missing references)
		//IL_009e: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0096: Unknown result type (might be due to invalid IL or missing references)
		//IL_009b: Unknown result type (might be due to invalid IL or missing references)
		//IL_011d: Unknown result type (might be due to invalid IL or missing references)
		//IL_011e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0123: Unknown result type (might be due to invalid IL or missing references)
		//IL_0130: Unknown result type (might be due to invalid IL or missing references)
		//IL_0135: Unknown result type (might be due to invalid IL or missing references)
		//IL_013b: Unknown result type (might be due to invalid IL or missing references)
		//IL_013c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0141: Unknown result type (might be due to invalid IL or missing references)
		//IL_0146: Unknown result type (might be due to invalid IL or missing references)
		//IL_0155: Unknown result type (might be due to invalid IL or missing references)
		//IL_0156: Unknown result type (might be due to invalid IL or missing references)
		//IL_015b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0168: Unknown result type (might be due to invalid IL or missing references)
		//IL_016d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0173: Unknown result type (might be due to invalid IL or missing references)
		//IL_0174: Unknown result type (might be due to invalid IL or missing references)
		//IL_0179: Unknown result type (might be due to invalid IL or missing references)
		//IL_017e: Unknown result type (might be due to invalid IL or missing references)
		//IL_018d: Unknown result type (might be due to invalid IL or missing references)
		//IL_018e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0193: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_0100: Unknown result type (might be due to invalid IL or missing references)
		//IL_0105: Unknown result type (might be due to invalid IL or missing references)
		//IL_010a: Unknown result type (might be due to invalid IL or missing references)
		//IL_010f: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_00eb: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f0: Unknown result type (might be due to invalid IL or missing references)
		//IL_01bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c0: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ab: Unknown result type (might be due to invalid IL or missing references)
		//IL_01b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_01d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_01d5: Unknown result type (might be due to invalid IL or missing references)
		InitialLocalPosition = transform.localPosition;
		InitialLocalRotation = transform.localRotation;
		Vector3 val = ((index != bones.Count - 1) ? bones[index + 1].transform.position : ((bones[index].transform.childCount <= 0) ? bones[index - 1].transform.position : bones[index].transform.GetChild(0).position));
		if (index == 0)
		{
			val = bones[index + 1].transform.position;
		}
		if (Vector3.Distance(baseTransform.InverseTransformPoint(val), baseTransform.InverseTransformPoint(bones[index].transform.position)) < 0.01f)
		{
			int num = index + 2;
			if (num < bones.Count)
			{
				DefaultForward = transform.InverseTransformPoint(bones[num].transform.position);
			}
			else
			{
				DefaultForward = transform.InverseTransformPoint(val - baseTransform.position);
			}
		}
		else
		{
			DefaultForward = transform.InverseTransformPoint(val);
		}
		Vector3 val2 = baseTransform.InverseTransformPoint(transform.position) - baseTransform.InverseTransformPoint(val);
		boneLengthB = ((Vector3)(ref val2)).magnitude;
		boneLocalOffsetB = baseTransform.InverseTransformPoint(val);
		val2 = baseTransform.InverseTransformPoint(transform.position) - baseTransform.InverseTransformPoint(val);
		boneLengthF = ((Vector3)(ref val2)).magnitude;
		boneLocalOffsetF = baseTransform.InverseTransformPoint(val);
		if (((Vector3)(ref ManualPosOffset)).sqrMagnitude == 0f)
		{
			ManualPosOffset = Vector3.zero;
		}
		val2 = ((Quaternion)(ref ManualRotOffset)).eulerAngles;
		if (((Vector3)(ref val2)).sqrMagnitude == 0f)
		{
			ManualRotOffset = Quaternion.identity;
		}
		SetDistanceForFrameForward();
		PrepareAxes(baseTransform, bones, index);
	}

	public void SetDistanceForFrameForward()
	{
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		BoneLength = boneLengthF;
		BoneLocalOffset = boneLocalOffsetF;
	}

	public void SetDistanceForFrameBackward()
	{
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		BoneLength = boneLengthB;
		BoneLocalOffset = boneLocalOffsetB;
	}

	public float GetUnscalledBoneLength()
	{
		if (boneLengthF > boneLengthB)
		{
			return boneLengthF;
		}
		return boneLengthB;
	}

	private void PrepareAxes(Transform baseTransform, List<SpineBone> bonesList, int index)
	{
		//IL_0081: Unknown result type (might be due to invalid IL or missing references)
		//IL_0086: Unknown result type (might be due to invalid IL or missing references)
		//IL_0087: Unknown result type (might be due to invalid IL or missing references)
		//IL_008c: Unknown result type (might be due to invalid IL or missing references)
		//IL_008e: Unknown result type (might be due to invalid IL or missing references)
		//IL_008f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0095: Unknown result type (might be due to invalid IL or missing references)
		//IL_0096: Unknown result type (might be due to invalid IL or missing references)
		//IL_009b: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a2: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ad: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ae: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b3: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c5: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_00cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_00db: Unknown result type (might be due to invalid IL or missing references)
		//IL_00dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e6: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fa: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fc: Unknown result type (might be due to invalid IL or missing references)
		//IL_0101: Unknown result type (might be due to invalid IL or missing references)
		//IL_0106: Unknown result type (might be due to invalid IL or missing references)
		//IL_0109: Unknown result type (might be due to invalid IL or missing references)
		//IL_010a: Unknown result type (might be due to invalid IL or missing references)
		//IL_010c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0111: Unknown result type (might be due to invalid IL or missing references)
		//IL_0117: Unknown result type (might be due to invalid IL or missing references)
		//IL_0118: Unknown result type (might be due to invalid IL or missing references)
		//IL_011d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0122: Unknown result type (might be due to invalid IL or missing references)
		//IL_0127: Unknown result type (might be due to invalid IL or missing references)
		//IL_012c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0134: Unknown result type (might be due to invalid IL or missing references)
		//IL_0139: Unknown result type (might be due to invalid IL or missing references)
		//IL_0141: Unknown result type (might be due to invalid IL or missing references)
		//IL_0146: Unknown result type (might be due to invalid IL or missing references)
		//IL_0057: Unknown result type (might be due to invalid IL or missing references)
		//IL_005c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0063: Unknown result type (might be due to invalid IL or missing references)
		//IL_0068: Unknown result type (might be due to invalid IL or missing references)
		//IL_002d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0032: Unknown result type (might be due to invalid IL or missing references)
		//IL_0033: Unknown result type (might be due to invalid IL or missing references)
		//IL_0038: Unknown result type (might be due to invalid IL or missing references)
		Transform val;
		Vector3 position;
		Vector3 position2;
		if (index == bonesList.Count - 1)
		{
			if (transform.childCount == 1)
			{
				val = transform;
				Transform child = transform.GetChild(0);
				position = val.position;
				position2 = child.position;
			}
			else
			{
				val = transform;
				_ = transform;
				position = bonesList[index - 1].transform.position;
				position2 = transform.position;
			}
		}
		else
		{
			val = transform;
			Transform obj = bonesList[index + 1].transform;
			position = val.position;
			position2 = obj.position;
		}
		Vector3 val2 = val.InverseTransformDirection(position2) - val.InverseTransformDirection(position);
		Vector3 val3 = baseTransform.up;
		Vector3 val4 = transform.TransformDirection(val2);
		val4 = Vector3.ProjectOnPlane(val3, ((Vector3)(ref val4)).normalized);
		Vector3 normalized = ((Vector3)(ref val4)).normalized;
		Vector3 val5 = val.InverseTransformDirection(position + normalized) - val.InverseTransformDirection(position);
		Vector3 val6 = Vector3.Cross(transform.TransformDirection(val2), transform.TransformDirection(val5));
		Vector3 val7 = val.InverseTransformDirection(position + val6) - val.InverseTransformDirection(position);
		right = ((Vector3)(ref val7)).normalized;
		up = ((Vector3)(ref val5)).normalized;
		forward = ((Vector3)(ref val2)).normalized;
	}

	internal void CalculateDifferencePose(Vector3 upAxis, Vector3 rightAxis)
	{
		//IL_0002: Unknown result type (might be due to invalid IL or missing references)
		//IL_0008: Unknown result type (might be due to invalid IL or missing references)
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0012: Unknown result type (might be due to invalid IL or missing references)
		//IL_0018: Unknown result type (might be due to invalid IL or missing references)
		//IL_001e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0023: Unknown result type (might be due to invalid IL or missing references)
		//IL_0024: Unknown result type (might be due to invalid IL or missing references)
		//IL_0029: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0034: Unknown result type (might be due to invalid IL or missing references)
		//IL_0035: Unknown result type (might be due to invalid IL or missing references)
		//IL_003a: Unknown result type (might be due to invalid IL or missing references)
		//IL_003f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0041: Unknown result type (might be due to invalid IL or missing references)
		//IL_0047: Unknown result type (might be due to invalid IL or missing references)
		//IL_004c: Unknown result type (might be due to invalid IL or missing references)
		//IL_004d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0052: Unknown result type (might be due to invalid IL or missing references)
		//IL_0058: Unknown result type (might be due to invalid IL or missing references)
		//IL_005d: Unknown result type (might be due to invalid IL or missing references)
		//IL_005e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0063: Unknown result type (might be due to invalid IL or missing references)
		//IL_0068: Unknown result type (might be due to invalid IL or missing references)
		//IL_006a: Unknown result type (might be due to invalid IL or missing references)
		//IL_006b: Unknown result type (might be due to invalid IL or missing references)
		//IL_006c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0071: Unknown result type (might be due to invalid IL or missing references)
		//IL_0076: Unknown result type (might be due to invalid IL or missing references)
		HelperDiffPosition = ProceduralPosition - ReferencePosition;
		Quaternion val = ProceduralRotation * Quaternion.FromToRotation(up, upAxis) * Quaternion.FromToRotation(right, rightAxis);
		Quaternion val2 = ReferenceRotation * Quaternion.FromToRotation(up, upAxis) * Quaternion.FromToRotation(right, rightAxis);
		HelperDiffRoation = val * Quaternion.Inverse(val2);
	}

	internal void ApplyDifferencePose()
	{
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0012: Unknown result type (might be due to invalid IL or missing references)
		//IL_0017: Unknown result type (might be due to invalid IL or missing references)
		//IL_001e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0029: Unknown result type (might be due to invalid IL or missing references)
		//IL_002e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0033: Unknown result type (might be due to invalid IL or missing references)
		FinalPosition = transform.position + HelperDiffPosition;
		FinalRotation = HelperDiffRoation * transform.rotation;
	}

	public void Editor_SetLength(float length)
	{
		if (!Application.isPlaying)
		{
			BoneLength = length;
		}
	}

	public float GetCollisionRadiusScaled()
	{
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		return CollisionRadius * transform.lossyScale.x;
	}
}
