using UnityEngine;

public class ConstructionLink : EntityLink
{
	public Vector3 position => socket.worldPosition;

	public Vector3 direction => socket.worldRotation * Vector3.forward;

	public float support => (socket as ConstructionSocket).support;

	public ConstructionSocket.Type type => (socket as ConstructionSocket).socketType;

	public override void Initialize()
	{
	}

	public override bool CanConnect(EntityLink link)
	{
		if (link == null)
		{
			return false;
		}
		if ((link.gender | gender) != (Gender)3)
		{
			return false;
		}
		if (link.IsOccupied())
		{
			return false;
		}
		if (IsOccupied())
		{
			return false;
		}
		if (!(link is ConstructionLink constructionLink))
		{
			return false;
		}
		if (constructionLink.type != type)
		{
			return false;
		}
		Vector3 a = owner.transform.TransformPoint(position);
		Vector3 b = constructionLink.owner.transform.TransformPoint(constructionLink.position);
		float num = Vector3.Distance(a, b);
		if (num > 0.05f)
		{
			return false;
		}
		Vector3 vector = owner.transform.TransformDirection(direction);
		Vector3 vector2 = constructionLink.owner.transform.TransformDirection(constructionLink.direction);
		float num2 = Vector3.Angle(vector, vector2);
		if (gender == (Gender)3)
		{
			num2 = Mathf.Min(num2, Vector3.Angle(-vector, vector2));
		}
		if (link.gender == (Gender)3)
		{
			num2 = Mathf.Min(num2, Vector3.Angle(vector, -vector2));
		}
		if (num2 > 5f)
		{
			return false;
		}
		return true;
	}
}
