using UnityEngine;

public class BasicAIState
{
	private int myIndex;

	public BaseAIBrain<T> brain;

	protected float _timeInState;

	protected float _lastStateExitTime;

	public virtual void StateEnter()
	{
		_timeInState = 0f;
	}

	public virtual void StateThink(float delta)
	{
		_timeInState += delta;
	}

	public virtual void StateLeave()
	{
		_timeInState = 0f;
		_lastStateExitTime = Time.time;
	}

	public virtual bool CanInterrupt()
	{
		return true;
	}

	public virtual float GetWeight()
	{
		return 0f;
	}

	public void SetIndex(int newIndex)
	{
		if (myIndex == 0)
		{
			myIndex = newIndex;
		}
	}

	public float TimeInState()
	{
		return _timeInState;
	}

	public float TimeSinceState()
	{
		return Time.time - _lastStateExitTime;
	}

	public void Reset()
	{
		_timeInState = 0f;
	}

	public bool IsInState()
	{
		return brain != null && brain.GetCurrentState() == this;
	}

	public virtual void DrawGizmos()
	{
	}
}
