using Apex.Ai.HTN;
using Apex.Serialization;

public class AStarFutureCoverState : EffectBase<ScientistAStarContext>
{
	[ApexSerialization]
	public CoverTactic Tactic;

	public override void Apply(ScientistAStarContext context, bool fromPlanner, bool temporary)
	{
		CoverPoint cover = AStarNavigateToCover.GetCover(Tactic, context);
		if (fromPlanner)
		{
			context.PushFactChangeDuringPlanning(Facts.CoverState, (cover != null) ? ((cover.NormalCoverType == CoverPoint.CoverType.Partial) ? CoverState.Partial : CoverState.Full) : CoverState.None, temporary);
		}
		else
		{
			context.SetFact(Facts.CoverState, (cover != null) ? ((cover.NormalCoverType == CoverPoint.CoverType.Partial) ? CoverState.Partial : CoverState.Full) : CoverState.None);
		}
	}

	public override void Reverse(ScientistAStarContext context, bool fromPlanner)
	{
		if (fromPlanner)
		{
			context.PopFactChangeDuringPlanning(Facts.CoverState);
		}
		else
		{
			context.SetFact(Facts.CoverState, context.GetPreviousFact(Facts.CoverState));
		}
	}
}
