using UnityEngine;
using UnityEngine.Rendering;

[RequireComponent(typeof(CommandBufferManager))]
[RequireComponent(typeof(Camera))]
public class LargeScaleOcclusion : SingletonComponent<LargeScaleOcclusion>
{
	private const int MaxHeightMapSize = 4096;

	[Header("LSO Render")]
	public float TexelsPerMeter = 0.5f;

	public LayerMask CullingMask = -1;

	public bool DebugOcclusion;

	public bool DebugHeightMap;

	public float DebugHeightMapSize = 256f;

	[Header("LSO Compute")]
	[Range(0f, 1f)]
	public float Intensity = 1f;

	public float KernelRadius = 5f;

	public float PowerExponent = 1f;

	[Range(0f, 0.99f)]
	public float Bias = 0.8f;

	[Header("LSO Blur")]
	public bool BlurEnabled = true;

	[Range(1f, 8f)]
	public int BlurPasses = 2;

	[Range(0f, 8f)]
	public float BlurDepthThreshold = 1f;

	private Terrain terrain;

	private bool ready;

	private GameObject lsoCamObj;

	private Camera lsoCam;

	private Camera cam;

	private int resolution = 512;

	private RenderTexture heightRT;

	private const int RandomSize = 4;

	private const int DirectionCount = 6;

	private Texture2D randomTex;

	private Color[] randomData;

	private Material computeMat;

	private Material blurMat;

	private const CameraEvent lsoCBEvent = CameraEvent.BeforeLighting;

	private const int lsoCBOrderId = 250;

	public bool Initialized => terrain != null;
}
