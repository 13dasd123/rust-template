using Apex.Serialization;
using Rust.Ai;
using UnityEngine;

public sealed class LineOfSightToTargetEntity : BaseScorer
{
	[ApexSerialization]
	private CoverPoint.CoverType Cover;

	public override float GetScore(BaseContext c)
	{
		if (c.AIAgent.AttackTarget == null)
		{
			return 0f;
		}
		BasePlayer basePlayer = c.AIAgent.AttackTarget as BasePlayer;
		if ((bool)basePlayer)
		{
			Vector3 attackPosition = c.AIAgent.AttackPosition;
			return (!basePlayer.IsVisible(attackPosition, basePlayer.CenterPoint()) && !basePlayer.IsVisible(attackPosition, basePlayer.eyes.position) && !basePlayer.IsVisible(attackPosition, basePlayer.transform.position)) ? 0f : 1f;
		}
		if (Cover == CoverPoint.CoverType.Full)
		{
			return (!c.AIAgent.AttackTarget.IsVisible(c.AIAgent.AttackPosition)) ? 0f : 1f;
		}
		return (!c.AIAgent.AttackTarget.IsVisible(c.AIAgent.CrouchedAttackPosition)) ? 0f : 1f;
	}
}
