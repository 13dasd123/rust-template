using System;
using System.Collections.Generic;
using Facepunch;
using Facepunch.Sqlite;
using ProtoBuf;

private class FileDatabase : Database
{
	public IEnumerable<AssociatedFile> QueryAll(NetworkableId entityID)
	{
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		IntPtr intPtr = ((Database)this).Prepare("SELECT filetype, crc, part, data FROM data WHERE entid = ?");
		Database.Bind<ulong>(intPtr, 1, entityID.Value);
		return ((Database)this).ExecuteAndReadQueryResults<AssociatedFile>(intPtr, (Func<IntPtr, AssociatedFile>)ReadAssociatedFileRow);
	}

	private static AssociatedFile ReadAssociatedFileRow(IntPtr stmHandle)
	{
		AssociatedFile obj = Pool.Get<AssociatedFile>();
		obj.type = Database.GetColumnValue<int>(stmHandle, 0);
		obj.crc = (uint)Database.GetColumnValue<int>(stmHandle, 1);
		obj.numID = (uint)Database.GetColumnValue<int>(stmHandle, 2);
		obj.data = Database.GetColumnValue<byte[]>(stmHandle, 3);
		return obj;
	}
}
