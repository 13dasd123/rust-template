using Apex.AI;
using Apex.Serialization;

public class MurdererHasItem : ContextualScorerBase<MurdererContext>
{
	[ApexSerialization]
	public ItemType Value;

	public override float Score(MurdererContext c)
	{
		return (!Test(c, Value)) ? 0f : score;
	}

	public static bool Test(MurdererContext c, ItemType Value)
	{
		c.Body.inventory.AllItemsNoAlloc(ref BaseNpcContext.InventoryLookupCache);
		foreach (Item item in BaseNpcContext.InventoryLookupCache)
		{
			if (Value == ItemType.HealingItem && item.info.category == ItemCategory.Medical)
			{
				return true;
			}
			if (Value == ItemType.MeleeWeapon && (item.info.category == ItemCategory.Weapon || item.info.category == ItemCategory.Tool || item.info.category == ItemCategory.Misc) && item.GetHeldEntity() is BaseMelee)
			{
				return true;
			}
			if (Value == ItemType.ProjectileWeapon && item.info.category == ItemCategory.Weapon && item.GetHeldEntity() is BaseProjectile)
			{
				return true;
			}
			if (Value == ItemType.ThrowableWeapon && item.info.category == ItemCategory.Weapon && item.GetHeldEntity() is ThrownWeapon)
			{
				return true;
			}
			if (Value == ItemType.LightSourceItem && item.info.category == ItemCategory.Tool)
			{
				return true;
			}
			if (Value == ItemType.ResearchItem && item.info.category == ItemCategory.Tool)
			{
				return true;
			}
		}
		return false;
	}
}
