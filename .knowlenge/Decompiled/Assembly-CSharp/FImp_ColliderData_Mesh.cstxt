using FIMSpace;
using UnityEngine;

public class FImp_ColliderData_Mesh : FImp_ColliderData_Base
{
	private ContactFilter2D filter;

	private RaycastHit2D[] r;

	public MeshCollider Mesh { get; private set; }

	public PolygonCollider2D Poly2D { get; private set; }

	public FImp_ColliderData_Mesh(MeshCollider collider)
	{
		Is2D = false;
		base.Transform = ((Component)collider).transform;
		base.Collider = (Collider)(object)collider;
		Mesh = collider;
		base.ColliderType = EFColliderType.Mesh;
	}

	public FImp_ColliderData_Mesh(PolygonCollider2D collider)
	{
		//IL_0034: Unknown result type (might be due to invalid IL or missing references)
		Is2D = true;
		base.Transform = ((Component)collider).transform;
		Poly2D = collider;
		base.Collider2D = (Collider2D)(object)collider;
		base.ColliderType = EFColliderType.Mesh;
		filter = default(ContactFilter2D);
		filter.useTriggers = false;
		filter.useDepth = false;
		r = (RaycastHit2D[])(object)new RaycastHit2D[1];
	}

	public override bool PushIfInside(ref Vector3 segmentPosition, float segmentRadius, Vector3 segmentOffset)
	{
		//IL_02bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_02c4: Unknown result type (might be due to invalid IL or missing references)
		//IL_02c5: Unknown result type (might be due to invalid IL or missing references)
		//IL_02ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_02cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_02d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_03b4: Unknown result type (might be due to invalid IL or missing references)
		//IL_03b6: Unknown result type (might be due to invalid IL or missing references)
		//IL_03bb: Unknown result type (might be due to invalid IL or missing references)
		//IL_02e9: Unknown result type (might be due to invalid IL or missing references)
		//IL_02ee: Unknown result type (might be due to invalid IL or missing references)
		//IL_02f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_02f7: Unknown result type (might be due to invalid IL or missing references)
		//IL_02f9: Unknown result type (might be due to invalid IL or missing references)
		//IL_02fe: Unknown result type (might be due to invalid IL or missing references)
		//IL_0303: Unknown result type (might be due to invalid IL or missing references)
		//IL_0319: Unknown result type (might be due to invalid IL or missing references)
		//IL_031e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0322: Unknown result type (might be due to invalid IL or missing references)
		//IL_0327: Unknown result type (might be due to invalid IL or missing references)
		//IL_032f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0334: Unknown result type (might be due to invalid IL or missing references)
		//IL_0338: Unknown result type (might be due to invalid IL or missing references)
		//IL_033d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0346: Unknown result type (might be due to invalid IL or missing references)
		//IL_034b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0350: Unknown result type (might be due to invalid IL or missing references)
		//IL_0364: Unknown result type (might be due to invalid IL or missing references)
		//IL_0369: Unknown result type (might be due to invalid IL or missing references)
		//IL_036d: Unknown result type (might be due to invalid IL or missing references)
		//IL_00dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e7: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ef: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f6: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f8: Unknown result type (might be due to invalid IL or missing references)
		//IL_0105: Unknown result type (might be due to invalid IL or missing references)
		//IL_010a: Unknown result type (might be due to invalid IL or missing references)
		//IL_010f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0124: Unknown result type (might be due to invalid IL or missing references)
		//IL_0126: Unknown result type (might be due to invalid IL or missing references)
		//IL_001c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0021: Unknown result type (might be due to invalid IL or missing references)
		//IL_0022: Unknown result type (might be due to invalid IL or missing references)
		//IL_0027: Unknown result type (might be due to invalid IL or missing references)
		//IL_002e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0040: Unknown result type (might be due to invalid IL or missing references)
		//IL_0050: Unknown result type (might be due to invalid IL or missing references)
		//IL_0055: Unknown result type (might be due to invalid IL or missing references)
		//IL_005a: Unknown result type (might be due to invalid IL or missing references)
		//IL_005b: Unknown result type (might be due to invalid IL or missing references)
		//IL_005c: Unknown result type (might be due to invalid IL or missing references)
		//IL_03bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_03bf: Unknown result type (might be due to invalid IL or missing references)
		//IL_03c1: Unknown result type (might be due to invalid IL or missing references)
		//IL_03c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_03ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_03cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_03d1: Unknown result type (might be due to invalid IL or missing references)
		//IL_03d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_03d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_03a3: Unknown result type (might be due to invalid IL or missing references)
		//IL_03a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_03aa: Unknown result type (might be due to invalid IL or missing references)
		//IL_038a: Unknown result type (might be due to invalid IL or missing references)
		//IL_038f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0394: Unknown result type (might be due to invalid IL or missing references)
		//IL_0399: Unknown result type (might be due to invalid IL or missing references)
		//IL_014b: Unknown result type (might be due to invalid IL or missing references)
		//IL_014d: Unknown result type (might be due to invalid IL or missing references)
		//IL_014f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0154: Unknown result type (might be due to invalid IL or missing references)
		//IL_0158: Unknown result type (might be due to invalid IL or missing references)
		//IL_015d: Unknown result type (might be due to invalid IL or missing references)
		//IL_015f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0161: Unknown result type (might be due to invalid IL or missing references)
		//IL_0170: Unknown result type (might be due to invalid IL or missing references)
		//IL_0175: Unknown result type (might be due to invalid IL or missing references)
		//IL_0179: Unknown result type (might be due to invalid IL or missing references)
		//IL_017e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0188: Unknown result type (might be due to invalid IL or missing references)
		//IL_018d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0192: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ac: Unknown result type (might be due to invalid IL or missing references)
		//IL_01b1: Unknown result type (might be due to invalid IL or missing references)
		//IL_01b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c6: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ca: Unknown result type (might be due to invalid IL or missing references)
		//IL_01cf: Unknown result type (might be due to invalid IL or missing references)
		//IL_0144: Unknown result type (might be due to invalid IL or missing references)
		//IL_0149: Unknown result type (might be due to invalid IL or missing references)
		//IL_006d: Unknown result type (might be due to invalid IL or missing references)
		//IL_006e: Unknown result type (might be due to invalid IL or missing references)
		//IL_006f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0074: Unknown result type (might be due to invalid IL or missing references)
		//IL_0075: Unknown result type (might be due to invalid IL or missing references)
		//IL_0076: Unknown result type (might be due to invalid IL or missing references)
		//IL_01e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_01e5: Unknown result type (might be due to invalid IL or missing references)
		//IL_01f2: Unknown result type (might be due to invalid IL or missing references)
		//IL_008a: Unknown result type (might be due to invalid IL or missing references)
		//IL_008d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0092: Unknown result type (might be due to invalid IL or missing references)
		//IL_0409: Unknown result type (might be due to invalid IL or missing references)
		//IL_0417: Unknown result type (might be due to invalid IL or missing references)
		//IL_041d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0422: Unknown result type (might be due to invalid IL or missing references)
		//IL_0427: Unknown result type (might be due to invalid IL or missing references)
		//IL_042c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0202: Unknown result type (might be due to invalid IL or missing references)
		//IL_0206: Unknown result type (might be due to invalid IL or missing references)
		//IL_020b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0210: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b6: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bd: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_00cd: Unknown result type (might be due to invalid IL or missing references)
		//IL_0224: Unknown result type (might be due to invalid IL or missing references)
		//IL_0229: Unknown result type (might be due to invalid IL or missing references)
		//IL_022b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0230: Unknown result type (might be due to invalid IL or missing references)
		//IL_024e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0252: Unknown result type (might be due to invalid IL or missing references)
		//IL_0258: Unknown result type (might be due to invalid IL or missing references)
		//IL_025d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0262: Unknown result type (might be due to invalid IL or missing references)
		//IL_0236: Unknown result type (might be due to invalid IL or missing references)
		//IL_023a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0240: Unknown result type (might be due to invalid IL or missing references)
		//IL_0245: Unknown result type (might be due to invalid IL or missing references)
		//IL_024a: Unknown result type (might be due to invalid IL or missing references)
		//IL_0266: Unknown result type (might be due to invalid IL or missing references)
		//IL_026b: Unknown result type (might be due to invalid IL or missing references)
		//IL_026d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0272: Unknown result type (might be due to invalid IL or missing references)
		//IL_0276: Unknown result type (might be due to invalid IL or missing references)
		//IL_027b: Unknown result type (might be due to invalid IL or missing references)
		//IL_02a9: Unknown result type (might be due to invalid IL or missing references)
		//IL_02ae: Unknown result type (might be due to invalid IL or missing references)
		//IL_02b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_02b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_0291: Unknown result type (might be due to invalid IL or missing references)
		//IL_0295: Unknown result type (might be due to invalid IL or missing references)
		//IL_029b: Unknown result type (might be due to invalid IL or missing references)
		//IL_02a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_02a5: Unknown result type (might be due to invalid IL or missing references)
		Vector3 val3;
		Bounds bounds;
		if (!Is2D)
		{
			if (!Mesh.convex)
			{
				float num = 0f;
				Vector3 val = segmentPosition + segmentOffset;
				Vector3 val2 = ((Collider)Mesh).ClosestPointOnBounds(val);
				val3 = val2 - ((Component)Mesh).transform.position;
				num = ((Vector3)(ref val3)).magnitude;
				bool flag = false;
				float num2 = 1f;
				if (val2 == val)
				{
					flag = true;
					num2 = 7f;
					val2 = ((Component)Mesh).transform.position;
				}
				Vector3 val4 = val2 - val;
				Vector3 normalized = ((Vector3)(ref val4)).normalized;
				float num3 = segmentRadius * 2f;
				bounds = ((Collider)Mesh).bounds;
				val3 = ((Bounds)(ref bounds)).extents;
				Vector3 val5 = val - normalized * (num3 + ((Vector3)(ref val3)).magnitude);
				float num4 = ((Vector3)(ref val4)).magnitude + segmentRadius * 2f + num;
				bounds = ((Collider)Mesh).bounds;
				val3 = ((Bounds)(ref bounds)).extents;
				float num5 = num4 + ((Vector3)(ref val3)).magnitude;
				val3 = val - val2;
				if (((Vector3)(ref val3)).magnitude < segmentRadius * num2)
				{
					Ray val6 = default(Ray);
					((Ray)(ref val6))..ctor(val5, normalized);
					RaycastHit val7 = default(RaycastHit);
					if (((Collider)Mesh).Raycast(val6, ref val7, num5))
					{
						val3 = val - ((RaycastHit)(ref val7)).point;
						if (((Vector3)(ref val3)).magnitude < segmentRadius * num2)
						{
							Vector3 val8 = ((RaycastHit)(ref val7)).point - val;
							Vector3 val9 = ((!flag) ? (val8 - ((Vector3)(ref val8)).normalized * segmentRadius) : (val8 + ((Vector3)(ref val8)).normalized * segmentRadius));
							val3 = ((RaycastHit)(ref val7)).point - val;
							float num6 = Vector3.Dot(((Vector3)(ref val3)).normalized, normalized);
							if (flag && num6 > 0f)
							{
								val9 = val8 - ((Vector3)(ref val8)).normalized * segmentRadius;
							}
							segmentPosition += val9;
							return true;
						}
					}
				}
				return false;
			}
			Vector3 val10 = segmentPosition + segmentOffset;
			float num7 = 1f;
			Vector3 val11 = Physics.ClosestPoint(val10, (Collider)(object)Mesh, ((Component)Mesh).transform.position, ((Component)Mesh).transform.rotation);
			if (Vector3.Distance(val11, val10) > segmentRadius * 1.01f)
			{
				return false;
			}
			Vector3 val12 = val11 - val10;
			if (val12 == Vector3.zero)
			{
				return false;
			}
			RaycastHit val13 = default(RaycastHit);
			((Collider)Mesh).Raycast(new Ray(val10, ((Vector3)(ref val12)).normalized), ref val13, segmentRadius * num7);
			if (Object.op_Implicit((Object)(object)((RaycastHit)(ref val13)).transform))
			{
				segmentPosition = ((RaycastHit)(ref val13)).point + ((RaycastHit)(ref val13)).normal * segmentRadius;
				return true;
			}
		}
		else
		{
			Vector2 val14 = Vector2.op_Implicit(segmentPosition + segmentOffset);
			Vector2 val18;
			if (((Collider2D)Poly2D).OverlapPoint(val14))
			{
				bounds = ((Collider2D)Poly2D).bounds;
				Vector3 val15 = ((Bounds)(ref bounds)).center - Vector2.op_Implicit(val14);
				val15.z = 0f;
				bounds = ((Collider2D)Poly2D).bounds;
				Vector3 center = ((Bounds)(ref bounds)).center;
				Vector3 val16 = val15;
				bounds = ((Collider2D)Poly2D).bounds;
				val3 = ((Bounds)(ref bounds)).max;
				Ray val17 = default(Ray);
				((Ray)(ref val17))..ctor(center - val16 * ((Vector3)(ref val3)).magnitude, val15);
				float num8 = 0f;
				bounds = ((Collider2D)Poly2D).bounds;
				((Bounds)(ref bounds)).IntersectRay(val17, ref num8);
				val18 = ((!(num8 > 0f)) ? ((Collider2D)Poly2D).ClosestPoint(val14) : ((Collider2D)Poly2D).ClosestPoint(Vector2.op_Implicit(((Ray)(ref val17)).GetPoint(num8))));
			}
			else
			{
				val18 = ((Collider2D)Poly2D).ClosestPoint(val14);
			}
			Vector2 val19 = val18 - val14;
			Vector2 normalized2 = ((Vector2)(ref val19)).normalized;
			if (Physics2D.Raycast(val14, normalized2, filter, r, segmentRadius) > 0 && (Object)(object)((RaycastHit2D)(ref r[0])).transform == (Object)(object)base.Transform)
			{
				segmentPosition = Vector2.op_Implicit(val18 + ((RaycastHit2D)(ref r[0])).normal * segmentRadius);
				return true;
			}
		}
		return false;
	}

	public static void PushOutFromMeshCollider(MeshCollider mesh, Collision collision, float segmentColliderRadius, ref Vector3 pos)
	{
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0011: Unknown result type (might be due to invalid IL or missing references)
		//IL_001e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0023: Unknown result type (might be due to invalid IL or missing references)
		//IL_0026: Unknown result type (might be due to invalid IL or missing references)
		//IL_002b: Unknown result type (might be due to invalid IL or missing references)
		//IL_002d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0037: Unknown result type (might be due to invalid IL or missing references)
		//IL_003c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0041: Unknown result type (might be due to invalid IL or missing references)
		//IL_0042: Unknown result type (might be due to invalid IL or missing references)
		//IL_0047: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b2: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b7: Unknown result type (might be due to invalid IL or missing references)
		//IL_00bc: Unknown result type (might be due to invalid IL or missing references)
		//IL_005e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0064: Unknown result type (might be due to invalid IL or missing references)
		//IL_0069: Unknown result type (might be due to invalid IL or missing references)
		//IL_006e: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d7: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d8: Unknown result type (might be due to invalid IL or missing references)
		//IL_00e2: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ec: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00f6: Unknown result type (might be due to invalid IL or missing references)
		//IL_0088: Unknown result type (might be due to invalid IL or missing references)
		//IL_008d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0096: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a5: Unknown result type (might be due to invalid IL or missing references)
		//IL_00aa: Unknown result type (might be due to invalid IL or missing references)
		Vector3 point = ((ContactPoint)(ref collision.contacts[0])).point;
		Vector3 val = ((ContactPoint)(ref collision.contacts[0])).normal;
		RaycastHit val2 = default(RaycastHit);
		if (((Collider)mesh).Raycast(new Ray(pos + val * segmentColliderRadius * 2f, -val), ref val2, segmentColliderRadius * 5f))
		{
			val = ((RaycastHit)(ref val2)).point - pos;
			float sqrMagnitude = ((Vector3)(ref val)).sqrMagnitude;
			if (sqrMagnitude > 0f && sqrMagnitude < segmentColliderRadius * segmentColliderRadius)
			{
				pos = ((RaycastHit)(ref val2)).point - val * (segmentColliderRadius / Mathf.Sqrt(sqrMagnitude)) * 0.9f;
			}
		}
		else
		{
			val = point - pos;
			float sqrMagnitude2 = ((Vector3)(ref val)).sqrMagnitude;
			if (sqrMagnitude2 > 0f && sqrMagnitude2 < segmentColliderRadius * segmentColliderRadius)
			{
				pos = point - val * (segmentColliderRadius / Mathf.Sqrt(sqrMagnitude2)) * 0.9f;
			}
		}
	}

	public static void PushOutFromMesh(MeshCollider mesh, Collision collision, float pointRadius, ref Vector3 point)
	{
		//IL_0008: Unknown result type (might be due to invalid IL or missing references)
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0012: Unknown result type (might be due to invalid IL or missing references)
		//IL_0013: Unknown result type (might be due to invalid IL or missing references)
		//IL_001a: Unknown result type (might be due to invalid IL or missing references)
		//IL_001f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0024: Unknown result type (might be due to invalid IL or missing references)
		//IL_0036: Unknown result type (might be due to invalid IL or missing references)
		//IL_0038: Unknown result type (might be due to invalid IL or missing references)
		//IL_0058: Unknown result type (might be due to invalid IL or missing references)
		//IL_005a: Unknown result type (might be due to invalid IL or missing references)
		//IL_005f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0064: Unknown result type (might be due to invalid IL or missing references)
		//IL_0068: Unknown result type (might be due to invalid IL or missing references)
		//IL_006d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0070: Unknown result type (might be due to invalid IL or missing references)
		//IL_0075: Unknown result type (might be due to invalid IL or missing references)
		//IL_007f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0084: Unknown result type (might be due to invalid IL or missing references)
		//IL_0088: Unknown result type (might be due to invalid IL or missing references)
		//IL_008d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0097: Unknown result type (might be due to invalid IL or missing references)
		//IL_009c: Unknown result type (might be due to invalid IL or missing references)
		//IL_00a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_00b5: Unknown result type (might be due to invalid IL or missing references)
		//IL_00ba: Unknown result type (might be due to invalid IL or missing references)
		//IL_00be: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c3: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d0: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d5: Unknown result type (might be due to invalid IL or missing references)
		//IL_00d6: Unknown result type (might be due to invalid IL or missing references)
		//IL_00db: Unknown result type (might be due to invalid IL or missing references)
		//IL_0052: Unknown result type (might be due to invalid IL or missing references)
		//IL_0057: Unknown result type (might be due to invalid IL or missing references)
		//IL_0106: Unknown result type (might be due to invalid IL or missing references)
		//IL_0108: Unknown result type (might be due to invalid IL or missing references)
		//IL_0110: Unknown result type (might be due to invalid IL or missing references)
		//IL_00fb: Unknown result type (might be due to invalid IL or missing references)
		//IL_0100: Unknown result type (might be due to invalid IL or missing references)
		//IL_0134: Unknown result type (might be due to invalid IL or missing references)
		//IL_0139: Unknown result type (might be due to invalid IL or missing references)
		//IL_011f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0124: Unknown result type (might be due to invalid IL or missing references)
		//IL_013c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0141: Unknown result type (might be due to invalid IL or missing references)
		//IL_0143: Unknown result type (might be due to invalid IL or missing references)
		//IL_0148: Unknown result type (might be due to invalid IL or missing references)
		//IL_0159: Unknown result type (might be due to invalid IL or missing references)
		//IL_015c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0161: Unknown result type (might be due to invalid IL or missing references)
		//IL_0166: Unknown result type (might be due to invalid IL or missing references)
		//IL_0183: Unknown result type (might be due to invalid IL or missing references)
		//IL_0187: Unknown result type (might be due to invalid IL or missing references)
		//IL_018d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0192: Unknown result type (might be due to invalid IL or missing references)
		//IL_0197: Unknown result type (might be due to invalid IL or missing references)
		//IL_016b: Unknown result type (might be due to invalid IL or missing references)
		//IL_016f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0175: Unknown result type (might be due to invalid IL or missing references)
		//IL_017a: Unknown result type (might be due to invalid IL or missing references)
		//IL_017f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0199: Unknown result type (might be due to invalid IL or missing references)
		//IL_019c: Unknown result type (might be due to invalid IL or missing references)
		//IL_01a1: Unknown result type (might be due to invalid IL or missing references)
		//IL_01a6: Unknown result type (might be due to invalid IL or missing references)
		//IL_01aa: Unknown result type (might be due to invalid IL or missing references)
		//IL_01af: Unknown result type (might be due to invalid IL or missing references)
		//IL_01dc: Unknown result type (might be due to invalid IL or missing references)
		//IL_01e1: Unknown result type (might be due to invalid IL or missing references)
		//IL_01e3: Unknown result type (might be due to invalid IL or missing references)
		//IL_01e8: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c4: Unknown result type (might be due to invalid IL or missing references)
		//IL_01c8: Unknown result type (might be due to invalid IL or missing references)
		//IL_01ce: Unknown result type (might be due to invalid IL or missing references)
		//IL_01d3: Unknown result type (might be due to invalid IL or missing references)
		//IL_01d8: Unknown result type (might be due to invalid IL or missing references)
		float num = 0f;
		Vector3 val = ((Collider)mesh).ClosestPointOnBounds(point);
		Vector3 val2 = val - ((Component)mesh).transform.position;
		num = ((Vector3)(ref val2)).magnitude;
		bool flag = false;
		float num2 = 1f;
		if (val == point)
		{
			flag = true;
			num2 = 7f;
			val = ((Component)mesh).transform.position;
		}
		Vector3 val3 = val - point;
		Vector3 normalized = ((Vector3)(ref val3)).normalized;
		Vector3 val4 = point;
		float num3 = pointRadius * 2f;
		Bounds bounds = ((Collider)mesh).bounds;
		val2 = ((Bounds)(ref bounds)).extents;
		Vector3 val5 = val4 - normalized * (num3 + ((Vector3)(ref val2)).magnitude);
		float num4 = ((Vector3)(ref val3)).magnitude + pointRadius * 2f + num;
		bounds = ((Collider)mesh).bounds;
		val2 = ((Bounds)(ref bounds)).extents;
		float num5 = num4 + ((Vector3)(ref val2)).magnitude;
		val2 = point - val;
		if (!(((Vector3)(ref val2)).magnitude < pointRadius * num2))
		{
			return;
		}
		Vector3 val6;
		if (!flag)
		{
			val6 = ((ContactPoint)(ref collision.contacts[0])).point;
		}
		else
		{
			Ray val7 = default(Ray);
			((Ray)(ref val7))..ctor(val5, normalized);
			RaycastHit val8 = default(RaycastHit);
			val6 = ((!((Collider)mesh).Raycast(val7, ref val8, num5)) ? ((ContactPoint)(ref collision.contacts[0])).point : ((RaycastHit)(ref val8)).point);
		}
		val2 = point - val6;
		if (((Vector3)(ref val2)).magnitude < pointRadius * num2)
		{
			Vector3 val9 = val6 - point;
			Vector3 val10 = ((!flag) ? (val9 - ((Vector3)(ref val9)).normalized * pointRadius) : (val9 + ((Vector3)(ref val9)).normalized * pointRadius));
			val2 = val6 - point;
			float num6 = Vector3.Dot(((Vector3)(ref val2)).normalized, normalized);
			if (flag && num6 > 0f)
			{
				val10 = val9 - ((Vector3)(ref val9)).normalized * pointRadius;
			}
			point += val10;
		}
	}
}
