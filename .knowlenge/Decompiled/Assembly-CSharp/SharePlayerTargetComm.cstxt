using Apex.AI;
using Rust.Ai;

public class SharePlayerTargetComm : ActionBase<PlayerTargetContext>
{
	public override void Execute(PlayerTargetContext c)
	{
		NPCPlayerApex nPCPlayerApex = c.Self as NPCPlayerApex;
		if (!(nPCPlayerApex != null) || nPCPlayerApex.AskQuestion(default(AiQuestion_ShareEnemyTarget), out var answers) <= 0)
		{
			return;
		}
		foreach (AiAnswer_ShareEnemyTarget item in answers)
		{
			if (item.PlayerTarget != null && item.LastKnownPosition.HasValue && nPCPlayerApex.HostilityConsideration(item.PlayerTarget))
			{
				c.Target = item.PlayerTarget;
				c.Score = 1f;
				c.LastKnownPosition = item.LastKnownPosition.Value;
				nPCPlayerApex.UpdateTargetMemory(c.Target, c.Score, c.LastKnownPosition, out var _);
				break;
			}
		}
	}
}
