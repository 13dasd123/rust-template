using Apex.Ai.HTN;
using Apex.Serialization;

public class AStarWorldStateIncrementEffect : EffectBase<ScientistAStarContext>
{
	[ApexSerialization]
	public Facts Fact;

	[ApexSerialization]
	public byte Value;

	public override void Apply(ScientistAStarContext context, bool fromPlanner, bool temporary)
	{
		if (fromPlanner)
		{
			byte b = context.PeekFactChangeDuringPlanning(Fact);
			context.PushFactChangeDuringPlanning(Fact, b + Value, temporary);
		}
		else
		{
			context.SetFact(Fact, context.GetFact(Fact) + Value);
		}
	}

	public override void Reverse(ScientistAStarContext context, bool fromPlanner)
	{
		if (fromPlanner)
		{
			context.PopFactChangeDuringPlanning(Fact);
		}
		else
		{
			context.WorldState[(uint)Fact] = context.PreviousWorldState[(uint)Fact];
		}
	}
}
