using UnityEngine;

public class ConstructVision : TriggerBase
{
	internal override GameObject InterestedInObject(GameObject obj)
	{
		obj = base.InterestedInObject(obj);
		if (obj == null)
		{
			return null;
		}
		BaseEntity baseEntity = GameObjectEx.ToBaseEntity(obj);
		if (!baseEntity)
		{
			return null;
		}
		if (baseEntity.isServer)
		{
			return null;
		}
		return baseEntity.gameObject;
	}

	internal override void OnObjectAdded(GameObject obj)
	{
		base.OnObjectAdded(obj);
		if (obj != null)
		{
			obj.SendMessage("OnPlayerVisionStart", SendMessageOptions.DontRequireReceiver);
		}
	}

	internal override void OnObjectRemoved(GameObject obj)
	{
		base.OnObjectRemoved(obj);
		if (obj != null)
		{
			obj.SendMessage("OnPlayerVisionEnd", SendMessageOptions.DontRequireReceiver);
		}
	}
}
