using UnityEngine;

public class ShaderParameters<T>
{
	public string Name;

	public T Arid;

	public T Temperate;

	public T Tundra;

	public T Arctic;

	private T[] climates;

	public float FindBlendParameters(Vector3 pos, out T src, out T dst)
	{
		if (TerrainMeta.BiomeMap == null)
		{
			src = Temperate;
			dst = Tundra;
			return 0f;
		}
		if (climates == null || climates.Length == 0)
		{
			climates = new T[4] { Arid, Temperate, Tundra, Arctic };
		}
		int biomeMaxType = TerrainMeta.BiomeMap.GetBiomeMaxType(pos);
		int biomeMaxType2 = TerrainMeta.BiomeMap.GetBiomeMaxType(pos, ~biomeMaxType);
		src = climates[TerrainBiome.TypeToIndex(biomeMaxType)];
		dst = climates[TerrainBiome.TypeToIndex(biomeMaxType2)];
		return TerrainMeta.BiomeMap.GetBiome(pos, biomeMaxType2);
	}

	public T FindBlendParameters(Vector3 pos)
	{
		if (TerrainMeta.BiomeMap == null)
		{
			return Temperate;
		}
		if (climates == null || climates.Length == 0)
		{
			climates = new T[4] { Arid, Temperate, Tundra, Arctic };
		}
		int biomeMaxType = TerrainMeta.BiomeMap.GetBiomeMaxType(pos);
		return climates[TerrainBiome.TypeToIndex(biomeMaxType)];
	}
}
