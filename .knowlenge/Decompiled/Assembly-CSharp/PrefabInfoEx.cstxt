using UnityEngine;

public static class PrefabInfoEx
{
	public static bool SupportsPooling(this GameObject gameObject)
	{
		PrefabInfo component = gameObject.GetComponent<PrefabInfo>();
		return component != null;
	}

	public static void EnablePooling(this GameObject gameObject, uint prefabID)
	{
		if (!SupportsPooling(gameObject))
		{
			Behaviour[] componentsInChildren = gameObject.GetComponentsInChildren<Behaviour>(includeInactive: true);
			Rigidbody[] componentsInChildren2 = gameObject.GetComponentsInChildren<Rigidbody>(includeInactive: true);
			Collider[] componentsInChildren3 = gameObject.GetComponentsInChildren<Collider>(includeInactive: true);
			LODGroup[] componentsInChildren4 = gameObject.GetComponentsInChildren<LODGroup>(includeInactive: true);
			Renderer[] componentsInChildren5 = gameObject.GetComponentsInChildren<Renderer>(includeInactive: true);
			ParticleSystem[] componentsInChildren6 = gameObject.GetComponentsInChildren<ParticleSystem>(includeInactive: true);
			PrefabInfo prefabInfo = gameObject.AddComponent<PrefabInfo>();
			prefabInfo.prefabID = prefabID;
			prefabInfo.behaviours = componentsInChildren;
			prefabInfo.rigidbodies = componentsInChildren2;
			prefabInfo.colliders = componentsInChildren3;
			prefabInfo.lodgroups = componentsInChildren4;
			prefabInfo.renderers = componentsInChildren5;
			prefabInfo.particles = componentsInChildren6;
			prefabInfo.Initialize();
		}
	}

	public static void AwakeFromInstantiate(this GameObject gameObject)
	{
		if (gameObject.activeSelf)
		{
			PrefabInfo component = gameObject.GetComponent<PrefabInfo>();
			component.SetBehaviourEnabled(state: true);
		}
		else
		{
			gameObject.SetActive(value: true);
		}
	}
}
