using Rust.Ai.HTN;
using Rust.Ai.HTN.Bear;
using Rust.Ai.HTN.Reasoning;

public class PreferredFightingRangeReasoner : INpcReasoner
{
	public float TickFrequency { get; set; }

	public float LastTickTime { get; set; }

	public void Tick(IHTNAgent npc, float deltaTime, float time)
	{
		if (!(npc.AiDomain.NpcContext is BearContext bearContext))
		{
			return;
		}
		NpcPlayerInfo target = bearContext.GetPrimaryEnemyPlayerTarget();
		if (target.Player != null)
		{
			if (IsAtPreferredRange(bearContext, ref target))
			{
				bearContext.SetFact(Facts.AtLocationPreferredFightingRange, 1);
			}
			else
			{
				bearContext.SetFact(Facts.AtLocationPreferredFightingRange, 0);
			}
		}
	}

	public static bool IsAtPreferredRange(BearContext context, ref NpcPlayerInfo target)
	{
		return target.SqrDistance <= context.Body.AiDefinition.Engagement.SqrCloseRange;
	}
}
