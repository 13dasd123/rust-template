using System.Collections.Generic;
using Facepunch;

public static class EntityLinkEx
{
	public static void FreeLinks(this List<EntityLink> links)
	{
		for (int i = 0; i < links.Count; i++)
		{
			EntityLink entityLink = links[i];
			entityLink.Clear();
			if (entityLink is ConstructionLink)
			{
				ConstructionLink obj = entityLink as ConstructionLink;
				Pool.Free(ref obj);
			}
			if (entityLink is StabilityLink)
			{
				StabilityLink obj2 = entityLink as StabilityLink;
				Pool.Free(ref obj2);
			}
			if (entityLink is NeighbourLink)
			{
				NeighbourLink obj3 = entityLink as NeighbourLink;
				Pool.Free(ref obj3);
			}
		}
		links.Clear();
	}

	public static void ClearLinks(this List<EntityLink> links)
	{
		for (int i = 0; i < links.Count; i++)
		{
			links[i].Clear();
		}
	}

	public static void AddLinks(this List<EntityLink> links, BaseEntity entity, Socket_Base[] sockets)
	{
		foreach (Socket_Base socket_Base in sockets)
		{
			if (socket_Base is ConstructionSocket)
			{
				ConstructionLink constructionLink = Pool.Get<ConstructionLink>();
				constructionLink.Setup(entity, socket_Base as ConstructionSocket);
				links.Add(constructionLink);
			}
			if (socket_Base is StabilitySocket)
			{
				StabilityLink stabilityLink = Pool.Get<StabilityLink>();
				stabilityLink.Setup(entity, socket_Base as StabilitySocket);
				links.Add(stabilityLink);
			}
			if (socket_Base is NeighbourSocket)
			{
				NeighbourLink neighbourLink = Pool.Get<NeighbourLink>();
				neighbourLink.Setup(entity, socket_Base as NeighbourSocket);
				links.Add(neighbourLink);
			}
		}
	}
}
