using Apex.Serialization;
using Rust.Ai;
using UnityEngine;

public sealed class ReloadWeaponNeed : BaseScorer
{
	[ApexSerialization]
	private AnimationCurve ResponseCurve = AnimationCurve.EaseInOut(0f, 1f, 1f, 0f);

	[ApexSerialization]
	private bool UseResponseCurve = true;

	public override float GetScore(BaseContext c)
	{
		BasePlayer basePlayer = c.AIAgent as BasePlayer;
		if (basePlayer != null)
		{
			HeldEntity heldEntity = basePlayer.GetHeldEntity();
			AttackEntity attackEntity = heldEntity as AttackEntity;
			if (attackEntity != null)
			{
				BaseProjectile baseProjectile = attackEntity as BaseProjectile;
				if ((bool)baseProjectile)
				{
					float num = (float)baseProjectile.primaryMagazine.contents / (float)baseProjectile.primaryMagazine.capacity;
					return (!UseResponseCurve) ? num : ResponseCurve.Evaluate(num);
				}
			}
		}
		return 0f;
	}
}
