using System;
using UnityEngine;

public class DirectionProperties : PrefabAttribute
{
	private const float radius = 200f;

	public Bounds bounds = new Bounds(Vector3.zero, Vector3.zero);

	public ProtectionProperties extraProtection;

	protected override Type GetIndexedType()
	{
		return typeof(DirectionProperties);
	}

	private void OnDrawGizmosSelected()
	{
		Gizmos.color = Color.yellow;
		Gizmos.matrix = base.transform.localToWorldMatrix;
		GizmosUtil.DrawSemiCircle(200f);
		Gizmos.DrawWireCube(bounds.center, bounds.size);
	}

	public bool IsWeakspot(Transform tx, HitInfo info)
	{
		if (bounds.size == Vector3.zero)
		{
			return false;
		}
		Vector3 b = tx.worldToLocalMatrix.MultiplyPoint3x4(info.PointStart);
		float num = worldForward.DotDegrees(b);
		OBB oBB = new OBB(tx.position + tx.rotation * (worldRotation * bounds.center + worldPosition), bounds.size, tx.rotation * worldRotation);
		return num > 100f && oBB.Contains(info.HitPositionWorld);
	}
}
