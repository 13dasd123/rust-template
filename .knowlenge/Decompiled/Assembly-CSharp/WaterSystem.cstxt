using System;
using UnityEngine;

[ExecuteInEditMode]
public class WaterSystem : MonoBehaviour
{
	[Serializable]
	public class SimulationSettings
	{
		public Vector3 Wind = new Vector3(3f, 0f, 3f);

		public int SolverResolution = 64;

		public float SolverSizeInWorld = 18f;

		public float Gravity = 9.81f;

		public float Amplitude = 0.0001f;

		public TextAsset PerlinNoiseData;
	}

	[Serializable]
	public class RenderingSettings
	{
		[Serializable]
		public class SkyProbe
		{
			public float ProbeUpdateInterval = 1f;

			public bool TimeSlicing = true;
		}

		[Serializable]
		public class SSR
		{
			public float FresnelCutoff = 0.02f;

			public float ThicknessMin = 1f;

			public float ThicknessMax = 20f;

			public float ThicknessStartDist = 40f;

			public float ThicknessEndDist = 100f;
		}

		[Serializable]
		public class Caustics
		{
			public float FrameRate = 15f;

			public Texture2D[] FramesShallow = new Texture2D[0];

			public Texture2D[] FramesDeep = new Texture2D[0];
		}

		public float MaxDisplacementDistance = 50f;

		public SkyProbe SkyReflections;

		public SSR ScreenSpaceReflections;

		public Caustics CausticsAnimation;
	}

	public WaterQuality Quality = WaterQuality.High;

	public bool showDebug;

	public bool showGizmos;

	public SimulationSettings Simulation = new SimulationSettings();

	public RenderingSettings Rendering = new RenderingSettings();

	private static WaterSystem instance;

	public static WaterCollision Collision { get; private set; }

	public bool IsInitialized { get; private set; }

	public static WaterSystem Instance => instance;

	private void CheckInstance()
	{
		instance = ((!(instance != null)) ? this : instance);
	}

	private void Awake()
	{
		CheckInstance();
		Collision = GetComponent<WaterCollision>();
	}
}
