using Rust.Ai;
using UnityEngine;

public class TacticalCoverPointSet
{
	public TacticalCoverPoint Retreat;

	public TacticalCoverPoint Flank;

	public TacticalCoverPoint Advance;

	public TacticalCoverPoint Closest;

	public void Setup(NPCPlayerApex human)
	{
		Retreat.Human = human;
		Flank.Human = human;
		Advance.Human = human;
		Closest.Human = human;
	}

	public void Shutdown()
	{
		Reset();
	}

	public void Reset()
	{
		if (Retreat.ReservedCoverPoint != null)
		{
			Retreat.ReservedCoverPoint = null;
		}
		if (Flank.ReservedCoverPoint != null)
		{
			Flank.ReservedCoverPoint = null;
		}
		if (Advance.ReservedCoverPoint != null)
		{
			Advance.ReservedCoverPoint = null;
		}
		if (Closest.ReservedCoverPoint != null)
		{
			Closest.ReservedCoverPoint = null;
		}
	}

	public void Update(CoverPoint retreat, CoverPoint flank, CoverPoint advance)
	{
		Retreat.ReservedCoverPoint = retreat;
		Flank.ReservedCoverPoint = flank;
		Advance.ReservedCoverPoint = advance;
		float num = float.MaxValue;
		if (retreat != null)
		{
			float num2 = Vector3.Distance(retreat.Position, Retreat.Human.ServerPosition);
			if (num2 < num)
			{
				Closest.ReservedCoverPoint = retreat;
				num = num2;
			}
		}
		if (flank != null)
		{
			float num3 = Vector3.Distance(flank.Position, Flank.Human.ServerPosition);
			if (num3 < num)
			{
				Closest.ReservedCoverPoint = flank;
				num = num3;
			}
		}
		if (advance != null)
		{
			float num4 = Vector3.Distance(advance.Position, Advance.Human.ServerPosition);
			if (num4 < num)
			{
				Closest.ReservedCoverPoint = advance;
				num = num4;
			}
		}
	}
}
