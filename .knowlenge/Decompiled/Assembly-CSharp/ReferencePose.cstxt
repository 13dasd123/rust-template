using System;
using System.Collections.Generic;
using UnityEngine;

[Serializable]
public class ReferencePose
{
	[Serializable]
	public class LegPoseReference
	{
		public BonePoseReference UpperLegPose = new BonePoseReference();

		public BonePoseReference LowerLegPose = new BonePoseReference();

		public BonePoseReference AnklePose = new BonePoseReference();

		public BonePoseReference FeetPose = new BonePoseReference();

		public void SaveLegPose(Leg leg, LegsAnimator animator)
		{
			UpperLegPose.SavePose(leg.BoneStart, animator);
			LowerLegPose.SavePose(leg.BoneMid, animator);
			AnklePose.SavePose(leg.BoneEnd, animator);
			FeetPose.SavePose(leg.BoneFeet, animator);
		}

		public void RestoreLegPose(LegsAnimator animator)
		{
			UpperLegPose.RestorePose(animator);
			LowerLegPose.RestorePose(animator);
			AnklePose.RestorePose(animator);
			FeetPose.RestorePose(animator);
		}
	}

	[Serializable]
	public class BonePoseReference
	{
		public Transform SourceTransform;

		public Quaternion RotationInRoot;

		public Vector3 PositionInRoot;

		public void SavePose(Transform transform, LegsAnimator animator)
		{
			//IL_0023: Unknown result type (might be due to invalid IL or missing references)
			//IL_0028: Unknown result type (might be due to invalid IL or missing references)
			//IL_002d: Unknown result type (might be due to invalid IL or missing references)
			//IL_0039: Unknown result type (might be due to invalid IL or missing references)
			//IL_003f: Unknown result type (might be due to invalid IL or missing references)
			//IL_0044: Unknown result type (might be due to invalid IL or missing references)
			//IL_0049: Unknown result type (might be due to invalid IL or missing references)
			if (!((Object)(object)animator == (Object)null) && !((Object)(object)transform == (Object)null))
			{
				SourceTransform = transform;
				PositionInRoot = animator.BaseTransform.InverseTransformPoint(transform.position);
				RotationInRoot = animator.BaseTransform.rotation.QToLocal(transform.rotation);
			}
		}

		public void RestorePose(LegsAnimator animator)
		{
			//IL_0026: Unknown result type (might be due to invalid IL or missing references)
			//IL_002b: Unknown result type (might be due to invalid IL or missing references)
			//IL_0041: Unknown result type (might be due to invalid IL or missing references)
			//IL_0047: Unknown result type (might be due to invalid IL or missing references)
			//IL_004c: Unknown result type (might be due to invalid IL or missing references)
			if (!((Object)(object)animator == (Object)null) && !((Object)(object)SourceTransform == (Object)null))
			{
				SourceTransform.position = animator.BaseTransform.TransformPoint(PositionInRoot);
				SourceTransform.rotation = animator.BaseTransform.rotation.QToWorld(RotationInRoot);
			}
		}
	}

	public BonePoseReference MainHipsPose = new BonePoseReference();

	public List<BonePoseReference> HipsPoses = new List<BonePoseReference>();

	public List<LegPoseReference> LegPoses = new List<LegPoseReference>();

	public bool IsSet(LegsAnimator animator)
	{
		if ((Object)(object)MainHipsPose.SourceTransform != (Object)null && HipsPoses.Count == animator.ExtraHipsHubs.Count)
		{
			return LegPoses.Count == animator.Legs.Count;
		}
		return false;
	}

	public void TweakListsFor(LegsAnimator animator)
	{
		while (HipsPoses.Count > animator.ExtraHipsHubs.Count)
		{
			HipsPoses.RemoveAt(HipsPoses.Count - 1);
		}
		while (HipsPoses.Count < animator.ExtraHipsHubs.Count)
		{
			HipsPoses.Add(new BonePoseReference());
		}
		while (LegPoses.Count > animator.Legs.Count)
		{
			LegPoses.RemoveAt(LegPoses.Count - 1);
		}
		while (LegPoses.Count < animator.Legs.Count)
		{
			LegPoses.Add(new LegPoseReference());
		}
	}

	public void Clear()
	{
		MainHipsPose.SourceTransform = null;
		HipsPoses.Clear();
		LegPoses.Clear();
	}
}
