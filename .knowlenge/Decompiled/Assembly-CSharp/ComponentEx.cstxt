using Facepunch;
using UnityEngine;

public static class ComponentEx
{
	public static T Instantiate<T>(this T component) where T : Component
	{
		return Instantiate.GameObject(((Component)component).gameObject, (Transform)null).GetComponent<T>();
	}

	public static bool HasComponent<T>(this Component component) where T : Component
	{
		return (Object)(object)component.GetComponent<T>() != (Object)null;
	}

	public static bool? IsEnabled(this Component component)
	{
		//IL_004d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0052: Unknown result type (might be due to invalid IL or missing references)
		Behaviour val = (Behaviour)(object)((component is Behaviour) ? component : null);
		if (val != null)
		{
			return val.enabled;
		}
		Collider val2 = (Collider)(object)((component is Collider) ? component : null);
		if (val2 != null)
		{
			return val2.enabled;
		}
		Renderer val3 = (Renderer)(object)((component is Renderer) ? component : null);
		if (val3 != null)
		{
			return val3.enabled;
		}
		ParticleSystem val4 = (ParticleSystem)(object)((component is ParticleSystem) ? component : null);
		if (val4 != null)
		{
			EmissionModule emission = val4.emission;
			return ((EmissionModule)(ref emission)).enabled;
		}
		LODGroup val5 = (LODGroup)(object)((component is LODGroup) ? component : null);
		if (val5 != null)
		{
			return val5.enabled;
		}
		return null;
	}
}
