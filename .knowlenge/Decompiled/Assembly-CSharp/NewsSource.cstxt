using System.Collections;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using Facepunch.Extend;
using Facepunch.Math;
using JSON;
using UnityEngine;
using UnityEngine.UI;

public class NewsSource : MonoBehaviour
{
	public struct Story
	{
		public string name;

		public string url;

		public int date;

		public string text;

		public string author;

		public Texture texture;
	}

	public Story[] story;

	public Text title;

	public Text date;

	public Text text;

	public Text authorName;

	public RawImage image;

	public VerticalLayoutGroup layoutGroup;

	public Button button;

	private void OnEnable()
	{
		StartCoroutine(UpdateNews());
	}

	public void SetStory(int i)
	{
		if (story == null || story.Length <= i)
		{
			return;
		}
		StopAllCoroutines();
		title.text = story[i].name;
		date.text = NumberExtensions.FormatSecondsLong(Epoch.Current - story[i].date);
		string text = Regex.Replace(story[i].text, "\\[img\\].*\\[\\/img\\]", string.Empty, RegexOptions.IgnoreCase);
		text = text.Replace("\\n", "\n").Replace("\\r", string.Empty).Replace("\\\"", "\"");
		text = text.Replace("[list]", "<color=#F7EBE1aa>");
		text = text.Replace("[/list]", "</color>");
		text = text.Replace("[*]", "\t\tÂ» ");
		text = Regex.Replace(text, "\\[(.*?)\\]", string.Empty, RegexOptions.IgnoreCase);
		text = text.Trim();
		Match match = Regex.Match(story[i].text, "url=(http|https):\\/\\/([\\w\\-_]+(?:(?:\\.[\\w\\-_]+)+))([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])");
		Match match2 = Regex.Match(story[i].text, "(http|https):\\/\\/([\\w\\-_]+(?:(?:\\.[\\w\\-_]+)+))([\\w\\-\\.,@?^=%&amp;:/~\\+#]*[\\w\\-\\@?^=%&amp;/~\\+#])(.png|.jpg)");
		if (match != null)
		{
			string url = match.Value.Replace("url=", string.Empty);
			if (url == null || url.Trim().Length <= 0)
			{
				url = story[i].url;
			}
			button.gameObject.SetActive(value: true);
			button.onClick.RemoveAllListeners();
			button.onClick.AddListener(delegate
			{
				Debug.Log("Opening URL: " + url);
				Application.OpenURL(url);
			});
		}
		else
		{
			button.gameObject.SetActive(value: false);
		}
		this.text.text = text;
		authorName.text = $"posted by {story[i].author}";
		if (image != null)
		{
			if ((bool)story[i].texture)
			{
				SetHeadlineTexture(story[i].texture);
			}
			else if (match2 != null)
			{
				StartCoroutine(LoadHeaderImage(match2.Value, i));
			}
		}
	}

	private void SetHeadlineTexture(Texture tex)
	{
		float num = (float)tex.height / (float)tex.width;
		image.texture = tex;
		image.rectTransform.sizeDelta = new Vector2(0f, image.rectTransform.rect.width * num);
		image.enabled = true;
		RectOffset padding = layoutGroup.padding;
		padding.top = (int)(image.rectTransform.rect.width * num) / 2;
		layoutGroup.padding = padding;
	}

	private IEnumerator LoadHeaderImage(string url, int i)
	{
		image.enabled = false;
		WWW www = new WWW(url);
		yield return www;
		if (!string.IsNullOrEmpty(www.error))
		{
			Debug.LogWarning("Couldn't load header image: " + www.error);
			www.Dispose();
			yield break;
		}
		Texture2D tex = www.textureNonReadable;
		tex.name = url;
		story[i].texture = tex;
		SetHeadlineTexture(story[i].texture);
		www.Dispose();
	}

	private IEnumerator UpdateNews()
	{
		WWW www = new WWW("http://api.steampowered.com/ISteamNews/GetNewsForApp/v0002/?appid=252490&count=8&format=json&feeds=steam_community_announcements");
		yield return www;
		JSON.Object json = JSON.Object.Parse(www.text);
		www.Dispose();
		if (json == null)
		{
			yield break;
		}
		Array items = json.GetObject("appnews").GetArray("newsitems");
		List<Story> storyList = new List<Story>();
		foreach (Value item in items)
		{
			string @string = item.Obj.GetString("contents", "Missing URL");
			storyList.Add(new Story
			{
				name = item.Obj.GetString("title", "Missing Title"),
				url = item.Obj.GetString("url", "Missing URL"),
				date = item.Obj.GetInt("date"),
				text = @string,
				author = item.Obj.GetString("author", "Missing Author")
			});
		}
		story = storyList.ToArray();
		SetStory(0);
	}
}
