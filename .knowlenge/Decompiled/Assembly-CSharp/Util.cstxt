using System.Globalization;
using System.Linq;
using UnityEngine;

public static class Util
{
	public static BaseEntity[] FindTargets(string strFilter, bool onlyPlayers)
	{
		return (from x in BaseNetworkable.serverEntities.Where(delegate(BaseNetworkable x)
			{
				if (x is BasePlayer)
				{
					BasePlayer basePlayer = x as BasePlayer;
					if (string.IsNullOrEmpty(strFilter))
					{
						return true;
					}
					if (strFilter == "!alive" && basePlayer.IsAlive())
					{
						return true;
					}
					if (strFilter == "!sleeping" && basePlayer.IsSleeping())
					{
						return true;
					}
					if (strFilter[0] != '!' && !basePlayer.displayName.Contains(strFilter, CompareOptions.IgnoreCase) && !basePlayer.UserIDString.Contains(strFilter))
					{
						return false;
					}
					return true;
				}
				if (onlyPlayers)
				{
					return false;
				}
				if (string.IsNullOrEmpty(strFilter))
				{
					return false;
				}
				return x.ShortPrefabName.Contains(strFilter) ? true : false;
			})
			select x as BaseEntity).ToArray();
	}
}
