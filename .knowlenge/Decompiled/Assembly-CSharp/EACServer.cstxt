using System.Collections.Generic;
using System.IO;
using EasyAntiCheat.Server;
using EasyAntiCheat.Server.Cerberus;
using EasyAntiCheat.Server.Hydra;
using EasyAntiCheat.Server.Scout;
using Network;

public class EACServer
{
	public static ICerberus<EasyAntiCheat.Server.Hydra.Client> playerTracker;

	public static Scout eacScout;

	private static Dictionary<EasyAntiCheat.Server.Hydra.Client, Connection> client2connection;

	private static Dictionary<Connection, EasyAntiCheat.Server.Hydra.Client> connection2client;

	private static Dictionary<Connection, ClientStatus> connection2status;

	private static EasyAntiCheatServer<EasyAntiCheat.Server.Hydra.Client> easyAntiCheat;

	public static void Encrypt(Connection connection, MemoryStream src, int srcOffset, MemoryStream dst, int dstOffset)
	{
	}

	public static void Decrypt(Connection connection, MemoryStream src, int srcOffset, MemoryStream dst, int dstOffset)
	{
	}

	public static EasyAntiCheat.Server.Hydra.Client GetClient(Connection connection)
	{
		return default(EasyAntiCheat.Server.Hydra.Client);
	}

	public static Connection GetConnection(EasyAntiCheat.Server.Hydra.Client client)
	{
		return null;
	}

	public static bool IsAuthenticated(Connection connection)
	{
		return true;
	}

	private static void OnAuthenticatedLocal(Connection connection)
	{
	}

	private static void OnAuthenticatedRemote(Connection connection)
	{
	}

	public static bool ShouldIgnore(Connection connection)
	{
		return true;
	}

	private static void HandleClientUpdate(ClientStatusUpdate<EasyAntiCheat.Server.Hydra.Client> clientStatus)
	{
	}

	private static void SendToClient(EasyAntiCheat.Server.Hydra.Client client, byte[] message, int messageLength)
	{
	}

	public static void DoStartup()
	{
	}

	public static void DoUpdate()
	{
	}

	public static void DoShutdown()
	{
	}

	public static void OnLeaveGame(Connection connection)
	{
	}

	public static void OnJoinGame(Connection connection)
	{
	}

	public static void OnStartLoading(Connection connection)
	{
	}

	public static void OnFinishLoading(Connection connection)
	{
	}

	public static void OnMessageReceived(Message message)
	{
	}

	static EACServer()
	{
		client2connection = new Dictionary<EasyAntiCheat.Server.Hydra.Client, Connection>();
		connection2client = new Dictionary<Connection, EasyAntiCheat.Server.Hydra.Client>();
		connection2status = new Dictionary<Connection, ClientStatus>();
		easyAntiCheat = null;
	}
}
