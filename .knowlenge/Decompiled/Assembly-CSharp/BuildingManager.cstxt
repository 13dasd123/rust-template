using ConVar;
using UnityEngine;

public class BuildingManager
{
	public static ListHashSet<DecayEntity> DecayEntities = new ListHashSet<DecayEntity>();

	private static int decayTickIndex = 0;

	public static void ServerCycle()
	{
		using (TimeWarning.New("StabilityCheckQueue"))
		{
			StabilityEntity.stabilityCheckQueue.RunQueue(Stability.stabilityqueue);
		}
		using (TimeWarning.New("UpdateSurroundingsQueue"))
		{
			StabilityEntity.updateSurroundingsQueue.RunQueue(Stability.surroundingsqueue);
		}
		using (TimeWarning.New("UpdateSkinQueue"))
		{
			BuildingBlock.updateSkinQueueServer.RunQueue(1.0);
		}
		using (TimeWarning.New("DecayTick"))
		{
			BufferList<DecayEntity> values = DecayEntities.Values;
			int num = Mathf.Min(values.Count, 10);
			for (int i = 0; i < num; i++)
			{
				if (decayTickIndex >= values.Count)
				{
					decayTickIndex = 0;
				}
				DecayEntity decayEntity = values[decayTickIndex++];
				decayEntity.DecayTick();
			}
		}
	}
}
