using UnityEngine;

public class Support
{
	public StabilityEntity parent;

	public EntityLink link;

	public float factor = 1f;

	public Support(StabilityEntity parent, EntityLink link, float factor)
	{
		this.parent = parent;
		this.link = link;
		this.factor = factor;
	}

	public StabilityEntity SupportEntity(StabilityEntity ignoreEntity = null)
	{
		StabilityEntity stabilityEntity = null;
		for (int i = 0; i < link.connections.Count; i++)
		{
			StabilityEntity stabilityEntity2 = link.connections[i].owner as StabilityEntity;
			Socket_Base socket = link.connections[i].socket;
			if (!((Object)(object)stabilityEntity2 == (Object)null) && !((Object)(object)stabilityEntity2 == (Object)(object)parent) && !((Object)(object)stabilityEntity2 == (Object)(object)ignoreEntity) && !stabilityEntity2.isClient && !stabilityEntity2.IsDestroyed && !(socket is ConstructionSocket { femaleNoStability: not false }) && ((Object)(object)stabilityEntity == (Object)null || stabilityEntity2.cachedDistanceFromGround < stabilityEntity.cachedDistanceFromGround))
			{
				stabilityEntity = stabilityEntity2;
			}
		}
		return stabilityEntity;
	}
}
