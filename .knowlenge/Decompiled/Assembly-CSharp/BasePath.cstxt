using System.Collections.Generic;
using UnityEngine;

public class BasePath : MonoBehaviour
{
	public List<BasePathNode> nodes;

	public List<PathInterestNode> interestZones;

	public List<PathSpeedZone> speedZones;

	public void Start()
	{
	}

	public void GetNodesNear(Vector3 point, ref List<BasePathNode> nearNodes, float dist = 10f)
	{
		foreach (BasePathNode node in nodes)
		{
			float num = Vector3Ex.Distance2D(point, node.transform.position);
			if (num <= dist)
			{
				nearNodes.Add(node);
			}
		}
	}

	public BasePathNode GetClosestToPoint(Vector3 point)
	{
		BasePathNode result = nodes[0];
		float num = float.PositiveInfinity;
		foreach (BasePathNode node in nodes)
		{
			float num2 = Vector3.Distance(point, node.transform.position);
			if (num2 < num)
			{
				num = num2;
				result = node;
			}
		}
		return result;
	}

	public PathInterestNode GetRandomInterestNodeAwayFrom(Vector3 from, float dist = 10f)
	{
		PathInterestNode pathInterestNode = null;
		int num = 0;
		while (pathInterestNode == null && num < 20)
		{
			pathInterestNode = interestZones[Random.Range(0, interestZones.Count)];
			if (Vector3.Distance(pathInterestNode.transform.position, from) < 10f)
			{
				pathInterestNode = null;
				num++;
				continue;
			}
			break;
		}
		if (pathInterestNode == null)
		{
			pathInterestNode = interestZones[0];
		}
		return pathInterestNode;
	}
}
