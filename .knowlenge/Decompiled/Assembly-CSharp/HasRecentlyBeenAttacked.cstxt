using Apex.Serialization;
using Rust.Ai;

public sealed class HasRecentlyBeenAttacked : BaseScorer
{
	[ApexSerialization]
	public float WithinSeconds = 10f;

	[ApexSerialization]
	public bool BooleanResult;

	public override float GetScore(BaseContext c)
	{
		if (float.IsInfinity(c.Entity.SecondsSinceAttacked) || float.IsNaN(c.Entity.SecondsSinceAttacked))
		{
			return 0f;
		}
		if (BooleanResult)
		{
			return (!(c.Entity.SecondsSinceAttacked <= WithinSeconds)) ? 0f : 1f;
		}
		return (WithinSeconds - c.Entity.SecondsSinceAttacked) / WithinSeconds;
	}
}
