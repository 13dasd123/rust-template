using Rust.Ai.HTN;
using Rust.Ai.HTN.Reasoning;
using Rust.Ai.HTN.ScientistJunkpile;
using UnityEngine;

public class AtLastKnownEnemyPlayerLocationReasoner : INpcReasoner
{
	public float TickFrequency { get; set; }

	public float LastTickTime { get; set; }

	public void Tick(IHTNAgent npc, float deltaTime, float time)
	{
		if (!(npc.AiDomain.NpcContext is ScientistJunkpileContext scientistJunkpileContext))
		{
			return;
		}
		BaseNpcMemory.EnemyPlayerInfo primaryKnownEnemyPlayer = scientistJunkpileContext.Memory.PrimaryKnownEnemyPlayer;
		if (primaryKnownEnemyPlayer.PlayerInfo.Player != null)
		{
			Vector3 destination = ScientistJunkpileDomain.JunkpileNavigateToLastKnownLocationOfPrimaryEnemyPlayer.GetDestination(scientistJunkpileContext);
			float sqrMagnitude = (destination - scientistJunkpileContext.Body.transform.position).sqrMagnitude;
			if (sqrMagnitude < 1f)
			{
				scientistJunkpileContext.SetFact(Facts.AtLocationLastKnownLocationOfPrimaryEnemyPlayer, 1);
				return;
			}
		}
		scientistJunkpileContext.SetFact(Facts.AtLocationLastKnownLocationOfPrimaryEnemyPlayer, 0);
	}
}
