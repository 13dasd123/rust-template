using Rust.Ai.HTN;
using Rust.Ai.HTN.Bear;
using Rust.Ai.HTN.Reasoning;

public class AtLastKnownEnemyPlayerLocationReasoner : INpcReasoner
{
	public float TickFrequency { get; set; }

	public float LastTickTime { get; set; }

	public void Tick(IHTNAgent npc, float deltaTime, float time)
	{
		if (npc.AiDomain.NpcContext is BearContext bearContext)
		{
			if (bearContext.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player != null && (BearDomain.BearNavigateToLastKnownLocationOfPrimaryEnemyPlayer.GetDestination(bearContext) - bearContext.Body.transform.position).sqrMagnitude < 1f)
			{
				bearContext.SetFact(Facts.AtLocationLastKnownLocationOfPrimaryEnemyPlayer, 1);
			}
			else
			{
				bearContext.SetFact(Facts.AtLocationLastKnownLocationOfPrimaryEnemyPlayer, 0);
			}
		}
	}
}
