using UnityEngine;

public class EyeController : MonoBehaviour
{
	public const float MaxLookDot = 0.8f;

	public bool debug;

	public Transform LeftEye;

	public Transform RightEye;

	public Transform EyeTransform;

	public Vector3 Fudge = new Vector3(0f, 90f, 0f);

	public Vector3 FlickerRange;

	private Transform Focus;

	private float FocusUpdateTime;

	private Vector3 Flicker;

	private Vector3 FlickerTarget;

	private float TimeToUpdateFlicker;

	private float FlickerSpeed;

	public void UpdateEyes()
	{
		Vector3 vector = EyeTransform.position + EyeTransform.forward * 100f;
		Vector3 vector2 = vector;
		UpdateFocus(vector);
		UpdateFlicker();
		if (Focus != null)
		{
			vector2 = Focus.position;
			Vector3 vector3 = EyeTransform.position - vector;
			Vector3 vector4 = EyeTransform.position - vector2;
			float num = Vector3.Dot(vector3.normalized, vector4.normalized);
			if (num < 0.8f)
			{
				Focus = null;
			}
		}
		UpdateEye(LeftEye, vector2);
		UpdateEye(RightEye, vector2);
	}

	private void UpdateEye(Transform eye, Vector3 LookAt)
	{
		eye.rotation = Quaternion.LookRotation((LookAt - eye.position).normalized, EyeTransform.up) * Quaternion.Euler(Fudge) * Quaternion.Euler(Flicker);
	}

	private void UpdateFlicker()
	{
		TimeToUpdateFlicker -= Time.deltaTime;
		Flicker = Vector3.Lerp(Flicker, FlickerTarget, Time.deltaTime * FlickerSpeed);
		if (TimeToUpdateFlicker < 0f)
		{
			TimeToUpdateFlicker = Random.Range(0.2f, 2f);
			FlickerTarget = new Vector3(Random.Range(0f - FlickerRange.x, FlickerRange.x), Random.Range(0f - FlickerRange.y, FlickerRange.y), Random.Range(0f - FlickerRange.z, FlickerRange.z)) * ((!Focus) ? 1f : 0.01f);
			FlickerSpeed = Random.Range(10f, 30f);
		}
	}

	private void UpdateFocus(Vector3 defaultLookAtPos)
	{
	}
}
