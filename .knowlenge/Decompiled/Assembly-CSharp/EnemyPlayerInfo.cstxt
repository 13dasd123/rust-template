using System;
using UnityEngine;

[Serializable]
public struct EnemyPlayerInfo
{
	public float Time;

	public NpcPlayerInfo PlayerInfo;

	public Vector3 LastKnownLocalPosition;

	public Vector3 LastKnownLocalHeading;

	public Vector3 OurLastLocalPositionWhenLastSeen;

	public bool BodyVisibleWhenLastNoticed;

	public bool HeadVisibleWhenLastNoticed;

	public Vector3 LastKnownPosition
	{
		get
		{
			if (PlayerInfo.Player != null)
			{
				BaseEntity parentEntity = PlayerInfo.Player.GetParentEntity();
				if (parentEntity != null)
				{
					return parentEntity.transform.TransformPoint(LastKnownLocalPosition);
				}
			}
			return LastKnownLocalPosition;
		}
	}

	public Vector3 LastKnownHeading
	{
		get
		{
			if (PlayerInfo.Player != null)
			{
				BaseEntity parentEntity = PlayerInfo.Player.GetParentEntity();
				if (parentEntity != null)
				{
					return parentEntity.transform.TransformDirection(LastKnownLocalHeading);
				}
			}
			return LastKnownLocalHeading;
		}
	}

	public Vector3 OurLastPositionWhenLastSeen
	{
		get
		{
			if (PlayerInfo.Player != null)
			{
				BaseEntity parentEntity = PlayerInfo.Player.GetParentEntity();
				if (parentEntity != null)
				{
					return parentEntity.transform.TransformPoint(OurLastLocalPositionWhenLastSeen);
				}
			}
			return OurLastLocalPositionWhenLastSeen;
		}
	}
}
