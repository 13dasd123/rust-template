using UnityEngine;

public class TerrainGenerator : SingletonComponent<TerrainGenerator>
{
	public TerrainConfig config;

	public uint EditorSize;

	private const float HeightMapRes = 0.5f;

	private const float SplatMapRes = 0.5f;

	private const float BaseMapRes = 0.01f;

	public GameObject CreateTerrain()
	{
		Debug.Log("Generating terrain of size " + World.Size + " with seed " + World.Seed);
		TerrainData terrainData = new TerrainData();
		terrainData.baseMapResolution = Mathf.NextPowerOfTwo((int)((float)World.Size * 0.01f));
		terrainData.heightmapResolution = Mathf.NextPowerOfTwo((int)((float)World.Size * 0.5f)) + 1;
		terrainData.alphamapResolution = Mathf.NextPowerOfTwo((int)((float)World.Size * 0.5f));
		terrainData.size = new Vector3(World.Size, 1000f, World.Size);
		Terrain component = Terrain.CreateTerrainGameObject(terrainData).GetComponent<Terrain>();
		component.transform.position = base.transform.position + new Vector3((float)(0L - (long)World.Size) * 0.5f, 0f, (float)(0L - (long)World.Size) * 0.5f);
		component.castShadows = config.CastShadows;
		component.materialType = Terrain.MaterialType.Custom;
		component.materialTemplate = config.Material;
		component.gameObject.tag = base.gameObject.tag;
		component.gameObject.layer = base.gameObject.layer;
		TerrainCollider component2 = component.gameObject.GetComponent<TerrainCollider>();
		component2.sharedMaterial = config.GenericMaterial;
		TerrainMeta terrainMeta = component.gameObject.AddComponent<TerrainMeta>();
		component.gameObject.AddComponent<TerrainPhysics>();
		component.gameObject.AddComponent<TerrainColors>();
		component.gameObject.AddComponent<TerrainCollision>();
		component.gameObject.AddComponent<TerrainBiomeMap>();
		component.gameObject.AddComponent<TerrainAlphaMap>();
		component.gameObject.AddComponent<TerrainHeightMap>();
		component.gameObject.AddComponent<TerrainSplatMap>();
		component.gameObject.AddComponent<TerrainTopologyMap>();
		component.gameObject.AddComponent<TerrainWaterMap>();
		component.gameObject.AddComponent<TerrainPath>();
		terrainMeta.terrain = component;
		terrainMeta.config = config;
		Object.DestroyImmediate(base.gameObject);
		return component.gameObject;
	}
}
