using UnityEngine;

public class GenerateCliffTopology : ProceduralComponent
{
	public bool KeepExisting = true;

	private const int filter = 8444928;

	public override void Process(uint seed)
	{
		TerrainSplatMap splatmap = TerrainMeta.SplatMap;
		TerrainHeightMap heightmap = TerrainMeta.HeightMap;
		TerrainTopologyMap topomap = TerrainMeta.TopologyMap;
		int topores = topomap.res;
		Parallel.For(0, topores, delegate(int z)
		{
			float normZ = topomap.Coordinate(z);
			for (int i = 0; i < topores; i++)
			{
				float normX = topomap.Coordinate(i);
				float slope = heightmap.GetSlope(normX, normZ);
				float splat = splatmap.GetSplat(normX, normZ, 8);
				if (slope > 40f || splat > 0.4f)
				{
					topomap.AddTopology(i, z, 2);
				}
				else if (!KeepExisting && slope < 20f && splat < 0.2f && (topomap.GetTopology(normX, normZ) & 0x80DC00) != 0)
				{
					topomap.RemoveTopology(i, z, 2);
				}
			}
		});
		int[,] map = topomap.dst;
		ImageProcessing.Dilate2D(map, 4194306, 1, delegate(int x, int y)
		{
			if ((map[x, y] & 2) == 0)
			{
				map[x, y] |= 4194304;
			}
		});
	}
}
