using Oxide.Core;
using UnityEngine;

public class IsActiveItem : Conditional
{
	public static bool Test(uint id, string debugName, BaseEntity ent, BasePlayer player)
	{
		//IL_0050: Unknown result type (might be due to invalid IL or missing references)
		//IL_005b: Unknown result type (might be due to invalid IL or missing references)
		//IL_006f: Unknown result type (might be due to invalid IL or missing references)
		//IL_007a: Unknown result type (might be due to invalid IL or missing references)
		if ((Object)(object)ent == (Object)null || (Object)(object)player == (Object)null)
		{
			return false;
		}
		if (ent.net == null || player.net == null)
		{
			return false;
		}
		object obj = Interface.CallHook("OnEntityActiveCheck", (object)ent, (object)player, (object)id, (object)debugName);
		if (obj is bool)
		{
			return (bool)obj;
		}
		if (ent.net.ID == player.net.ID)
		{
			return true;
		}
		if (ent.parentEntity.uid != player.net.ID)
		{
			return false;
		}
		Item activeItem = player.GetActiveItem();
		if (activeItem == null)
		{
			return false;
		}
		if ((Object)(object)activeItem.GetHeldEntity() != (Object)(object)ent)
		{
			return false;
		}
		return true;
	}
}
