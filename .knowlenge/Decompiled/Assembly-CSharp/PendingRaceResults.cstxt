using System.Collections.Generic;
using UnityEngine;

private class PendingRaceResults
{
	private class Completion
	{
		public List<BasePlayer> players = new List<BasePlayer>();

		public float time;

		public bool valid;
	}

	private List<Completion> Completions = new List<Completion>();

	public int totalParticipants;

	public int RegisterCompletion(List<BasePlayer> forPlayers, float time, bool valid)
	{
		//IL_006c: Unknown result type (might be due to invalid IL or missing references)
		//IL_0072: Expected O, but got Unknown
		Completion completion = new Completion();
		foreach (BasePlayer forPlayer in forPlayers)
		{
			completion.players.Add(forPlayer);
		}
		completion.time = time;
		completion.valid = valid;
		Completions.Add(completion);
		if (Completions.Count == totalParticipants)
		{
			TextTable val = new TextTable();
			val.AddColumns(new string[3] { "Place", "Players", "Time" });
			for (int i = 0; i < Completions.Count; i++)
			{
				Completion completion2 = Completions[i];
				if (!completion2.valid)
				{
					continue;
				}
				string text = "";
				foreach (BasePlayer player in completion2.players)
				{
					text = text + player.displayName + ",";
				}
				val.AddRow(new string[3]
				{
					$"P{i + 1}",
					text,
					MathEx.SnapTo(completion2.time, 0.1f).ToString()
				});
			}
			string msg = ((object)val).ToString();
			foreach (Completion completion3 in Completions)
			{
				foreach (BasePlayer player2 in completion3.players)
				{
					player2.ChatMessage(msg);
				}
			}
		}
		return Completions.Count;
	}
}
