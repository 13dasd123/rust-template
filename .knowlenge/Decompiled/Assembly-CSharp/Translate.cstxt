using System;
using Facepunch;
using UnityEngine;

public static class Translate
{
	[Serializable]
	public class Phrase
	{
		public string token;

		[TextArea]
		public string english;

		public virtual string translated
		{
			get
			{
				if (string.IsNullOrEmpty(token))
				{
					return english;
				}
				return english;
			}
		}

		public Phrase(string t = "", string eng = "")
		{
			token = t;
			english = eng;
		}

		public bool IsValid()
		{
			return !string.IsNullOrEmpty(token);
		}
	}

	[Serializable]
	public class TokenisedPhrase : Phrase
	{
		public override string translated
		{
			get
			{
				string text = base.translated;
				text = text.Replace("[inventory.toggle]", string.Format("[{0}]", Facepunch.Input.GetButtonWithBind("inventory.toggle").ToUpper()));
				text = text.Replace("[inventory.togglecrafting]", string.Format("[{0}]", Facepunch.Input.GetButtonWithBind("inventory.togglecrafting").ToUpper()));
				text = text.Replace("[+map]", string.Format("[{0}]", Facepunch.Input.GetButtonWithBind("+map").ToUpper()));
				text = text.Replace("[inventory.examineheld]", string.Format("[{0}]", Facepunch.Input.GetButtonWithBind("inventory.examineheld").ToUpper()));
				text = text.Replace("[slot2]", string.Format("[{0}]", Facepunch.Input.GetButtonWithBind("+slot2").ToUpper()));
				text = text.Replace("[attack]", string.Format("[{0}]", TranslateMouseButton(Facepunch.Input.GetButtonWithBind("+attack")).ToUpper()));
				text = text.Replace("[attack2]", string.Format("[{0}]", TranslateMouseButton(Facepunch.Input.GetButtonWithBind("+attack2")).ToUpper()));
				text = text.Replace("[+use]", string.Format("[{0}]", TranslateMouseButton(Facepunch.Input.GetButtonWithBind("+use")).ToUpper()));
				text = text.Replace("[+altlook]", string.Format("[{0}]", TranslateMouseButton(Facepunch.Input.GetButtonWithBind("+altlook")).ToUpper()));
				text = text.Replace("[+reload]", string.Format("[{0}]", TranslateMouseButton(Facepunch.Input.GetButtonWithBind("+reload")).ToUpper()));
				return text.Replace("[+voice]", string.Format("[{0}]", TranslateMouseButton(Facepunch.Input.GetButtonWithBind("+voice")).ToUpper()));
			}
		}

		public TokenisedPhrase(string t = "", string eng = "")
			: base(t, eng)
		{
		}
	}

	public static string TranslateMouseButton(string mouseButton)
	{
		return mouseButton switch
		{
			"mouse0" => "Left Mouse", 
			"mouse1" => "Right Mouse", 
			"mouse2" => "Center Mouse", 
			_ => mouseButton, 
		};
	}
}
