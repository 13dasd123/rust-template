using Apex.AI;
using Apex.Serialization;

public class AStarHasItem : ContextualScorerBase<ScientistAStarContext>
{
	[ApexSerialization]
	public ItemType Value;

	public override float Score(ScientistAStarContext c)
	{
		c.Body.inventory.AllItemsNoAlloc(ref BaseNpcContext.InventoryLookupCache);
		foreach (Item item in BaseNpcContext.InventoryLookupCache)
		{
			if (Value == ItemType.HealingItem && item.info.category == ItemCategory.Medical)
			{
				return score;
			}
			if (Value == ItemType.MeleeWeapon && item.info.category == ItemCategory.Weapon && item.GetHeldEntity() is BaseMelee)
			{
				return score;
			}
			if (Value == ItemType.ProjectileWeapon && item.info.category == ItemCategory.Weapon && item.GetHeldEntity() is BaseProjectile)
			{
				return score;
			}
			if (Value == ItemType.ThrowableWeapon && item.info.category == ItemCategory.Weapon && item.GetHeldEntity() is ThrownWeapon)
			{
				return score;
			}
			if (Value == ItemType.LightSourceItem && item.info.category == ItemCategory.Tool)
			{
				return score;
			}
			if (Value == ItemType.ResearchItem && item.info.category == ItemCategory.Tool)
			{
				return score;
			}
		}
		return 0f;
	}
}
