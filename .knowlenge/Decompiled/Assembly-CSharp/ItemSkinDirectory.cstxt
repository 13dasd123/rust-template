using System;
using System.Linq;
using UnityEngine;

public class ItemSkinDirectory : ScriptableObject
{
	[Serializable]
	public struct Skin
	{
		public int id;

		public int itemid;

		public string name;

		public bool isSkin;

		private SteamInventoryItem _invItem;

		public SteamInventoryItem invItem
		{
			get
			{
				if (_invItem == null)
				{
					_invItem = FileSystem.Load<SteamInventoryItem>(name);
				}
				return _invItem;
			}
		}
	}

	private static ItemSkinDirectory _Instance;

	public Skin[] skins;

	public static ItemSkinDirectory Instance
	{
		get
		{
			if (_Instance == null)
			{
				_Instance = FileSystem.Load<ItemSkinDirectory>("assets/skins.asset");
			}
			return _Instance;
		}
	}

	public static Skin[] ForItem(ItemDefinition item)
	{
		return Instance.skins.Where((Skin x) => x.isSkin && x.itemid == item.itemid).ToArray();
	}

	public static Skin FindByInventoryDefinitionId(int id)
	{
		return Instance.skins.Where((Skin x) => x.id == id).FirstOrDefault();
	}
}
