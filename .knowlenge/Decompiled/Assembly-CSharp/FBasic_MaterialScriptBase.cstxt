using UnityEngine;

public abstract class FBasic_MaterialScriptBase : MonoBehaviour
{
	protected Material RendererMaterial;

	protected Renderer ObjectRenderer;

	protected Material GetRendererMaterial()
	{
		//IL_00be: Unknown result type (might be due to invalid IL or missing references)
		//IL_00c8: Expected O, but got Unknown
		if (!Application.isPlaying && (Object)(object)ObjectRenderer != (Object)null && (Object)(object)ObjectRenderer.sharedMaterial != (Object)(object)RendererMaterial)
		{
			RendererMaterial = null;
		}
		if ((Object)(object)RendererMaterial == (Object)null || (Object)(object)ObjectRenderer == (Object)null)
		{
			Renderer val = ((Component)this).gameObject.GetComponent<Renderer>();
			if ((Object)(object)val == (Object)null)
			{
				val = ((Component)this).gameObject.GetComponentInChildren<Renderer>();
			}
			if ((Object)(object)val == (Object)null)
			{
				Debug.Log((object)("<color=red>No renderer in " + ((Object)((Component)this).gameObject).name + "!</color>"));
				return null;
			}
			ObjectRenderer = val;
			if (Application.isPlaying)
			{
				RendererMaterial = val.material;
			}
			else
			{
				RendererMaterial = new Material(val.sharedMaterial);
			}
		}
		return RendererMaterial;
	}
}
