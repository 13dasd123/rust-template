using System;
using System.Collections.Generic;
using UnityEngine;

[CreateAssetMenu(menuName = "Rust/Player Inventory Properties")]
public class PlayerInventoryProperties : ScriptableObject
{
	[Serializable]
	public class ItemAmountSkinned : ItemAmount
	{
		public ulong skinOverride;

		public ulong GetRandomSkin()
		{
			return skinOverride;
		}
	}

	public string niceName;

	public int order = 100;

	public List<ItemAmount> belt;

	public List<ItemAmount> main;

	public List<ItemAmount> wear;

	public List<ItemAmountSkinned> skinnedWear;

	public void GiveToPlayer(BasePlayer player)
	{
		if (player == null)
		{
			return;
		}
		player.inventory.Strip();
		foreach (ItemAmount item in belt)
		{
			player.inventory.GiveItem(ItemManager.Create(item.itemDef, (int)item.amount, 0uL), player.inventory.containerBelt);
		}
		foreach (ItemAmount item2 in main)
		{
			player.inventory.GiveItem(ItemManager.Create(item2.itemDef, (int)item2.amount, 0uL), player.inventory.containerMain);
		}
		if (skinnedWear.Count > 0)
		{
			foreach (ItemAmountSkinned item3 in skinnedWear)
			{
				player.inventory.GiveItem(ItemManager.Create(item3.itemDef, (int)item3.amount, item3.GetRandomSkin()), player.inventory.containerWear);
			}
		}
		foreach (ItemAmount item4 in wear)
		{
			player.inventory.GiveItem(ItemManager.Create(item4.itemDef, (int)item4.amount, 0uL), player.inventory.containerWear);
		}
	}
}
