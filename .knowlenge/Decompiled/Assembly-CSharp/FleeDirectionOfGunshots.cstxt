using Apex.Serialization;
using Rust.Ai;
using UnityEngine;

public sealed class FleeDirectionOfGunshots : WeightedScorerBase<Vector3>
{
	[ApexSerialization]
	public float WithinSeconds = 10f;

	[ApexSerialization]
	public float Arc = -0.2f;

	public override float GetScore(BaseContext c, Vector3 option)
	{
		BaseNpc baseNpc = c.AIAgent as BaseNpc;
		if (baseNpc == null)
		{
			return 0f;
		}
		if (float.IsInfinity(baseNpc.SecondsSinceLastHeardGunshot) || float.IsNaN(baseNpc.SecondsSinceLastHeardGunshot))
		{
			return 0f;
		}
		float num = (WithinSeconds - baseNpc.SecondsSinceLastHeardGunshot) / WithinSeconds;
		if (num <= 0f)
		{
			return 0f;
		}
		Vector3 rhs = option - baseNpc.transform.localPosition;
		float num2 = Vector3.Dot(baseNpc.LastHeardGunshotDirection, rhs);
		return (!(Arc > num2)) ? 0f : 1f;
	}
}
