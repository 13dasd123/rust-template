using Unity.Burst;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;

[BurstCompile]
private struct FillRaycastJob : IJobParallelFor
{
	[ReadOnly]
	public NativeArray<Vector3> points;

	public NativeArray<RaycastCommand> commands;

	public Vector3 originPoint;

	public int layerMask;

	public void Execute(int index)
	{
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_000c: Unknown result type (might be due to invalid IL or missing references)
		//IL_000d: Unknown result type (might be due to invalid IL or missing references)
		//IL_000e: Unknown result type (might be due to invalid IL or missing references)
		//IL_0022: Unknown result type (might be due to invalid IL or missing references)
		//IL_0024: Unknown result type (might be due to invalid IL or missing references)
		//IL_0029: Unknown result type (might be due to invalid IL or missing references)
		//IL_002a: Unknown result type (might be due to invalid IL or missing references)
		//IL_002f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0032: Unknown result type (might be due to invalid IL or missing references)
		//IL_0037: Unknown result type (might be due to invalid IL or missing references)
		//IL_0039: Unknown result type (might be due to invalid IL or missing references)
		//IL_004a: Unknown result type (might be due to invalid IL or missing references)
		Vector3 val = points[index];
		if (!(val == Vector3.zero))
		{
			ref NativeArray<RaycastCommand> reference = ref commands;
			Vector3 val2 = originPoint - val;
			reference[index] = new RaycastCommand(val, ((Vector3)(ref val2)).normalized, Vector3.Distance(val, originPoint), layerMask, 1);
		}
	}
}
