using Apex.AI;
using ConVar;
using UnityEngine;

public class AStarCanThrowAtLastKnownLocation : ContextualScorerBase<ScientistAStarContext>
{
	public override float Score(ScientistAStarContext c)
	{
		if (!Try(c))
		{
			return 0f;
		}
		return score;
	}

	public static bool Try(ScientistAStarContext c)
	{
		if (!ConVar.AI.npc_use_thrown_weapons)
		{
			return false;
		}
		if (c.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player == null)
		{
			return false;
		}
		if (UnityEngine.Time.time - AStarUseThrowableWeapon.LastTimeThrown < 10f)
		{
			return false;
		}
		Vector3 destination = AStarNavigateToLastKnownLocationOfPrimaryEnemyPlayer.GetDestination(c);
		if ((destination - c.BodyPosition).sqrMagnitude < 0.1f)
		{
			return false;
		}
		Vector3 vector = destination + PlayerEyes.EyeOffset;
		Vector3 vector2 = c.Memory.PrimaryKnownEnemyPlayer.PlayerInfo.Player.transform.position + PlayerEyes.EyeOffset;
		if ((vector - vector2).sqrMagnitude > 5f)
		{
			return false;
		}
		Vector3 vector3 = c.BodyPosition + PlayerEyes.EyeOffset;
		if (Mathf.Abs(Vector3.Dot((vector3 - vector).normalized, (vector3 - vector2).normalized)) < 0.75f)
		{
			return false;
		}
		if (!c.Body.IsVisible(vector))
		{
			return false;
		}
		return true;
	}
}
