using System;
using FIMSpace.FTools;
using UnityEngine;

[Serializable]
public abstract class FIK_IKBoneBase
{
	public float sqrMagn = 0.1f;

	public float BoneLength = 0.1f;

	public float MotionWeight = 1f;

	public Vector3 InitialLocalPosition;

	public Quaternion InitialLocalRotation;

	public Quaternion LastKeyLocalRotation;

	public FIK_IKBoneBase Child { get; private set; }

	public Transform transform { get; protected set; }

	public FIK_IKBoneBase(Transform t)
	{
		//IL_0042: Unknown result type (might be due to invalid IL or missing references)
		//IL_0047: Unknown result type (might be due to invalid IL or missing references)
		//IL_0053: Unknown result type (might be due to invalid IL or missing references)
		//IL_0058: Unknown result type (might be due to invalid IL or missing references)
		//IL_005f: Unknown result type (might be due to invalid IL or missing references)
		//IL_0064: Unknown result type (might be due to invalid IL or missing references)
		transform = t;
		if (Object.op_Implicit((Object)(object)transform))
		{
			InitialLocalPosition = transform.localPosition;
			InitialLocalRotation = transform.localRotation;
			LastKeyLocalRotation = t.localRotation;
		}
	}

	public virtual void SetChild(FIK_IKBoneBase child)
	{
		//IL_0012: Unknown result type (might be due to invalid IL or missing references)
		//IL_001d: Unknown result type (might be due to invalid IL or missing references)
		//IL_0022: Unknown result type (might be due to invalid IL or missing references)
		//IL_0027: Unknown result type (might be due to invalid IL or missing references)
		//IL_003b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0046: Unknown result type (might be due to invalid IL or missing references)
		//IL_004b: Unknown result type (might be due to invalid IL or missing references)
		//IL_0050: Unknown result type (might be due to invalid IL or missing references)
		if (child != null)
		{
			Child = child;
			Vector3 val = child.transform.position - transform.position;
			sqrMagn = ((Vector3)(ref val)).sqrMagnitude;
			val = child.transform.position - transform.position;
			BoneLength = ((Vector3)(ref val)).sqrMagnitude;
		}
	}
}
