using System.Collections.Generic;
using UnityEngine.Serialization;

public class PlacePowerlineObjects : ProceduralComponent
{
	public PathList.BasicObject[] Start;

	public PathList.BasicObject[] End;

	public PathList.SideObject[] Side;

	[FormerlySerializedAs("PowerlineObjects")]
	public PathList.PathObject[] Path;

	public override void Process(uint seed)
	{
		List<PathList> powerlines = TerrainMeta.Path.Powerlines;
		foreach (PathList item in powerlines)
		{
			PathList.BasicObject[] start = Start;
			foreach (PathList.BasicObject obj in start)
			{
				item.TrimStart(obj);
			}
			PathList.BasicObject[] end = End;
			foreach (PathList.BasicObject obj2 in end)
			{
				item.TrimEnd(obj2);
			}
			PathList.BasicObject[] start2 = Start;
			foreach (PathList.BasicObject obj3 in start2)
			{
				item.SpawnStart(ref seed, obj3);
			}
			PathList.PathObject[] path = Path;
			foreach (PathList.PathObject obj4 in path)
			{
				item.SpawnAlong(ref seed, obj4);
			}
			PathList.SideObject[] side = Side;
			foreach (PathList.SideObject obj5 in side)
			{
				item.SpawnSide(ref seed, obj5);
			}
			PathList.BasicObject[] end2 = End;
			foreach (PathList.BasicObject obj6 in end2)
			{
				item.SpawnEnd(ref seed, obj6);
			}
			item.ResetTrims();
		}
	}
}
