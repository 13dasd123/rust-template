using System;
using System.Threading.Tasks;
using Steamworks;

public class SteamItem : IPlayerItem
{
	public InventoryItem Value;

	public ulong Id => ((InventoryItem)(ref Value)).Id.Value;

	public int DefinitionId => ((InventoryItem)(ref Value)).DefId.Value;

	public int Quantity => ((InventoryItem)(ref Value)).Quantity;

	public DateTimeOffset Acquired => ((InventoryItem)(ref Value)).Acquired.ToUniversalTime();

	public ulong WorkshopId
	{
		get
		{
			if (!((InventoryItem)(ref Value)).Properties.TryGetValue("workshopid", out var value))
			{
				return 0uL;
			}
			return ulong.Parse(value);
		}
	}

	public string ItemShortName
	{
		get
		{
			if (!((InventoryItem)(ref Value)).Properties.TryGetValue("itemshortname", out var value))
			{
				return null;
			}
			return value;
		}
	}

	public SteamItem(InventoryItem item)
	{
		//IL_0007: Unknown result type (might be due to invalid IL or missing references)
		//IL_0008: Unknown result type (might be due to invalid IL or missing references)
		Value = item;
	}

	public async Task Consume()
	{
		await ((InventoryItem)(ref Value)).ConsumeAsync(1);
	}
}
