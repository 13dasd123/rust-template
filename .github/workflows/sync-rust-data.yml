# .github/workflows/sync-rust-data.yml
name: Rust Server Data Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *' # run every 6 hours (UTC: 00:00, 06:00, 12:00, 18:00)

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download install script
        run: |
          # Download the official install_rust_server.sh from GitHub
          curl -sL https://raw.githubusercontent.com/publicrust/rust-server-setup/main/install_rust_server.sh \
            -o install_rust_server.sh
          chmod +x install_rust_server.sh

      - name: Install Rust server
        run: |
          # Execute the install script; it will download and unpack the server into ./server/
          ./install_rust_server.sh

      - name: Deploy plugin
        run: |
          # Copy your compiled plugin into the server plugins directory
          cp plugin/collector.so server/plugins/

      - name: Start Rust server
        run: |
          # Launch the Rust server in headless batch mode
          nohup server/RustDedicated -batchmode -nographics +server.port 28015 \
            > server/server.log 2>&1 &
          # Save the process ID for later termination
          echo $! > server/server.pid

      - name: Wait for JSON output
        run: |
          # Wait up to 5 minutes for the plugin to generate info.json
          timeout 300 bash -c 'until [ -f server/data/info.json ]; do sleep 5; done'

      - name: Upload JSON artifact
        uses: actions/upload-artifact@v3
        with:
          name: rust-server-data
          path: server/data/info.json

      - name: Stop Rust server
        run: |
          # Terminate the Rust server process gracefully
          kill $(cat server/server.pid) || true
