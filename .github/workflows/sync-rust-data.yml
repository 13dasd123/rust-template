# .github/workflows/run-rust-plugin.yml
name: Run Rust Server Plugin

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # run every 6 hours (UTC)

jobs:
  run-plugin:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # up to 6 hours

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download and execute install script
        run: |
          # Download the installer that sets up the server, Oxide, and plugin
          curl -sL https://raw.githubusercontent.com/publicrust/rust-server-setup/main/install_rust_server.sh \
            -o install_rust_server.sh
          # Make the installer executable
          chmod +x install_rust_server.sh
          # Run the installer script; it will download server, install Oxide, deploy plugin, start server in background, and save PID
          ./install_rust_server.sh

      - name: Wait for StringPool dump
        run: |
          # Wait up to 5 minutes for the plugin to generate stringpool_dump.json
          timeout 300 bash -c 'until [ -f "$HOME/rust_server/oxide/data/stringpool_dump.json" ]; do sleep 5; done'

      - name: Stop Rust server
        run: |
          # Terminate the server process using the saved PID
          kill $(cat "$HOME/rust_server/server.pid") || true

      - name: Upload StringPool dump
        uses: actions/upload-artifact@v3
        with:
          name: stringpool-dump
          path: ${{ env.HOME }}/rust_server/oxide/data/stringpool_dump.json
